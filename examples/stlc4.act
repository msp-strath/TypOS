-- trace { exec }

syntax
  { 'Type = ['EnumOrTag  [ 'Base 'Nat 'Bool]
                         [['Arr  'Type 'Type]
            ]]
  }

^type : $'Type.
type@p = p?ty. case $ty
  { 'Base ->
  ; 'Nat ->
  ; 'Bool ->
  ; ['Arr S T] -> (type@q.q!S. | type@q.q!T.)
  }

syntax
  { 'Check = ['Tag  [ ['Lam ['Bind 'Synth 'Check]]
                      ['Emb 'Synth]
             ]]
  ; 'Synth = ['Tag  [ ['Rad 'Check 'Type]
                      ['App 'Synth 'Check]
             ]]
  }
check : ?'Type. $'Check.
synth : $'Synth. !'Type.
ctxt |- 'Synth -> 'Type

check@p = p?ty. p?tm. case $tm
    { ['Lam \x. body] -> 'Type?S. 'Type?T.
         (ty ~ ['Arr S T]
         | \x. ctxt |- x -> S. check@q. q!T. q!body.)
    ; ['Emb e] -> synth@q. q!e. q?S. S ~ ty
    }
synth@p = p?tm . case (lookup ctxt tm)
  { ['Just S] -> p!S.
  ; 'Nothing -> case $tm
    { ['Rad t ty] -> (check@q. q!ty. q!t. | p!ty. | type@q.q!ty.)
    ; ['App f s] -> 'Type?U. 'Type?V.
         ( synth@q. q!f. q?ty. ty ~ ['Arr U V]
         | check@r. r!U. r!s.
         | p!V.)
    }
  }

exec  check@p. p! ['Arr 'Nat 'Nat].
               p! ['Lam \z. ['Emb ['App ['Rad ['Lam \w. ['Emb w]] ['Arr 'Nat 'Nat]] ['Emb z]]]].
      PRINTF "Store:\n %M\nEnv: %E\nStack:\n %S".
