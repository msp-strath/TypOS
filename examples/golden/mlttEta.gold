ret > ExitFailure 1
out > Warning: mlttEta.act:44:28-67:3
out > Incomplete pattern matching. The following patterns are missing:
out >   'Fst
out >   'Snd
out > when elaborating the judgement definition for checkWorker
out > Warning: mlttEta.act:145:93-152:7
out > Incomplete pattern matching. The following patterns are missing:
out >   'Ty
out >   'One
out >   'Tt
out >   'Fst
out >   'Snd
out >   ['Lam \_. a]
out >   ['Pair a b]
out >   ['Emb a]
out > when elaborating a case branch handling the pattern [['App f1 s1] 'App f2 s2]
out > when elaborating a case branch handling the pattern 'Nothing
out > when elaborating the judgement definition for equalSynthWorker
out > equalSynth
out >  T_0
out >  T_0
out > equalSynth
out >  T_0
out >  T_0
out > Id : ['Pi 'Ty \T. ['Pi ['Emb T] \_. ['Pi ['Emb T] \_. 'Ty]]]
out > equalSynth
out >  T_2
out >  T_2
out > equalSynth
out >  T_2
out >  T_2
out > Ups
out > equalSynth
out >  T_0
out >  T_0
out > Ups
out > equalSynth
out >  T_0
out >  T_0
out > Beta
out > Beta
out > Beta
out > Ups
out > equalSynth
out >  ['App P_2 ['Emb ['Rad ['Emb x_1] ['Emb ['Rad ['Emb T_0] 'Ty]]]]]
out >  ['App P_2 ['Emb ['Rad ['Emb x_1] ['Emb ['Rad ['Emb T_0] 'Ty]]]]]
out > equalSynth
out >  P_2
out >  P_2
out > Ups
out > Ups
out > Ups
out > Ups
out > Ups
out > equalSynth
out >  x_1
out >  x_1
out > refl : ['Pi
out >         'Ty
out >         \T. ['Pi
out >              ['Emb T]
out >              \x. ['Emb
out >                   ['App
out >                    ['App
out >                     ['App
out >                      ['Rad
out >                       ['Lam
out >                        \T. ['Lam
out >                             \x. ['Lam
out >                                  \y. ['Pi ['Pi ['Emb T] \_. 'Ty]
out >                                           \P. ['Pi ['Emb ['App P ['Emb x]]]
out >                                                    \_. ['Emb ['App
out >                                                               P ['Emb y]]]]]]]]
out >                       ['Pi 'Ty \T. ['Pi ['Emb T] \_. ['Pi ['Emb T] \_. 'Ty]]]]
out >                      ['Emb T]] ['Emb x]] ['Emb x]]]]]
out > equalSynth
out >  B_1
out >  B_1
out > equalSynth
out >  A_0
out >  A_0
out > swap : ['Pi 'Ty \A. ['Pi 'Ty \B. ['Pi ['Sg ['Emb A] \_. ['Emb B]]
out >                                       \_. ['Sg ['Emb B] \_. ['Emb A]]]]]
out > equalSynth
out >  B_4
out >  B_4
out > equalSynth
out >  A_3
out >  A_3
out > equalSynth
out >  B_4
out >  B_4
out > equalSynth
out >  A_3
out >  A_3
out > Ups
out > equalSynth
out >  A_0
out >  A_0
out > Ups
out > equalSynth
out >  B_1
out >  B_1
out > Ups
out > Ups
out > equalSynth
out >  B_1
out >  B_1
out > Ups
out > Ups
out > equalSynth
out >  A_0
out >  A_0
out > Ups
out > equalSynth
out >  A_0
out >  A_0
out > Ups
out > equalSynth
out >  B_1
out >  B_1
out > swapswap : ['Pi 'Ty \A. ['Pi 'Ty \B. ['Pi ['Sg ['Emb A] \_. ['Emb B]]
out >                                           \_. ['Sg ['Emb A] \_. ['Emb B]]]]]
out > equalSynth
out >  T_0
out >  T_0
out > equalSynth
out >  T_0
out >  T_0
out > Ups
out > Ups
out > equalSynth
out >  B_4
out >  B_4
out > equalSynth
out >  A_3
out >  A_3
out > equalSynth
out >  B_4
out >  B_4
out > equalSynth
out >  A_3
out >  A_3
out > Ups
out > equalSynth
out >  A_0
out >  A_0
out > Ups
out > equalSynth
out >  B_1
out >  B_1
out > Ups
out > Ups
out > equalSynth
out >  B_1
out >  B_1
out > Ups
out > Ups
out > equalSynth
out >  A_0
out >  A_0
out > Ups
out > equalSynth
out >  A_0
out >  A_0
out > Ups
out > equalSynth
out >  B_1
out >  B_1
out > Ups
out > Ups
out > Ups
out > Ups
out > Beta
out > Beta
out > Beta
out > Ups
out > equalSynth
out >  T_2
out >  T_2
out > equalSynth
out >  T_2
out >  T_2
out > Ups
out > equalSynth
out >  T_0
out >  T_0
out > Ups
out > equalSynth
out >  T_0
out >  T_0
out > Beta
out > Beta
out > Beta
out > Ups
out > equalSynth
out >  ['App P_2 ['Emb ['Rad ['Emb x_1] ['Emb ['Rad ['Emb T_0] 'Ty]]]]]
out >  ['App P_2 ['Emb ['Rad ['Emb x_1] ['Emb ['Rad ['Emb T_0] 'Ty]]]]]
out > equalSynth
out >  P_2
out >  P_2
out > Ups
out > Ups
out > Ups
out > Ups
out > Ups
out > equalSynth
out >  x_1
out >  x_1
out > Ups
out > Beta
out > Beta
out > Beta
out > Ups
out > Ups
out > Ups
out > Ups
out > equalSynth
out >  ['App P_0 ['Emb ['Rad ['Lam \x. ['Emb x]]
out >                        ['Emb ['Rad ['Pi ['Sg 'Ty \_. 'Ty]
out >                                         \_. ['Sg 'Ty \_. 'Ty]] 'Ty]]]]]
out >  ['App P_0 ['Emb ['Rad
out >                   ['Emb ['Rad ['Lam \x. ['Emb x]]
out >                               ['Emb ['Rad ['Pi ['Sg 'Ty \_. 'Ty]
out >                                                \_. ['Sg 'Ty \_. 'Ty]] 'Ty]]]]
out >                   ['Emb ['Rad ['Emb ['Rad ['Pi ['Sg 'Ty \_. 'Ty]
out >                                                \_. ['Sg 'Ty \_. 'Ty]] 'Ty]]
out >                               'Ty]]]]]
out > equalSynth
out >  P_0
out >  P_0
out > Ups
out > Ups
out > Ups
out > Ups
out > Ups
out > Ups
out > Ups
out > Ups
out > Eta Pi
out > Beta
out > Ups
out > Ups
out > Beta
out > Ups
out > Ups
out > Eta Sg
out > equalSynth
out >  ['App ['Rad ['Emb x_1] ['Sg 'Ty \_. 'Ty]] 'Fst]
out >  ['App ['Rad ['Emb x_1] ['Sg 'Ty \_. 'Ty]] 'Fst]
out > equalSynth
out >  ['Rad ['Emb x_1] ['Sg 'Ty \_. 'Ty]]
out >  ['Rad ['Emb x_1] ['Sg 'Ty \_. 'Ty]]
out > equalSynth
out >  x_1
out >  ['Rad ['Emb x_1] ['Sg 'Ty \_. 'Ty]]
out > equalSynth
out >  ['App ['Rad ['Emb x_1] ['Sg 'Ty \_. 'Ty]] 'Snd]
out >  ['App ['Rad ['Emb x_1] ['Sg 'Ty \_. 'Ty]] 'Snd]
out > equalSynth
out >  ['Rad ['Emb x_1] ['Sg 'Ty \_. 'Ty]]
out >  ['Rad ['Emb x_1] ['Sg 'Ty \_. 'Ty]]
out > equalSynth
out >  x_1
out >  ['Rad ['Emb x_1] ['Sg 'Ty \_. 'Ty]]
out > equalSynth
out >  ['App
out >   P_0
out >   ['Emb
out >    ['Rad
out >     ['Emb
out >      ['App
out >       ['App
out >        ['Rad
out >         ['Lam
out >          \A. ['Lam
out >               \B. ['Lam
out >                    \x. ['Emb
out >                         ['App
out >                          ['App
out >                           ['App
out >                            ['Rad
out >                             ['Lam \_. ['Lam \_. ['Lam
out >                                                  \x. ['Pair
out >                                                       ['Emb ['App x 'Snd]]
out >                                                       ['Emb ['App x 'Fst]]]]]]
out >                             ['Pi 'Ty \A. ['Pi 'Ty
out >                                               \B. ['Pi
out >                                                    ['Sg ['Emb A] \_. ['Emb B]]
out >                                                    \_. ['Sg ['Emb B]
out >                                                             \_. ['Emb A]]]]]]
out >                            ['Emb B]] ['Emb A]]
out >                          ['Emb
out >                           ['App
out >                            ['App
out >                             ['App
out >                              ['Rad
out >                               ['Lam \_. ['Lam \_. ['Lam
out >                                                    \x. ['Pair
out >                                                         ['Emb ['App x 'Snd]]
out >                                                         ['Emb ['App x 'Fst]]]]]]
out >                               ['Pi 'Ty \A. ['Pi 'Ty
out >                                                 \B. ['Pi
out >                                                      ['Sg ['Emb A] \_. ['Emb B]]
out >                                                      \_. ['Sg ['Emb B]
out >                                                               \_. ['Emb A]]]]]]
out >                              ['Emb A]] ['Emb B]] ['Emb x]]]]]]]]
out >         ['Pi 'Ty \A. ['Pi 'Ty \B. ['Pi ['Sg ['Emb A] \_. ['Emb B]]
out >                                        \_. ['Sg ['Emb A] \_. ['Emb B]]]]]] 'Ty]
out >       'Ty]] ['Emb ['Rad ['Pi ['Sg 'Ty \_. 'Ty] \_. ['Sg 'Ty \_. 'Ty]] 'Ty]]]]]
out >  ['App P_0 ['Emb ['Rad
out >                   ['Emb ['Rad ['Lam \x. ['Emb x]]
out >                               ['Emb ['Rad ['Pi ['Sg 'Ty \_. 'Ty]
out >                                                \_. ['Sg 'Ty \_. 'Ty]] 'Ty]]]]
out >                   ['Emb ['Rad ['Emb ['Rad ['Pi ['Sg 'Ty \_. 'Ty]
out >                                                \_. ['Sg 'Ty \_. 'Ty]] 'Ty]]
out >                               'Ty]]]]]
out > equalSynth
out >  P_0
out >  P_0
out > Ups
out > Beta
out > Beta
out > Ups
out > Ups
out > Ups
out > Ups
out > Ups
out > Ups
out > Ups
out > Ups
out > Eta Pi
out > Beta
out > Beta
out > Beta
out > Beta
out > Ups
out > Ups
out > Beta
out > Ups
out > Ups
out > Eta Sg
out > Fst
out > Beta
out > Beta
out > Beta
out > Ups
out > Snd
out > Ups
out > Ups
out > Ups
out > Ups
out > Ups
out > equalSynth
out >  ['App ['Rad ['Emb x_2] ['Sg ['Emb ['Rad ['Emb ['Rad 'Ty 'Ty]] 'Ty]]
out >                              \_. ['Emb ['Rad ['Emb ['Rad 'Ty 'Ty]] 'Ty]]]] 'Fst]
out >  ['App ['Rad ['Emb x_2] ['Sg 'Ty \_. 'Ty]] 'Fst]
out > equalSynth
out >  ['Rad ['Emb x_2] ['Sg ['Emb ['Rad ['Emb ['Rad 'Ty 'Ty]] 'Ty]]
out >                        \_. ['Emb ['Rad ['Emb ['Rad 'Ty 'Ty]] 'Ty]]]]
out >  ['Rad ['Emb x_2] ['Sg 'Ty \_. 'Ty]]
out > equalSynth
out >  x_2
out >  ['Rad ['Emb x_2] ['Sg 'Ty \_. 'Ty]]
out > Snd
out > Beta
out > Beta
out > Beta
out > Ups
out > Fst
out > Ups
out > Ups
out > Ups
out > Ups
out > Ups
out > equalSynth
out >  ['App ['Rad ['Emb x_2] ['Sg ['Emb ['Rad ['Emb ['Rad 'Ty 'Ty]] 'Ty]]
out >                              \_. ['Emb ['Rad ['Emb ['Rad 'Ty 'Ty]] 'Ty]]]] 'Snd]
out >  ['App ['Rad ['Emb x_2] ['Sg 'Ty \_. 'Ty]] 'Snd]
out > equalSynth
out >  ['Rad ['Emb x_2] ['Sg ['Emb ['Rad ['Emb ['Rad 'Ty 'Ty]] 'Ty]]
out >                        \_. ['Emb ['Rad ['Emb ['Rad 'Ty 'Ty]] 'Ty]]]]
out >  ['Rad ['Emb x_2] ['Sg 'Ty \_. 'Ty]]
out > equalSynth
out >  x_2
out >  ['Rad ['Emb x_2] ['Sg 'Ty \_. 'Ty]]
out > Beta
out > Beta
out > Beta
out > Ups
out > refl swapswap : ['Pi
out >                  ['Pi ['Emb ['Rad ['Pi ['Sg 'Ty \_. 'Ty] \_. ['Sg 'Ty \_. 'Ty]] 'Ty]] \_. 'Ty]
out >                  \P. ['Pi
out >                       ['Emb ['App P ['Emb ['Rad ['Lam \x. ['Emb x]]
out >                                                 ['Emb ['Rad ['Pi ['Sg 'Ty \_. 'Ty]
out >                                                                  \_. ['Sg 'Ty \_. 'Ty]]
out >                                                             'Ty]]]]]]
out >                       \_. ['Emb
out >                            ['App
out >                             P
out >                             ['Emb
out >                              ['Rad
out >                               ['Emb
out >                                ['App
out >                                 ['App
out >                                  ['Rad
out >                                   ['Lam
out >                                    \A. ['Lam
out >                                         \B. ['Lam
out >                                              \x. ['Emb
out >                                                   ['App
out >                                                    ['App
out >                                                     ['App
out >                                                      ['Rad
out >                                                       ['Lam
out >                                                        \_. ['Lam
out >                                                             \_. ['Lam
out >                                                                  \x. ['Pair
out >                                                                       ['Emb ['App x 'Snd]]
out >                                                                       ['Emb ['App x 'Fst]]]]]]
out >                                                       ['Pi 'Ty
out >                                                            \A. ['Pi
out >                                                                 'Ty
out >                                                                 \B. ['Pi
out >                                                                      ['Sg ['Emb A] \_. ['Emb B]]
out >                                                                      \_. ['Sg ['Emb B]
out >                                                                               \_. ['Emb A]]]]]]
out >                                                      ['Emb B]] ['Emb A]]
out >                                                    ['Emb
out >                                                     ['App
out >                                                      ['App
out >                                                       ['App
out >                                                        ['Rad
out >                                                         ['Lam
out >                                                          \_. ['Lam
out >                                                               \_. ['Lam
out >                                                                    \x. ['Pair
out >                                                                         ['Emb ['App x 'Snd]]
out >                                                                         ['Emb ['App x 'Fst]]]]]]
out >                                                         ['Pi
out >                                                          'Ty
out >                                                          \A. ['Pi
out >                                                               'Ty
out >                                                               \B. ['Pi
out >                                                                    ['Sg ['Emb A] \_. ['Emb B]]
out >                                                                    \_. ['Sg ['Emb B]
out >                                                                             \_. ['Emb A]]]]]]
out >                                                        ['Emb A]] ['Emb B]] ['Emb x]]]]]]]]
out >                                   ['Pi 'Ty \A. ['Pi 'Ty \B. ['Pi ['Sg ['Emb A] \_. ['Emb B]]
out >                                                                  \_. ['Sg ['Emb A]
out >                                                                           \_. ['Emb B]]]]]] 'Ty]
out >                                 'Ty]] ['Emb ['Rad ['Pi ['Sg 'Ty \_. 'Ty] \_. ['Sg 'Ty \_. 'Ty]]
out >                                                   'Ty]]]]]]]]
out > equalSynth
out >  T_0
out >  T_0
out > equalSynth
out >  T_0
out >  T_0
out > Ups
out > Ups
out > equalSynth
out >  B_1
out >  B_1
out > equalSynth
out >  A_0
out >  A_0
out > Ups
out > Ups
out > Ups
out > Ups
out > Beta
out > Beta
out > Beta
out > Ups
out > equalSynth
out >  T_2
out >  T_2
out > equalSynth
out >  T_2
out >  T_2
out > Ups
out > equalSynth
out >  T_0
out >  T_0
out > Ups
out > equalSynth
out >  T_0
out >  T_0
out > Beta
out > Beta
out > Beta
out > Ups
out > equalSynth
out >  ['App P_2 ['Emb ['Rad ['Emb x_1] ['Emb ['Rad ['Emb T_0] 'Ty]]]]]
out >  ['App P_2 ['Emb ['Rad ['Emb x_1] ['Emb ['Rad ['Emb T_0] 'Ty]]]]]
out > equalSynth
out >  P_2
out >  P_2
out > Ups
out > Ups
out > Ups
out > Ups
out > Ups
out > equalSynth
out >  x_1
out >  x_1
out > Ups
out > Beta
out > Beta
out > Beta
out > Ups
out > Ups
out > Ups
out > Ups
out > equalSynth
out >  ['App P_0 ['Emb ['Rad ['Lam \x. ['Emb x]]
out >                        ['Emb ['Rad ['Pi ['Sg 'One \_. 'One]
out >                                         \_. ['Sg 'One \_. 'One]] 'Ty]]]]]
out >  ['App P_0 ['Emb ['Rad
out >                   ['Emb ['Rad ['Lam \x. ['Emb x]]
out >                               ['Emb ['Rad ['Pi ['Sg 'One \_. 'One]
out >                                                \_. ['Sg 'One \_. 'One]] 'Ty]]]]
out >                   ['Emb ['Rad ['Emb ['Rad ['Pi ['Sg 'One \_. 'One]
out >                                                \_. ['Sg 'One \_. 'One]] 'Ty]]
out >                               'Ty]]]]]
out > equalSynth
out >  P_0
out >  P_0
out > Ups
out > Ups
out > Ups
out > Ups
out > Ups
out > Ups
out > Ups
out > Ups
out > Eta Pi
out > Beta
out > Ups
out > Ups
out > Beta
out > Ups
out > Ups
out > Eta Sg
out > equalSynth
out >  ['App
out >   P_0 ['Emb
out >        ['Rad
out >         ['Emb
out >          ['App
out >           ['App
out >            ['Rad ['Lam \_. ['Lam \_. ['Lam \x. ['Pair ['Emb ['App x 'Snd]]
out >                                                       ['Emb ['App x 'Fst]]]]]]
out >                  ['Pi 'Ty \A. ['Pi 'Ty \B. ['Pi ['Sg ['Emb A] \_. ['Emb B]]
out >                                                 \_. ['Sg ['Emb B]
out >                                                          \_. ['Emb A]]]]]]
out >            'One] 'One]] ['Emb ['Rad ['Pi ['Sg 'One \_. 'One]
out >                                          \_. ['Sg 'One \_. 'One]] 'Ty]]]]]
out >  ['App P_0 ['Emb ['Rad
out >                   ['Emb ['Rad ['Lam \x. ['Emb x]]
out >                               ['Emb ['Rad ['Pi ['Sg 'One \_. 'One]
out >                                                \_. ['Sg 'One \_. 'One]] 'Ty]]]]
out >                   ['Emb ['Rad ['Emb ['Rad ['Pi ['Sg 'One \_. 'One]
out >                                                \_. ['Sg 'One \_. 'One]] 'Ty]]
out >                               'Ty]]]]]
out > equalSynth
out >  P_0
out >  P_0
out > Ups
out > Beta
out > Beta
out > Ups
out > Ups
out > Ups
out > Ups
out > Ups
out > Ups
out > Ups
out > Ups
out > Eta Pi
out > Beta
out > Ups
out > Beta
out > Ups
out > Ups
out > Eta Sg
out > Fst
out > Ups
out > Snd
out > Ups
out > Beta
out > Beta
out > Beta
out > Ups
out > refl swap One : ['Pi
out >                  ['Pi ['Emb ['Rad ['Pi ['Sg 'One \_. 'One]
out >                                        \_. ['Sg 'One \_. 'One]] 'Ty]] \_. 'Ty]
out >                  \P. ['Pi
out >                       ['Emb ['App P ['Emb ['Rad ['Lam \x. ['Emb x]]
out >                                                 ['Emb
out >                                                  ['Rad
out >                                                   ['Pi ['Sg 'One \_. 'One]
out >                                                        \_. ['Sg 'One \_. 'One]]
out >                                                   'Ty]]]]]]
out >                       \_. ['Emb
out >                            ['App
out >                             P
out >                             ['Emb
out >                              ['Rad
out >                               ['Emb
out >                                ['App
out >                                 ['App
out >                                  ['Rad
out >                                   ['Lam \_. ['Lam
out >                                              \_. ['Lam
out >                                                   \x. ['Pair
out >                                                        ['Emb ['App x 'Snd]]
out >                                                        ['Emb ['App x 'Fst]]]]]]
out >                                   ['Pi 'Ty \A. ['Pi
out >                                                 'Ty
out >                                                 \B. ['Pi
out >                                                      ['Sg ['Emb A] \_. ['Emb B]]
out >                                                      \_. ['Sg ['Emb B]
out >                                                               \_. ['Emb A]]]]]]
out >                                  'One] 'One]]
out >                               ['Emb ['Rad ['Pi ['Sg 'One \_. 'One]
out >                                                \_. ['Sg 'One \_. 'One]]
out >                                           'Ty]]]]]]]]
out > Error: Did not win
out >
err >
err >
