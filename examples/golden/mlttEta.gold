ret > ExitSuccess
out > equalSynth
out >  T_0
out >  T_0
out > equalSynth
out >  T_0
out >  T_0
out > Id : ['Pi 'Ty \T. ['Pi ['Emb T] \_. ['Pi ['Emb T] \_. 'Ty]]]
out > equalSynth
out >  T_2
out >  T_2
out > equalSynth
out >  T_2
out >  T_2
out > Ups
out > equalSynth
out >  T_0
out >  T_0
out > Ups
out > equalSynth
out >  T_0
out >  T_0
out > Beta
out > Beta
out > Beta
out > Ups
out > equalSynth
out >  ['App P_2 ['Emb ['Rad ['Emb x_1] ['Emb ['Rad ['Emb T_0] 'Ty]]]]]
out >  ['App P_2 ['Emb ['Rad ['Emb x_1] ['Emb ['Rad ['Emb T_0] 'Ty]]]]]
out > equalSynth
out >  P_2
out >  P_2
out > Ups
out > Ups
out > Ups
out > Ups
out > Ups
out > equalSynth
out >  x_1
out >  x_1
out > refl : ['Pi 'Ty \T. ['Pi ['Emb T] \x. ['Emb ['App ['App ['App ['Rad ['Lam \T. ['Lam \x. ['Lam \y. ['Pi ['Pi ['Emb T] \_. 'Ty] \P. ['Pi ['Emb ['App P ['Emb x]]] \_. ['Emb ['App P ['Emb y]]]]]]]] ['Pi 'Ty \T. ['Pi ['Emb T] \_. ['Pi ['Emb T] \_. 'Ty]]]] ['Emb T]] ['Emb x]] ['Emb x]]]]]
out > equalSynth
out >  B_1
out >  B_1
out > equalSynth
out >  A_0
out >  A_0
out > swap : ['Pi 'Ty \A. ['Pi 'Ty \B. ['Pi ['Sg ['Emb A] \_. ['Emb B]] \_. ['Sg ['Emb B] \_. ['Emb A]]]]]
out > equalSynth
out >  B_4
out >  B_4
out > equalSynth
out >  A_3
out >  A_3
out > equalSynth
out >  B_4
out >  B_4
out > equalSynth
out >  A_3
out >  A_3
out > Ups
out > equalSynth
out >  A_0
out >  A_0
out > Ups
out > equalSynth
out >  B_1
out >  B_1
out > Ups
out > Ups
out > equalSynth
out >  B_1
out >  B_1
out > Ups
out > Ups
out > equalSynth
out >  A_0
out >  A_0
out > Ups
out > equalSynth
out >  A_0
out >  A_0
out > Ups
out > equalSynth
out >  B_1
out >  B_1
out > swapswap : ['Pi 'Ty \A. ['Pi 'Ty \B. ['Pi ['Sg ['Emb A] \_. ['Emb B]] \_. ['Sg ['Emb A] \_. ['Emb B]]]]]
out > equalSynth
out >  T_0
out >  T_0
out > equalSynth
out >  T_0
out >  T_0
out > Ups
out > Ups
out > equalSynth
out >  B_4
out >  B_4
out > equalSynth
out >  A_3
out >  A_3
out > equalSynth
out >  B_4
out >  B_4
out > equalSynth
out >  A_3
out >  A_3
out > Ups
out > equalSynth
out >  A_0
out >  A_0
out > Ups
out > equalSynth
out >  B_1
out >  B_1
out > Ups
out > Ups
out > equalSynth
out >  B_1
out >  B_1
out > Ups
out > Ups
out > equalSynth
out >  A_0
out >  A_0
out > Ups
out > equalSynth
out >  A_0
out >  A_0
out > Ups
out > equalSynth
out >  B_1
out >  B_1
out > Ups
out > Ups
out > Ups
out > Ups
out > Beta
out > Beta
out > Beta
out > Ups
out > equalSynth
out >  T_2
out >  T_2
out > equalSynth
out >  T_2
out >  T_2
out > Ups
out > equalSynth
out >  T_0
out >  T_0
out > Ups
out > equalSynth
out >  T_0
out >  T_0
out > Beta
out > Beta
out > Beta
out > Ups
out > equalSynth
out >  ['App P_2 ['Emb ['Rad ['Emb x_1] ['Emb ['Rad ['Emb T_0] 'Ty]]]]]
out >  ['App P_2 ['Emb ['Rad ['Emb x_1] ['Emb ['Rad ['Emb T_0] 'Ty]]]]]
out > equalSynth
out >  P_2
out >  P_2
out > Ups
out > Ups
out > Ups
out > Ups
out > Ups
out > equalSynth
out >  x_1
out >  x_1
out > Ups
out > Beta
out > Beta
out > Beta
out > Ups
out > Ups
out > Ups
out > Ups
out > equalSynth
out >  ['App P_0 ['Emb ['Rad ['Lam \x. ['Emb x]] ['Emb ['Rad ['Pi ['Sg 'Ty \_. 'Ty] \_. ['Sg 'Ty \_. 'Ty]] 'Ty]]]]]
out >  ['App P_0 ['Emb ['Rad ['Emb ['Rad ['Lam \x. ['Emb x]] ['Emb ['Rad ['Pi ['Sg 'Ty \_. 'Ty] \_. ['Sg 'Ty \_. 'Ty]] 'Ty]]]] ['Emb ['Rad ['Emb ['Rad ['Pi ['Sg 'Ty \_. 'Ty] \_. ['Sg 'Ty \_. 'Ty]] 'Ty]] 'Ty]]]]]
out > equalSynth
out >  P_0
out >  P_0
out > Ups
out > Ups
out > Ups
out > Ups
out > Ups
out > Ups
out > Ups
out > Ups
out > Eta Pi
out > Beta
out > Ups
out > Ups
out > Beta
out > Ups
out > Ups
out > Eta Sg
out > equalSynth
out >  ['App ['Rad ['Emb ab_1] ['Sg 'Ty \_. 'Ty]] 'Fst]
out >  ['App ['Rad ['Emb ab_1] ['Sg 'Ty \_. 'Ty]] 'Fst]
out > equalSynth
out >  ['Rad ['Emb ab_1] ['Sg 'Ty \_. 'Ty]]
out >  ['Rad ['Emb ab_1] ['Sg 'Ty \_. 'Ty]]
out > equalSynth
out >  ab_1
out >  ['Rad ['Emb ab_1] ['Sg 'Ty \_. 'Ty]]
out > equalSynth
out >  ['App ['Rad ['Emb ab_1] ['Sg 'Ty \_. 'Ty]] 'Snd]
out >  ['App ['Rad ['Emb ab_1] ['Sg 'Ty \_. 'Ty]] 'Snd]
out > equalSynth
out >  ['Rad ['Emb ab_1] ['Sg 'Ty \_. 'Ty]]
out >  ['Rad ['Emb ab_1] ['Sg 'Ty \_. 'Ty]]
out > equalSynth
out >  ab_1
out >  ['Rad ['Emb ab_1] ['Sg 'Ty \_. 'Ty]]
out > equalSynth
out >  ['App P_0 ['Emb ['Rad ['Emb ['App ['App ['Rad ['Lam \A. ['Lam \B. ['Lam \x. ['Emb ['App ['App ['App ['Rad ['Lam \_. ['Lam \_. ['Lam \x. ['Pair ['Emb ['App x 'Snd]] ['Emb ['App x 'Fst]]]]]] ['Pi 'Ty \A. ['Pi 'Ty \B. ['Pi ['Sg ['Emb A] \_. ['Emb B]] \_. ['Sg ['Emb B] \_. ['Emb A]]]]]] ['Emb B]] ['Emb A]] ['Emb ['App ['App ['App ['Rad ['Lam \_. ['Lam \_. ['Lam \x. ['Pair ['Emb ['App x 'Snd]] ['Emb ['App x 'Fst]]]]]] ['Pi 'Ty \A. ['Pi 'Ty \B. ['Pi ['Sg ['Emb A] \_. ['Emb B]] \_. ['Sg ['Emb B] \_. ['Emb A]]]]]] ['Emb A]] ['Emb B]] ['Emb x]]]]]]]] ['Pi 'Ty \A. ['Pi 'Ty \B. ['Pi ['Sg ['Emb A] \_. ['Emb B]] \_. ['Sg ['Emb A] \_. ['Emb B]]]]]] 'Ty] 'Ty]] ['Emb ['Rad ['Pi ['Sg 'Ty \_. 'Ty] \_. ['Sg 'Ty \_. 'Ty]] 'Ty]]]]]
out >  ['App P_0 ['Emb ['Rad ['Emb ['Rad ['Lam \x. ['Emb x]] ['Emb ['Rad ['Pi ['Sg 'Ty \_. 'Ty] \_. ['Sg 'Ty \_. 'Ty]] 'Ty]]]] ['Emb ['Rad ['Emb ['Rad ['Pi ['Sg 'Ty \_. 'Ty] \_. ['Sg 'Ty \_. 'Ty]] 'Ty]] 'Ty]]]]]
out > equalSynth
out >  P_0
out >  P_0
out > Ups
out > Beta
out > Beta
out > Ups
out > Ups
out > Ups
out > Ups
out > Ups
out > Ups
out > Ups
out > Ups
out > Eta Pi
out > Beta
out > Beta
out > Beta
out > Beta
out > Ups
out > Ups
out > Beta
out > Ups
out > Ups
out > Eta Sg
out > Fst
out > Beta
out > Beta
out > Beta
out > Ups
out > Snd
out > Ups
out > Ups
out > Ups
out > Ups
out > Ups
out > equalSynth
out >  ['App ['Rad ['Emb ab_2] ['Sg ['Emb ['Rad ['Emb ['Rad 'Ty 'Ty]] 'Ty]] \_. ['Emb ['Rad ['Emb ['Rad 'Ty 'Ty]] 'Ty]]]] 'Fst]
out >  ['App ['Rad ['Emb ab_2] ['Sg 'Ty \_. 'Ty]] 'Fst]
out > equalSynth
out >  ['Rad ['Emb ab_2] ['Sg ['Emb ['Rad ['Emb ['Rad 'Ty 'Ty]] 'Ty]] \_. ['Emb ['Rad ['Emb ['Rad 'Ty 'Ty]] 'Ty]]]]
out >  ['Rad ['Emb ab_2] ['Sg 'Ty \_. 'Ty]]
out > equalSynth
out >  ab_2
out >  ['Rad ['Emb ab_2] ['Sg 'Ty \_. 'Ty]]
out > Snd
out > Beta
out > Beta
out > Beta
out > Ups
out > Fst
out > Ups
out > Ups
out > Ups
out > Ups
out > Ups
out > equalSynth
out >  ['App ['Rad ['Emb ab_2] ['Sg ['Emb ['Rad ['Emb ['Rad 'Ty 'Ty]] 'Ty]] \_. ['Emb ['Rad ['Emb ['Rad 'Ty 'Ty]] 'Ty]]]] 'Snd]
out >  ['App ['Rad ['Emb ab_2] ['Sg 'Ty \_. 'Ty]] 'Snd]
out > equalSynth
out >  ['Rad ['Emb ab_2] ['Sg ['Emb ['Rad ['Emb ['Rad 'Ty 'Ty]] 'Ty]] \_. ['Emb ['Rad ['Emb ['Rad 'Ty 'Ty]] 'Ty]]]]
out >  ['Rad ['Emb ab_2] ['Sg 'Ty \_. 'Ty]]
out > equalSynth
out >  ab_2
out >  ['Rad ['Emb ab_2] ['Sg 'Ty \_. 'Ty]]
out > Beta
out > Beta
out > Beta
out > Ups
out > refl swapswap : ['Pi ['Pi ['Emb ['Rad ['Pi ['Sg 'Ty \_. 'Ty] \_. ['Sg 'Ty \_. 'Ty]] 'Ty]] \_. 'Ty] \P. ['Pi ['Emb ['App P ['Emb ['Rad ['Lam \x. ['Emb x]] ['Emb ['Rad ['Pi ['Sg 'Ty \_. 'Ty] \_. ['Sg 'Ty \_. 'Ty]] 'Ty]]]]]] \_. ['Emb ['App P ['Emb ['Rad ['Emb ['App ['App ['Rad ['Lam \A. ['Lam \B. ['Lam \x. ['Emb ['App ['App ['App ['Rad ['Lam \_. ['Lam \_. ['Lam \x. ['Pair ['Emb ['App x 'Snd]] ['Emb ['App x 'Fst]]]]]] ['Pi 'Ty \A. ['Pi 'Ty \B. ['Pi ['Sg ['Emb A] \_. ['Emb B]] \_. ['Sg ['Emb B] \_. ['Emb A]]]]]] ['Emb B]] ['Emb A]] ['Emb ['App ['App ['App ['Rad ['Lam \_. ['Lam \_. ['Lam \x. ['Pair ['Emb ['App x 'Snd]] ['Emb ['App x 'Fst]]]]]] ['Pi 'Ty \A. ['Pi 'Ty \B. ['Pi ['Sg ['Emb A] \_. ['Emb B]] \_. ['Sg ['Emb B] \_. ['Emb A]]]]]] ['Emb A]] ['Emb B]] ['Emb x]]]]]]]] ['Pi 'Ty \A. ['Pi 'Ty \B. ['Pi ['Sg ['Emb A] \_. ['Emb B]] \_. ['Sg ['Emb A] \_. ['Emb B]]]]]] 'Ty] 'Ty]] ['Emb ['Rad ['Pi ['Sg 'Ty \_. 'Ty] \_. ['Sg 'Ty \_. 'Ty]] 'Ty]]]]]]]]
out > equalSynth
out >  T_0
out >  T_0
out > equalSynth
out >  T_0
out >  T_0
out > Ups
out > Ups
out > equalSynth
out >  B_1
out >  B_1
out > equalSynth
out >  A_0
out >  A_0
out > Ups
out > Ups
out > Ups
out > Ups
out > Beta
out > Beta
out > Beta
out > Ups
out > equalSynth
out >  T_2
out >  T_2
out > equalSynth
out >  T_2
out >  T_2
out > Ups
out > equalSynth
out >  T_0
out >  T_0
out > Ups
out > equalSynth
out >  T_0
out >  T_0
out > Beta
out > Beta
out > Beta
out > Ups
out > equalSynth
out >  ['App P_2 ['Emb ['Rad ['Emb x_1] ['Emb ['Rad ['Emb T_0] 'Ty]]]]]
out >  ['App P_2 ['Emb ['Rad ['Emb x_1] ['Emb ['Rad ['Emb T_0] 'Ty]]]]]
out > equalSynth
out >  P_2
out >  P_2
out > Ups
out > Ups
out > Ups
out > Ups
out > Ups
out > equalSynth
out >  x_1
out >  x_1
out > Ups
out > Beta
out > Beta
out > Beta
out > Ups
out > Ups
out > Ups
out > Ups
out > equalSynth
out >  ['App P_0 ['Emb ['Rad ['Lam \x. ['Emb x]] ['Emb ['Rad ['Pi ['Sg 'One \_. 'One] \_. ['Sg 'One \_. 'One]] 'Ty]]]]]
out >  ['App P_0 ['Emb ['Rad ['Emb ['Rad ['Lam \x. ['Emb x]] ['Emb ['Rad ['Pi ['Sg 'One \_. 'One] \_. ['Sg 'One \_. 'One]] 'Ty]]]] ['Emb ['Rad ['Emb ['Rad ['Pi ['Sg 'One \_. 'One] \_. ['Sg 'One \_. 'One]] 'Ty]] 'Ty]]]]]
out > equalSynth
out >  P_0
out >  P_0
out > Ups
out > Ups
out > Ups
out > Ups
out > Ups
out > Ups
out > Ups
out > Ups
out > Eta Pi
out > Beta
out > Ups
out > Ups
out > Beta
out > Ups
out > Ups
out > Eta Sg
out > equalSynth
out >  ['App P_0 ['Emb ['Rad ['Emb ['App ['App ['Rad ['Lam \_. ['Lam \_. ['Lam \x. ['Pair ['Emb ['App x 'Snd]] ['Emb ['App x 'Fst]]]]]] ['Pi 'Ty \A. ['Pi 'Ty \B. ['Pi ['Sg ['Emb A] \_. ['Emb B]] \_. ['Sg ['Emb B] \_. ['Emb A]]]]]] 'One] 'One]] ['Emb ['Rad ['Pi ['Sg 'One \_. 'One] \_. ['Sg 'One \_. 'One]] 'Ty]]]]]
out >  ['App P_0 ['Emb ['Rad ['Emb ['Rad ['Lam \x. ['Emb x]] ['Emb ['Rad ['Pi ['Sg 'One \_. 'One] \_. ['Sg 'One \_. 'One]] 'Ty]]]] ['Emb ['Rad ['Emb ['Rad ['Pi ['Sg 'One \_. 'One] \_. ['Sg 'One \_. 'One]] 'Ty]] 'Ty]]]]]
out > equalSynth
out >  P_0
out >  P_0
out > Ups
out > Beta
out > Beta
out > Ups
out > Ups
out > Ups
out > Ups
out > Ups
out > Ups
out > Ups
out > Ups
out > Eta Pi
out > Beta
out > Ups
out > Beta
out > Ups
out > Ups
out > Eta Sg
out > Fst
out > Ups
out > Snd
out > Ups
out > Beta
out > Beta
out > Beta
out > Ups
out > refl swap One : ['Pi ['Pi ['Emb ['Rad ['Pi ['Sg 'One \_. 'One] \_. ['Sg 'One \_. 'One]] 'Ty]] \_. 'Ty] \P. ['Pi ['Emb ['App P ['Emb ['Rad ['Lam \x. ['Emb x]] ['Emb ['Rad ['Pi ['Sg 'One \_. 'One] \_. ['Sg 'One \_. 'One]] 'Ty]]]]]] \_. ['Emb ['App P ['Emb ['Rad ['Emb ['App ['App ['Rad ['Lam \_. ['Lam \_. ['Lam \x. ['Pair ['Emb ['App x 'Snd]] ['Emb ['App x 'Fst]]]]]] ['Pi 'Ty \A. ['Pi 'Ty \B. ['Pi ['Sg ['Emb A] \_. ['Emb B]] \_. ['Sg ['Emb B] \_. ['Emb A]]]]]] 'One] 'One]] ['Emb ['Rad ['Pi ['Sg 'One \_. 'One] \_. ['Sg 'One \_. 'One]] 'Ty]]]]]]]]
out >
err >
err >
