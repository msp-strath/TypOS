ret > ExitSuccess
err >
err >
err > [4mexec[0m 
err >   [<type |-@p {}, check |-@p {}, synth |-@p {}, <> | ([] 0 [] \A. type {A -> []}. check@p. p!['Arr ['List A] ['Arr ['List A] ['List A]]]. p!['Lam \as. ['Lam \bs. ['Emb ['ListElim ['List A] as ['Emb bs] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]]]]].)]
err >   0: [30;42m[][0m
err >   
err >   
err >
err > [4mexec[0m 
err >   [<type |-@p {}, check |-@p {}, synth |-@p {}, ([] 0 ) | <>]
err >   0: [30;42m[][0m
err >   []
err >   \A. type {A -> []}. check@p. p!['Arr ['List A] ['Arr ['List A] ['List A]]]. p!['Lam \as. ['Lam \bs. ['Emb ['ListElim ['List A] as ['Emb bs] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]]]]].
err >
err > [4mexec[0m 
err >   [<type |-@p {}, check |-@p {}, synth |-@p {}, ([] 0 ) | <>, [33;1m\A_0. [0m]
err >   0: [30;42m[][0m
err >   []
err >   type {A_0 -> []}. check@p. p!['Arr ['List A_0] ['Arr ['List A_0] ['List A_0]]]. p!['Lam \as. ['Lam \bs. ['Emb ['ListElim ['List A_0] as ['Emb bs] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]]]]].
err >
err > [4mexec[0m 
err >   [<type |-@p {}, check |-@p {}, synth |-@p {}, ([] 0 ) | <>, [33;1m\A_0. [0m, type { A_0 -> [] }. ]
err >   0: [30;42m[][0m
err >   []
err >   check@p. p!['Arr ['List A_0] ['Arr ['List A_0] ['List A_0]]]. p!['Lam \as. ['Lam \bs. ['Emb ['ListElim ['List A_0] as ['Emb bs] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]]]]].
err >
err > [4mexec[0m 
err >   [<type |-@p {}, check |-@p {}, synth |-@p {}, ([] 0 ) | <>, [33;1m\A_0. [0m, type { A_0 -> [] }. , ([] 0 [] p?ty. p?tm. [4mcase[0m tm {['Lam \x. body] -> 'Type?S. 'Type?T. (ty ~ ['Arr S T] | \y. synth {y -> {y*} S}. check@q. q!{y*} T. q!{y*, x=y} body.) ; 'Nil -> [4mcase[0m ty {'One ->  ; ['List S] ->  ; otherwise -> #"wrong type for Nil"} ; ['Cons s t] -> [4mcase[0m ty {['Pair S T] -> (check@q. q!S. q!s. | check@r. r!T. r!t.) ; ['List S] -> (check@q. q!S. q!s. | check@r. r!['List S]. r!t.) ; otherwise -> #"wrong type for Cons"} ; ['Emb e] -> synth@q. q!e. q?S. S ~ ty}) @ p | p [A] @ <>]
err >   0: [30;42m[][0m
err >   []
err >   p!['Arr ['List A_0] ['Arr ['List A_0] ['List A_0]]]. p!['Lam \as. ['Lam \bs. ['Emb ['ListElim ['List A_0] as ['Emb bs] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]]]]].
err >
err > [4mexec[0m 
err >   [<type |-@p {}, check |-@p {}, synth |-@p {}, ([] 0 ) | <>, [33;1m\A_0. [0m, type { A_0 -> [] }. , <> @ p | p [A] @ ([] 0 [] p!['Lam \as. ['Lam \bs. ['Emb ['ListElim ['List A_0] as ['Emb bs] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]]]]].), [34;1m!p. [] ['Arr ['List A_0] ['Arr ['List A_0] ['List A_0]]][0m]
err >   0: [30;42m[][0m
err >   []
err >   p?ty. p?tm. [4mcase[0m tm {['Lam \x. body] -> 'Type?S. 'Type?T. (ty ~ ['Arr S T] | \y. synth {y -> {y*} S}. check@q. q!{y*} T. q!{y*, x=y} body.) ; 'Nil -> [4mcase[0m ty {'One ->  ; ['List S] ->  ; otherwise -> #"wrong type for Nil"} ; ['Cons s t] -> [4mcase[0m ty {['Pair S T] -> (check@q. q!S. q!s. | check@r. r!T. r!t.) ; ['List S] -> (check@q. q!S. q!s. | check@r. r!['List S]. r!t.) ; otherwise -> #"wrong type for Cons"} ; ['Emb e] -> synth@q. q!e. q?S. S ~ ty}
err >
err > [4mexec[0m 
err >   [<type |-@p {}, check |-@p {}, synth |-@p {}, ([] 0 ) | <>, [33;1m\A_0. [0m, type { A_0 -> [] }. , <> @ p | p [A] @ ([] 0 [] p!['Lam \as. ['Lam \bs. ['Emb ['ListElim ['List A_0] as ['Emb bs] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]]]]].)]
err >   0: [30;42m[][0m
err >   [ty = ['Arr ['List A] ['Arr ['List A] ['List A]]]]
err >   p?tm. [4mcase[0m tm {['Lam \x. body] -> 'Type?S. 'Type?T. (ty ~ ['Arr S T] | \y. synth {y -> {y*} S}. check@q. q!{y*} T. q!{y*, x=y} body.) ; 'Nil -> [4mcase[0m ty {'One ->  ; ['List S] ->  ; otherwise -> #"wrong type for Nil"} ; ['Cons s t] -> [4mcase[0m ty {['Pair S T] -> (check@q. q!S. q!s. | check@r. r!T. r!t.) ; ['List S] -> (check@q. q!S. q!s. | check@r. r!['List S]. r!t.) ; otherwise -> #"wrong type for Cons"} ; ['Emb e] -> synth@q. q!e. q?S. S ~ ty}
err >
err > [4mexec[0m 
err >   [<type |-@p {}, check |-@p {}, synth |-@p {}, ([] 0 ) | <>, [33;1m\A_0. [0m, type { A_0 -> [] }. , ([] 0 [ty = ['Arr ['List A] ['Arr ['List A] ['List A]]]] p?tm. [4mcase[0m tm {['Lam \x. body] -> 'Type?S. 'Type?T. (ty ~ ['Arr S T] | \y. synth {y -> {y*} S}. check@q. q!{y*} T. q!{y*, x=y} body.) ; 'Nil -> [4mcase[0m ty {'One ->  ; ['List S] ->  ; otherwise -> #"wrong type for Nil"} ; ['Cons s t] -> [4mcase[0m ty {['Pair S T] -> (check@q. q!S. q!s. | check@r. r!T. r!t.) ; ['List S] -> (check@q. q!S. q!s. | check@r. r!['List S]. r!t.) ; otherwise -> #"wrong type for Cons"} ; ['Emb e] -> synth@q. q!e. q?S. S ~ ty}) @ p | p [A] @ <>]
err >   0: [30;42m[][0m
err >   []
err >   p!['Lam \as. ['Lam \bs. ['Emb ['ListElim ['List A_0] as ['Emb bs] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]]]]].
err >
err > [4mexec[0m 
err >   [<type |-@p {}, check |-@p {}, synth |-@p {}, ([] 0 ) | <>, [33;1m\A_0. [0m, type { A_0 -> [] }. , <> @ p | p [A] @ ([] 0 ), [34;1m!p. [] ['Lam \as. ['Lam \bs. ['Emb ['ListElim ['List A_0] as ['Emb bs] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]]]]][0m]
err >   0: [30;42m[][0m
err >   [ty = ['Arr ['List A] ['Arr ['List A] ['List A]]]]
err >   p?tm. [4mcase[0m tm {['Lam \x. body] -> 'Type?S. 'Type?T. (ty ~ ['Arr S T] | \y. synth {y -> {y*} S}. check@q. q!{y*} T. q!{y*, x=y} body.) ; 'Nil -> [4mcase[0m ty {'One ->  ; ['List S] ->  ; otherwise -> #"wrong type for Nil"} ; ['Cons s t] -> [4mcase[0m ty {['Pair S T] -> (check@q. q!S. q!s. | check@r. r!T. r!t.) ; ['List S] -> (check@q. q!S. q!s. | check@r. r!['List S]. r!t.) ; otherwise -> #"wrong type for Cons"} ; ['Emb e] -> synth@q. q!e. q?S. S ~ ty}
err >
err > [4mexec[0m 
err >   [<type |-@p {}, check |-@p {}, synth |-@p {}, ([] 0 ) | <>, [33;1m\A_0. [0m, type { A_0 -> [] }. , <> @ p | p [A] @ ([] 0 )]
err >   0: [30;42m[][0m
err >   [tm = ['Lam \as. ['Lam \bs. ['Emb ['ListElim ['List A] as ['Emb bs] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]]]]], ty = ['Arr ['List A] ['Arr ['List A] ['List A]]]]
err >   [4mcase[0m tm {['Lam \x. body] -> 'Type?S. 'Type?T. (ty ~ ['Arr S T] | \y. synth {y -> {y*} S}. check@q. q!{y*} T. q!{y*, x=y} body.) ; 'Nil -> [4mcase[0m ty {'One ->  ; ['List S] ->  ; otherwise -> #"wrong type for Nil"} ; ['Cons s t] -> [4mcase[0m ty {['Pair S T] -> (check@q. q!S. q!s. | check@r. r!T. r!t.) ; ['List S] -> (check@q. q!S. q!s. | check@r. r!['List S]. r!t.) ; otherwise -> #"wrong type for Cons"} ; ['Emb e] -> synth@q. q!e. q?S. S ~ ty}
err >
err > [4mexec[0m 
err >   [<type |-@p {}, check |-@p {}, synth |-@p {}, ([] 0 ) | <>, [33;1m\A_0. [0m, type { A_0 -> [] }. , <> @ p | p [A] @ ([] 0 )]
err >   0: [30;42m[][0m
err >   [body x = ['Lam \bs. ['Emb ['ListElim ['List A] x ['Emb bs] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]]]], tm = ['Lam \as. ['Lam \bs. ['Emb ['ListElim ['List A] as ['Emb bs] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]]]]], ty = ['Arr ['List A] ['Arr ['List A] ['List A]]]]
err >   'Type?S. 'Type?T. (ty ~ ['Arr S T] | \y. synth {y -> {y*} S}. check@q. q!{y*} T. q!{y*, x=y} body.)
err >
err > [4mexec[0m 
err >   [<type |-@p {}, check |-@p {}, synth |-@p {}, ([] 0 ) | <>, [33;1m\A_0. [0m, type { A_0 -> [] }. , <> @ p | p [A] @ ([] 0 )]
err >   0: [30;42m[][0m
err >   [S = ?[("check",[1])("S",[0])], body x = ['Lam \bs. ['Emb ['ListElim ['List A] x ['Emb bs] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]]]], tm = ['Lam \as. ['Lam \bs. ['Emb ['ListElim ['List A] as ['Emb bs] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]]]]], ty = ['Arr ['List A] ['Arr ['List A] ['List A]]]]
err >   'Type?T. (ty ~ ['Arr S T] | \y. synth {y -> {y*} S}. check@q. q!{y*} T. q!{y*, x=y} body.)
err >
err > [4mexec[0m 
err >   [<type |-@p {}, check |-@p {}, synth |-@p {}, ([] 0 ) | <>, [33;1m\A_0. [0m, type { A_0 -> [] }. , <> @ p | p [A] @ ([] 0 )]
err >   0: [30;42m[][0m
err >   [S = ?[("check",[1])("S",[0])], T = ?[("check",[1])("T",[1])], body x = ['Lam \bs. ['Emb ['ListElim ['List A] x ['Emb bs] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]]]], tm = ['Lam \as. ['Lam \bs. ['Emb ['ListElim ['List A] as ['Emb bs] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]]]]], ty = ['Arr ['List A] ['Arr ['List A] ['List A]]]]
err >   ty ~ ['Arr S T] | \y. synth {y -> {y*} S}. check@q. q!{y*} T. q!{y*, x=y} body.
err >
err > [4mexec[0m 
err >   [<type |-@p {}, check |-@p {}, synth |-@p {}, ([] 0 ) | <>, [33;1m\A_0. [0m, type { A_0 -> [] }. , <> @ p | p [A] @ ([] 0 ), <> | ([] 0 [S = ?[("check",[1])("S",[0])], T = ?[("check",[1])("T",[1])], body x = ['Lam \bs. ['Emb ['ListElim ['List A] x ['Emb bs] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]]]], tm = ['Lam \as. ['Lam \bs. ['Emb ['ListElim ['List A] as ['Emb bs] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]]]]], ty = ['Arr ['List A] ['Arr ['List A] ['List A]]]] \y. synth {y -> {y*} S}. check@q. q!{y*} T. q!{y*, x=y} body.)]
err >   0: [30;42m[][0m
err >   [S = ?[("check",[1])("S",[0])], T = ?[("check",[1])("T",[1])], body x = ['Lam \bs. ['Emb ['ListElim ['List A] x ['Emb bs] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]]]], tm = ['Lam \as. ['Lam \bs. ['Emb ['ListElim ['List A] as ['Emb bs] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]]]]], ty = ['Arr ['List A] ['Arr ['List A] ['List A]]]]
err >   ty ~ ['Arr S T]
err >
err > [4mexec[0m 
err >   [<type |-@p {}, check |-@p {}, synth |-@p {}, ([] 0 ) | <>, [33;1m\A_0. [0m, type { A_0 -> [] }. , <> @ p | p [A] @ ([] 0 ), ([] 2 ) | <>]
err >   2: [30;42m[?[("check",[1])("S",[0])] := ['List A_0], ?[("check",[1])("T",[1])] := ['Arr ['List A_0] ['List A_0]]][0m
err >   [S = ?[("check",[1])("S",[0])], T = ?[("check",[1])("T",[1])], body x = ['Lam \bs. ['Emb ['ListElim ['List A] x ['Emb bs] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]]]], tm = ['Lam \as. ['Lam \bs. ['Emb ['ListElim ['List A] as ['Emb bs] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]]]]], ty = ['Arr ['List A] ['Arr ['List A] ['List A]]]]
err >   \y. synth {y -> {y*} S}. check@q. q!{y*} T. q!{y*, x=y} body.
err >
err > [4mexec[0m 
err >   [<type |-@p {}, check |-@p {}, synth |-@p {}, ([] 0 ) | <>, [33;1m\A_0. [0m, type { A_0 -> [] }. , <> @ p | p [A] @ ([] 0 ), ([] 2 ) | <>, [33;1m\y_1. [0m]
err >   2: [30;42m[?[("check",[1])("S",[0])] := ['List A_0], ?[("check",[1])("T",[1])] := ['Arr ['List A_0] ['List A_0]]][0m
err >   [S = ?[("check",[1])("S",[0])], T = ?[("check",[1])("T",[1])], body x = ['Lam \bs. ['Emb ['ListElim ['List A] x ['Emb bs] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]]]], tm = ['Lam \as. ['Lam \bs. ['Emb ['ListElim ['List A] as ['Emb bs] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]]]]], ty = ['Arr ['List A] ['Arr ['List A] ['List A]]]]
err >   synth {y_1 -> {y_1*} S}. check@q. q!{y_1*} T. q!{y_1*, x=y_1} body.
err >
err > [4mexec[0m 
err >   [<type |-@p {}, check |-@p {}, synth |-@p {}, ([] 0 ) | <>, [33;1m\A_0. [0m, type { A_0 -> [] }. , <> @ p | p [A] @ ([] 0 ), ([] 2 ) | <>, [33;1m\y_1. [0m, synth { y_1 -> {y_1*} ?[("check",[1])("S",[0])] }. ]
err >   2: [30;42m[?[("check",[1])("S",[0])] := ['List A_0], ?[("check",[1])("T",[1])] := ['Arr ['List A_0] ['List A_0]]][0m
err >   [S = ?[("check",[1])("S",[0])], T = ?[("check",[1])("T",[1])], body x = ['Lam \bs. ['Emb ['ListElim ['List A] x ['Emb bs] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]]]], tm = ['Lam \as. ['Lam \bs. ['Emb ['ListElim ['List A] as ['Emb bs] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]]]]], ty = ['Arr ['List A] ['Arr ['List A] ['List A]]]]
err >   check@q. q!{y_1*} T. q!{y_1*, x=y_1} body.
err >
err > [4mexec[0m 
err >   [<type |-@p {}, check |-@p {}, synth |-@p {}, ([] 0 ) | <>, [33;1m\A_0. [0m, type { A_0 -> [] }. , <> @ p | p [A] @ ([] 0 ), ([] 2 ) | <>, [33;1m\y_1. [0m, synth { y_1 -> {y_1*} ?[("check",[1])("S",[0])] }. , ([] 2 [] p?ty. p?tm. [4mcase[0m tm {['Lam \x. body] -> 'Type?S. 'Type?T. (ty ~ ['Arr S T] | \y. synth {y -> {y*} S}. check@q. q!{y*} T. q!{y*, x=y} body.) ; 'Nil -> [4mcase[0m ty {'One ->  ; ['List S] ->  ; otherwise -> #"wrong type for Nil"} ; ['Cons s t] -> [4mcase[0m ty {['Pair S T] -> (check@q. q!S. q!s. | check@r. r!T. r!t.) ; ['List S] -> (check@q. q!S. q!s. | check@r. r!['List S]. r!t.) ; otherwise -> #"wrong type for Cons"} ; ['Emb e] -> synth@q. q!e. q?S. S ~ ty}) @ p | q [y] @ <>]
err >   2: [30;42m[?[("check",[1])("S",[0])] := ['List A_0], ?[("check",[1])("T",[1])] := ['Arr ['List A_0] ['List A_0]]][0m
err >   [S = ?[("check",[1])("S",[0])], T = ?[("check",[1])("T",[1])], body x = ['Lam \bs. ['Emb ['ListElim ['List A] x ['Emb bs] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]]]], tm = ['Lam \as. ['Lam \bs. ['Emb ['ListElim ['List A] as ['Emb bs] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]]]]], ty = ['Arr ['List A] ['Arr ['List A] ['List A]]]]
err >   q!{y_1*} T. q!{y_1*, x=y_1} body.
err >
err > [4mexec[0m 
err >   [<type |-@p {}, check |-@p {}, synth |-@p {}, ([] 0 ) | <>, [33;1m\A_0. [0m, type { A_0 -> [] }. , <> @ p | p [A] @ ([] 0 ), ([] 2 ) | <>, [33;1m\y_1. [0m, synth { y_1 -> {y_1*} ?[("check",[1])("S",[0])] }. , <> @ p | q [y] @ ([] 2 [S = ?[("check",[1])("S",[0])], T = ?[("check",[1])("T",[1])], body x = ['Lam \bs. ['Emb ['ListElim ['List A] x ['Emb bs] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]]]], tm = ['Lam \as. ['Lam \bs. ['Emb ['ListElim ['List A] as ['Emb bs] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]]]]], ty = ['Arr ['List A] ['Arr ['List A] ['List A]]]] q!{y_1*, x=y_1} body.), [34;1m!p. [] {y_1*} ?[("check",[1])("T",[1])][0m]
err >   2: [30;42m[?[("check",[1])("S",[0])] := ['List A_0], ?[("check",[1])("T",[1])] := ['Arr ['List A_0] ['List A_0]]][0m
err >   []
err >   p?ty. p?tm. [4mcase[0m tm {['Lam \x. body] -> 'Type?S. 'Type?T. (ty ~ ['Arr S T] | \y. synth {y -> {y*} S}. check@q. q!{y*} T. q!{y*, x=y} body.) ; 'Nil -> [4mcase[0m ty {'One ->  ; ['List S] ->  ; otherwise -> #"wrong type for Nil"} ; ['Cons s t] -> [4mcase[0m ty {['Pair S T] -> (check@q. q!S. q!s. | check@r. r!T. r!t.) ; ['List S] -> (check@q. q!S. q!s. | check@r. r!['List S]. r!t.) ; otherwise -> #"wrong type for Cons"} ; ['Emb e] -> synth@q. q!e. q?S. S ~ ty}
err >
err > [4mexec[0m 
err >   [<type |-@p {}, check |-@p {}, synth |-@p {}, ([] 0 ) | <>, [33;1m\A_0. [0m, type { A_0 -> [] }. , <> @ p | p [A] @ ([] 0 ), ([] 2 ) | <>, [33;1m\y_1. [0m, synth { y_1 -> {y_1*} ?[("check",[1])("S",[0])] }. , <> @ p | q [y] @ ([] 2 [S = ?[("check",[1])("S",[0])], T = ?[("check",[1])("T",[1])], body x = ['Lam \bs. ['Emb ['ListElim ['List A] x ['Emb bs] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]]]], tm = ['Lam \as. ['Lam \bs. ['Emb ['ListElim ['List A] as ['Emb bs] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]]]]], ty = ['Arr ['List A] ['Arr ['List A] ['List A]]]] q!{y_1*, x=y_1} body.)]
err >   2: [30;42m[?[("check",[1])("S",[0])] := ['List A_0], ?[("check",[1])("T",[1])] := ['Arr ['List A_0] ['List A_0]]][0m
err >   [ty = {y*} ?[("check",[1])("T",[1])]]
err >   p?tm. [4mcase[0m tm {['Lam \x. body] -> 'Type?S. 'Type?T. (ty ~ ['Arr S T] | \y. synth {y -> {y*} S}. check@q. q!{y*} T. q!{y*, x=y} body.) ; 'Nil -> [4mcase[0m ty {'One ->  ; ['List S] ->  ; otherwise -> #"wrong type for Nil"} ; ['Cons s t] -> [4mcase[0m ty {['Pair S T] -> (check@q. q!S. q!s. | check@r. r!T. r!t.) ; ['List S] -> (check@q. q!S. q!s. | check@r. r!['List S]. r!t.) ; otherwise -> #"wrong type for Cons"} ; ['Emb e] -> synth@q. q!e. q?S. S ~ ty}
err >
err > [4mexec[0m 
err >   [<type |-@p {}, check |-@p {}, synth |-@p {}, ([] 0 ) | <>, [33;1m\A_0. [0m, type { A_0 -> [] }. , <> @ p | p [A] @ ([] 0 ), ([] 2 ) | <>, [33;1m\y_1. [0m, synth { y_1 -> {y_1*} ?[("check",[1])("S",[0])] }. , ([] 2 [ty = {y*} ?[("check",[1])("T",[1])]] p?tm. [4mcase[0m tm {['Lam \x. body] -> 'Type?S. 'Type?T. (ty ~ ['Arr S T] | \y. synth {y -> {y*} S}. check@q. q!{y*} T. q!{y*, x=y} body.) ; 'Nil -> [4mcase[0m ty {'One ->  ; ['List S] ->  ; otherwise -> #"wrong type for Nil"} ; ['Cons s t] -> [4mcase[0m ty {['Pair S T] -> (check@q. q!S. q!s. | check@r. r!T. r!t.) ; ['List S] -> (check@q. q!S. q!s. | check@r. r!['List S]. r!t.) ; otherwise -> #"wrong type for Cons"} ; ['Emb e] -> synth@q. q!e. q?S. S ~ ty}) @ p | q [y] @ <>]
err >   2: [30;42m[?[("check",[1])("S",[0])] := ['List A_0], ?[("check",[1])("T",[1])] := ['Arr ['List A_0] ['List A_0]]][0m
err >   [S = ?[("check",[1])("S",[0])], T = ?[("check",[1])("T",[1])], body x = ['Lam \bs. ['Emb ['ListElim ['List A] x ['Emb bs] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]]]], tm = ['Lam \as. ['Lam \bs. ['Emb ['ListElim ['List A] as ['Emb bs] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]]]]], ty = ['Arr ['List A] ['Arr ['List A] ['List A]]]]
err >   q!{y_1*, x=y_1} body.
err >
err > [4mexec[0m 
err >   [<type |-@p {}, check |-@p {}, synth |-@p {}, ([] 0 ) | <>, [33;1m\A_0. [0m, type { A_0 -> [] }. , <> @ p | p [A] @ ([] 0 ), ([] 2 ) | <>, [33;1m\y_1. [0m, synth { y_1 -> {y_1*} ?[("check",[1])("S",[0])] }. , <> @ p | q [y] @ ([] 2 ), [34;1m!p. [] ['Lam \bs. ['Emb ['ListElim ['List A_0] y_1 ['Emb bs] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]]]][0m]
err >   2: [30;42m[?[("check",[1])("S",[0])] := ['List A_0], ?[("check",[1])("T",[1])] := ['Arr ['List A_0] ['List A_0]]][0m
err >   [ty = {y*} ?[("check",[1])("T",[1])]]
err >   p?tm. [4mcase[0m tm {['Lam \x. body] -> 'Type?S. 'Type?T. (ty ~ ['Arr S T] | \y. synth {y -> {y*} S}. check@q. q!{y*} T. q!{y*, x=y} body.) ; 'Nil -> [4mcase[0m ty {'One ->  ; ['List S] ->  ; otherwise -> #"wrong type for Nil"} ; ['Cons s t] -> [4mcase[0m ty {['Pair S T] -> (check@q. q!S. q!s. | check@r. r!T. r!t.) ; ['List S] -> (check@q. q!S. q!s. | check@r. r!['List S]. r!t.) ; otherwise -> #"wrong type for Cons"} ; ['Emb e] -> synth@q. q!e. q?S. S ~ ty}
err >
err > [4mexec[0m 
err >   [<type |-@p {}, check |-@p {}, synth |-@p {}, ([] 0 ) | <>, [33;1m\A_0. [0m, type { A_0 -> [] }. , <> @ p | p [A] @ ([] 0 ), ([] 2 ) | <>, [33;1m\y_1. [0m, synth { y_1 -> {y_1*} ?[("check",[1])("S",[0])] }. , <> @ p | q [y] @ ([] 2 )]
err >   2: [30;42m[?[("check",[1])("S",[0])] := ['List A_0], ?[("check",[1])("T",[1])] := ['Arr ['List A_0] ['List A_0]]][0m
err >   [tm = ['Lam \bs. ['Emb ['ListElim ['List A] y ['Emb bs] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]]]], ty = {y*} ?[("check",[1])("T",[1])]]
err >   [4mcase[0m tm {['Lam \x. body] -> 'Type?S. 'Type?T. (ty ~ ['Arr S T] | \y. synth {y -> {y*} S}. check@q. q!{y*} T. q!{y*, x=y} body.) ; 'Nil -> [4mcase[0m ty {'One ->  ; ['List S] ->  ; otherwise -> #"wrong type for Nil"} ; ['Cons s t] -> [4mcase[0m ty {['Pair S T] -> (check@q. q!S. q!s. | check@r. r!T. r!t.) ; ['List S] -> (check@q. q!S. q!s. | check@r. r!['List S]. r!t.) ; otherwise -> #"wrong type for Cons"} ; ['Emb e] -> synth@q. q!e. q?S. S ~ ty}
err >
err > [4mexec[0m 
err >   [<type |-@p {}, check |-@p {}, synth |-@p {}, ([] 0 ) | <>, [33;1m\A_0. [0m, type { A_0 -> [] }. , <> @ p | p [A] @ ([] 0 ), ([] 2 ) | <>, [33;1m\y_1. [0m, synth { y_1 -> {y_1*} ?[("check",[1])("S",[0])] }. , <> @ p | q [y] @ ([] 2 )]
err >   2: [30;42m[?[("check",[1])("S",[0])] := ['List A_0], ?[("check",[1])("T",[1])] := ['Arr ['List A_0] ['List A_0]]][0m
err >   [body x = ['Emb ['ListElim ['List A] y ['Emb x] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]]], tm = ['Lam \bs. ['Emb ['ListElim ['List A] y ['Emb bs] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]]]], ty = {y*} ?[("check",[1])("T",[1])]]
err >   'Type?S. 'Type?T. (ty ~ ['Arr S T] | \y. synth {y -> {y*} S}. check@q. q!{y*} T. q!{y*, x=y} body.)
err >
err > [4mexec[0m 
err >   [<type |-@p {}, check |-@p {}, synth |-@p {}, ([] 0 ) | <>, [33;1m\A_0. [0m, type { A_0 -> [] }. , <> @ p | p [A] @ ([] 0 ), ([] 2 ) | <>, [33;1m\y_1. [0m, synth { y_1 -> {y_1*} ?[("check",[1])("S",[0])] }. , <> @ p | q [y] @ ([] 2 )]
err >   2: [30;42m[?[("check",[1])("S",[0])] := ['List A_0], ?[("check",[1])("T",[1])] := ['Arr ['List A_0] ['List A_0]]][0m
err >   [S = ?[("check",[1,3])("S",[0])], body x = ['Emb ['ListElim ['List A] y ['Emb x] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]]], tm = ['Lam \bs. ['Emb ['ListElim ['List A] y ['Emb bs] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]]]], ty = {y*} ?[("check",[1])("T",[1])]]
err >   'Type?T. (ty ~ ['Arr S T] | \y. synth {y -> {y*} S}. check@q. q!{y*} T. q!{y*, x=y} body.)
err >
err > [4mexec[0m 
err >   [<type |-@p {}, check |-@p {}, synth |-@p {}, ([] 0 ) | <>, [33;1m\A_0. [0m, type { A_0 -> [] }. , <> @ p | p [A] @ ([] 0 ), ([] 2 ) | <>, [33;1m\y_1. [0m, synth { y_1 -> {y_1*} ?[("check",[1])("S",[0])] }. , <> @ p | q [y] @ ([] 2 )]
err >   2: [30;42m[?[("check",[1])("S",[0])] := ['List A_0], ?[("check",[1])("T",[1])] := ['Arr ['List A_0] ['List A_0]]][0m
err >   [S = ?[("check",[1,3])("S",[0])], T = ?[("check",[1,3])("T",[1])], body x = ['Emb ['ListElim ['List A] y ['Emb x] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]]], tm = ['Lam \bs. ['Emb ['ListElim ['List A] y ['Emb bs] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]]]], ty = {y*} ?[("check",[1])("T",[1])]]
err >   ty ~ ['Arr S T] | \y. synth {y -> {y*} S}. check@q. q!{y*} T. q!{y*, x=y} body.
err >
err > [4mexec[0m 
err >   [<type |-@p {}, check |-@p {}, synth |-@p {}, ([] 0 ) | <>, [33;1m\A_0. [0m, type { A_0 -> [] }. , <> @ p | p [A] @ ([] 0 ), ([] 2 ) | <>, [33;1m\y_1. [0m, synth { y_1 -> {y_1*} ?[("check",[1])("S",[0])] }. , <> @ p | q [y] @ ([] 2 ), <> | ([] 2 [S = ?[("check",[1,3])("S",[0])], T = ?[("check",[1,3])("T",[1])], body x = ['Emb ['ListElim ['List A] y ['Emb x] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]]], tm = ['Lam \bs. ['Emb ['ListElim ['List A] y ['Emb bs] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]]]], ty = {y*} ?[("check",[1])("T",[1])]] \y. synth {y -> {y*} S}. check@q. q!{y*} T. q!{y*, x=y} body.)]
err >   2: [30;42m[?[("check",[1])("S",[0])] := ['List A_0], ?[("check",[1])("T",[1])] := ['Arr ['List A_0] ['List A_0]]][0m
err >   [S = ?[("check",[1,3])("S",[0])], T = ?[("check",[1,3])("T",[1])], body x = ['Emb ['ListElim ['List A] y ['Emb x] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]]], tm = ['Lam \bs. ['Emb ['ListElim ['List A] y ['Emb bs] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]]]], ty = {y*} ?[("check",[1])("T",[1])]]
err >   ty ~ ['Arr S T]
err >
err > [4mexec[0m 
err >   [<type |-@p {}, check |-@p {}, synth |-@p {}, ([] 0 ) | <>, [33;1m\A_0. [0m, type { A_0 -> [] }. , <> @ p | p [A] @ ([] 0 ), ([] 2 ) | <>, [33;1m\y_1. [0m, synth { y_1 -> {y_1*} ?[("check",[1])("S",[0])] }. , <> @ p | q [y] @ ([] 2 ), ([] 4 ) | <>]
err >   4: [30;42m[?[("check",[1])("S",[0])] := ['List A_0], ?[("check",[1])("T",[1])] := ['Arr ['List A_0] ['List A_0]], ?[("check",[1,3])("S",[0])] := ['List A_0], ?[("check",[1,3])("T",[1])] := ['List A_0]][0m
err >   [S = ?[("check",[1,3])("S",[0])], T = ?[("check",[1,3])("T",[1])], body x = ['Emb ['ListElim ['List A] y ['Emb x] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]]], tm = ['Lam \bs. ['Emb ['ListElim ['List A] y ['Emb bs] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]]]], ty = {y*} ?[("check",[1])("T",[1])]]
err >   \y. synth {y -> {y*} S}. check@q. q!{y*} T. q!{y*, x=y} body.
err >
err > [4mexec[0m 
err >   [<type |-@p {}, check |-@p {}, synth |-@p {}, ([] 0 ) | <>, [33;1m\A_0. [0m, type { A_0 -> [] }. , <> @ p | p [A] @ ([] 0 ), ([] 2 ) | <>, [33;1m\y_1. [0m, synth { y_1 -> {y_1*} ?[("check",[1])("S",[0])] }. , <> @ p | q [y] @ ([] 2 ), ([] 4 ) | <>, [33;1m\y_2. [0m]
err >   4: [30;42m[?[("check",[1])("S",[0])] := ['List A_0], ?[("check",[1])("T",[1])] := ['Arr ['List A_0] ['List A_0]], ?[("check",[1,3])("S",[0])] := ['List A_0], ?[("check",[1,3])("T",[1])] := ['List A_0]][0m
err >   [S = ?[("check",[1,3])("S",[0])], T = ?[("check",[1,3])("T",[1])], body x = ['Emb ['ListElim ['List A] y ['Emb x] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]]], tm = ['Lam \bs. ['Emb ['ListElim ['List A] y ['Emb bs] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]]]], ty = {y*} ?[("check",[1])("T",[1])]]
err >   synth {y_2 -> {y_2*} S}. check@q. q!{y_2*} T. q!{y_2*, x=y_2} body.
err >
err > [4mexec[0m 
err >   [<type |-@p {}, check |-@p {}, synth |-@p {}, ([] 0 ) | <>, [33;1m\A_0. [0m, type { A_0 -> [] }. , <> @ p | p [A] @ ([] 0 ), ([] 2 ) | <>, [33;1m\y_1. [0m, synth { y_1 -> {y_1*} ?[("check",[1])("S",[0])] }. , <> @ p | q [y] @ ([] 2 ), ([] 4 ) | <>, [33;1m\y_2. [0m, synth { y_2 -> {y_2*} ?[("check",[1,3])("S",[0])] }. ]
err >   4: [30;42m[?[("check",[1])("S",[0])] := ['List A_0], ?[("check",[1])("T",[1])] := ['Arr ['List A_0] ['List A_0]], ?[("check",[1,3])("S",[0])] := ['List A_0], ?[("check",[1,3])("T",[1])] := ['List A_0]][0m
err >   [S = ?[("check",[1,3])("S",[0])], T = ?[("check",[1,3])("T",[1])], body x = ['Emb ['ListElim ['List A] y ['Emb x] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]]], tm = ['Lam \bs. ['Emb ['ListElim ['List A] y ['Emb bs] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]]]], ty = {y*} ?[("check",[1])("T",[1])]]
err >   check@q. q!{y_2*} T. q!{y_2*, x=y_2} body.
err >
err > [4mexec[0m 
err >   [<type |-@p {}, check |-@p {}, synth |-@p {}, ([] 0 ) | <>, [33;1m\A_0. [0m, type { A_0 -> [] }. , <> @ p | p [A] @ ([] 0 ), ([] 2 ) | <>, [33;1m\y_1. [0m, synth { y_1 -> {y_1*} ?[("check",[1])("S",[0])] }. , <> @ p | q [y] @ ([] 2 ), ([] 4 ) | <>, [33;1m\y_2. [0m, synth { y_2 -> {y_2*} ?[("check",[1,3])("S",[0])] }. , ([] 4 [] p?ty. p?tm. [4mcase[0m tm {['Lam \x. body] -> 'Type?S. 'Type?T. (ty ~ ['Arr S T] | \y. synth {y -> {y*} S}. check@q. q!{y*} T. q!{y*, x=y} body.) ; 'Nil -> [4mcase[0m ty {'One ->  ; ['List S] ->  ; otherwise -> #"wrong type for Nil"} ; ['Cons s t] -> [4mcase[0m ty {['Pair S T] -> (check@q. q!S. q!s. | check@r. r!T. r!t.) ; ['List S] -> (check@q. q!S. q!s. | check@r. r!['List S]. r!t.) ; otherwise -> #"wrong type for Cons"} ; ['Emb e] -> synth@q. q!e. q?S. S ~ ty}) @ p | q [y] @ <>]
err >   4: [30;42m[?[("check",[1])("S",[0])] := ['List A_0], ?[("check",[1])("T",[1])] := ['Arr ['List A_0] ['List A_0]], ?[("check",[1,3])("S",[0])] := ['List A_0], ?[("check",[1,3])("T",[1])] := ['List A_0]][0m
err >   [S = ?[("check",[1,3])("S",[0])], T = ?[("check",[1,3])("T",[1])], body x = ['Emb ['ListElim ['List A] y ['Emb x] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]]], tm = ['Lam \bs. ['Emb ['ListElim ['List A] y ['Emb bs] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]]]], ty = {y*} ?[("check",[1])("T",[1])]]
err >   q!{y_2*} T. q!{y_2*, x=y_2} body.
err >
err > [4mexec[0m 
err >   [<type |-@p {}, check |-@p {}, synth |-@p {}, ([] 0 ) | <>, [33;1m\A_0. [0m, type { A_0 -> [] }. , <> @ p | p [A] @ ([] 0 ), ([] 2 ) | <>, [33;1m\y_1. [0m, synth { y_1 -> {y_1*} ?[("check",[1])("S",[0])] }. , <> @ p | q [y] @ ([] 2 ), ([] 4 ) | <>, [33;1m\y_2. [0m, synth { y_2 -> {y_2*} ?[("check",[1,3])("S",[0])] }. , <> @ p | q [y] @ ([] 4 [S = ?[("check",[1,3])("S",[0])], T = ?[("check",[1,3])("T",[1])], body x = ['Emb ['ListElim ['List A] y ['Emb x] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]]], tm = ['Lam \bs. ['Emb ['ListElim ['List A] y ['Emb bs] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]]]], ty = {y*} ?[("check",[1])("T",[1])]] q!{y_2*, x=y_2} body.), [34;1m!p. [] {y_2*} ?[("check",[1,3])("T",[1])][0m]
err >   4: [30;42m[?[("check",[1])("S",[0])] := ['List A_0], ?[("check",[1])("T",[1])] := ['Arr ['List A_0] ['List A_0]], ?[("check",[1,3])("S",[0])] := ['List A_0], ?[("check",[1,3])("T",[1])] := ['List A_0]][0m
err >   []
err >   p?ty. p?tm. [4mcase[0m tm {['Lam \x. body] -> 'Type?S. 'Type?T. (ty ~ ['Arr S T] | \y. synth {y -> {y*} S}. check@q. q!{y*} T. q!{y*, x=y} body.) ; 'Nil -> [4mcase[0m ty {'One ->  ; ['List S] ->  ; otherwise -> #"wrong type for Nil"} ; ['Cons s t] -> [4mcase[0m ty {['Pair S T] -> (check@q. q!S. q!s. | check@r. r!T. r!t.) ; ['List S] -> (check@q. q!S. q!s. | check@r. r!['List S]. r!t.) ; otherwise -> #"wrong type for Cons"} ; ['Emb e] -> synth@q. q!e. q?S. S ~ ty}
err >
err > [4mexec[0m 
err >   [<type |-@p {}, check |-@p {}, synth |-@p {}, ([] 0 ) | <>, [33;1m\A_0. [0m, type { A_0 -> [] }. , <> @ p | p [A] @ ([] 0 ), ([] 2 ) | <>, [33;1m\y_1. [0m, synth { y_1 -> {y_1*} ?[("check",[1])("S",[0])] }. , <> @ p | q [y] @ ([] 2 ), ([] 4 ) | <>, [33;1m\y_2. [0m, synth { y_2 -> {y_2*} ?[("check",[1,3])("S",[0])] }. , <> @ p | q [y] @ ([] 4 [S = ?[("check",[1,3])("S",[0])], T = ?[("check",[1,3])("T",[1])], body x = ['Emb ['ListElim ['List A] y ['Emb x] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]]], tm = ['Lam \bs. ['Emb ['ListElim ['List A] y ['Emb bs] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]]]], ty = {y*} ?[("check",[1])("T",[1])]] q!{y_2*, x=y_2} body.)]
err >   4: [30;42m[?[("check",[1])("S",[0])] := ['List A_0], ?[("check",[1])("T",[1])] := ['Arr ['List A_0] ['List A_0]], ?[("check",[1,3])("S",[0])] := ['List A_0], ?[("check",[1,3])("T",[1])] := ['List A_0]][0m
err >   [ty = {y*} ?[("check",[1,3])("T",[1])]]
err >   p?tm. [4mcase[0m tm {['Lam \x. body] -> 'Type?S. 'Type?T. (ty ~ ['Arr S T] | \y. synth {y -> {y*} S}. check@q. q!{y*} T. q!{y*, x=y} body.) ; 'Nil -> [4mcase[0m ty {'One ->  ; ['List S] ->  ; otherwise -> #"wrong type for Nil"} ; ['Cons s t] -> [4mcase[0m ty {['Pair S T] -> (check@q. q!S. q!s. | check@r. r!T. r!t.) ; ['List S] -> (check@q. q!S. q!s. | check@r. r!['List S]. r!t.) ; otherwise -> #"wrong type for Cons"} ; ['Emb e] -> synth@q. q!e. q?S. S ~ ty}
err >
err > [4mexec[0m 
err >   [<type |-@p {}, check |-@p {}, synth |-@p {}, ([] 0 ) | <>, [33;1m\A_0. [0m, type { A_0 -> [] }. , <> @ p | p [A] @ ([] 0 ), ([] 2 ) | <>, [33;1m\y_1. [0m, synth { y_1 -> {y_1*} ?[("check",[1])("S",[0])] }. , <> @ p | q [y] @ ([] 2 ), ([] 4 ) | <>, [33;1m\y_2. [0m, synth { y_2 -> {y_2*} ?[("check",[1,3])("S",[0])] }. , ([] 4 [ty = {y*} ?[("check",[1,3])("T",[1])]] p?tm. [4mcase[0m tm {['Lam \x. body] -> 'Type?S. 'Type?T. (ty ~ ['Arr S T] | \y. synth {y -> {y*} S}. check@q. q!{y*} T. q!{y*, x=y} body.) ; 'Nil -> [4mcase[0m ty {'One ->  ; ['List S] ->  ; otherwise -> #"wrong type for Nil"} ; ['Cons s t] -> [4mcase[0m ty {['Pair S T] -> (check@q. q!S. q!s. | check@r. r!T. r!t.) ; ['List S] -> (check@q. q!S. q!s. | check@r. r!['List S]. r!t.) ; otherwise -> #"wrong type for Cons"} ; ['Emb e] -> synth@q. q!e. q?S. S ~ ty}) @ p | q [y] @ <>]
err >   4: [30;42m[?[("check",[1])("S",[0])] := ['List A_0], ?[("check",[1])("T",[1])] := ['Arr ['List A_0] ['List A_0]], ?[("check",[1,3])("S",[0])] := ['List A_0], ?[("check",[1,3])("T",[1])] := ['List A_0]][0m
err >   [S = ?[("check",[1,3])("S",[0])], T = ?[("check",[1,3])("T",[1])], body x = ['Emb ['ListElim ['List A] y ['Emb x] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]]], tm = ['Lam \bs. ['Emb ['ListElim ['List A] y ['Emb bs] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]]]], ty = {y*} ?[("check",[1])("T",[1])]]
err >   q!{y_2*, x=y_2} body.
err >
err > [4mexec[0m 
err >   [<type |-@p {}, check |-@p {}, synth |-@p {}, ([] 0 ) | <>, [33;1m\A_0. [0m, type { A_0 -> [] }. , <> @ p | p [A] @ ([] 0 ), ([] 2 ) | <>, [33;1m\y_1. [0m, synth { y_1 -> {y_1*} ?[("check",[1])("S",[0])] }. , <> @ p | q [y] @ ([] 2 ), ([] 4 ) | <>, [33;1m\y_2. [0m, synth { y_2 -> {y_2*} ?[("check",[1,3])("S",[0])] }. , <> @ p | q [y] @ ([] 4 ), [34;1m!p. [] ['Emb ['ListElim ['List A_0] y_1 ['Emb y_2] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]]][0m]
err >   4: [30;42m[?[("check",[1])("S",[0])] := ['List A_0], ?[("check",[1])("T",[1])] := ['Arr ['List A_0] ['List A_0]], ?[("check",[1,3])("S",[0])] := ['List A_0], ?[("check",[1,3])("T",[1])] := ['List A_0]][0m
err >   [ty = {y*} ?[("check",[1,3])("T",[1])]]
err >   p?tm. [4mcase[0m tm {['Lam \x. body] -> 'Type?S. 'Type?T. (ty ~ ['Arr S T] | \y. synth {y -> {y*} S}. check@q. q!{y*} T. q!{y*, x=y} body.) ; 'Nil -> [4mcase[0m ty {'One ->  ; ['List S] ->  ; otherwise -> #"wrong type for Nil"} ; ['Cons s t] -> [4mcase[0m ty {['Pair S T] -> (check@q. q!S. q!s. | check@r. r!T. r!t.) ; ['List S] -> (check@q. q!S. q!s. | check@r. r!['List S]. r!t.) ; otherwise -> #"wrong type for Cons"} ; ['Emb e] -> synth@q. q!e. q?S. S ~ ty}
err >
err > [4mexec[0m 
err >   [<type |-@p {}, check |-@p {}, synth |-@p {}, ([] 0 ) | <>, [33;1m\A_0. [0m, type { A_0 -> [] }. , <> @ p | p [A] @ ([] 0 ), ([] 2 ) | <>, [33;1m\y_1. [0m, synth { y_1 -> {y_1*} ?[("check",[1])("S",[0])] }. , <> @ p | q [y] @ ([] 2 ), ([] 4 ) | <>, [33;1m\y_2. [0m, synth { y_2 -> {y_2*} ?[("check",[1,3])("S",[0])] }. , <> @ p | q [y] @ ([] 4 )]
err >   4: [30;42m[?[("check",[1])("S",[0])] := ['List A_0], ?[("check",[1])("T",[1])] := ['Arr ['List A_0] ['List A_0]], ?[("check",[1,3])("S",[0])] := ['List A_0], ?[("check",[1,3])("T",[1])] := ['List A_0]][0m
err >   [tm = ['Emb ['ListElim ['List A] y ['Emb y] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]]], ty = {y*} ?[("check",[1,3])("T",[1])]]
err >   [4mcase[0m tm {['Lam \x. body] -> 'Type?S. 'Type?T. (ty ~ ['Arr S T] | \y. synth {y -> {y*} S}. check@q. q!{y*} T. q!{y*, x=y} body.) ; 'Nil -> [4mcase[0m ty {'One ->  ; ['List S] ->  ; otherwise -> #"wrong type for Nil"} ; ['Cons s t] -> [4mcase[0m ty {['Pair S T] -> (check@q. q!S. q!s. | check@r. r!T. r!t.) ; ['List S] -> (check@q. q!S. q!s. | check@r. r!['List S]. r!t.) ; otherwise -> #"wrong type for Cons"} ; ['Emb e] -> synth@q. q!e. q?S. S ~ ty}
err >
err > [4mexec[0m 
err >   [<type |-@p {}, check |-@p {}, synth |-@p {}, ([] 0 ) | <>, [33;1m\A_0. [0m, type { A_0 -> [] }. , <> @ p | p [A] @ ([] 0 ), ([] 2 ) | <>, [33;1m\y_1. [0m, synth { y_1 -> {y_1*} ?[("check",[1])("S",[0])] }. , <> @ p | q [y] @ ([] 2 ), ([] 4 ) | <>, [33;1m\y_2. [0m, synth { y_2 -> {y_2*} ?[("check",[1,3])("S",[0])] }. , <> @ p | q [y] @ ([] 4 )]
err >   4: [30;42m[?[("check",[1])("S",[0])] := ['List A_0], ?[("check",[1])("T",[1])] := ['Arr ['List A_0] ['List A_0]], ?[("check",[1,3])("S",[0])] := ['List A_0], ?[("check",[1,3])("T",[1])] := ['List A_0]][0m
err >   [e = ['ListElim ['List A] y ['Emb y] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]], tm = ['Emb ['ListElim ['List A] y ['Emb y] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]]], ty = {y*} ?[("check",[1,3])("T",[1])]]
err >   synth@q. q!e. q?S. S ~ ty
err >
err > [4mexec[0m 
err >   [<type |-@p {}, check |-@p {}, synth |-@p {}, ([] 0 ) | <>, [33;1m\A_0. [0m, type { A_0 -> [] }. , <> @ p | p [A] @ ([] 0 ), ([] 2 ) | <>, [33;1m\y_1. [0m, synth { y_1 -> {y_1*} ?[("check",[1])("S",[0])] }. , <> @ p | q [y] @ ([] 2 ), ([] 4 ) | <>, [33;1m\y_2. [0m, synth { y_2 -> {y_2*} ?[("check",[1,3])("S",[0])] }. , <> @ p | q [y] @ ([] 4 ), ([] 4 [] p?tm. [4mlookup[0m tm {S -> p!S.} [4melse[0m p!S.) @ p | q [] @ <>]
err >   4: [30;42m[?[("check",[1])("S",[0])] := ['List A_0], ?[("check",[1])("T",[1])] := ['Arr ['List A_0] ['List A_0]], ?[("check",[1,3])("S",[0])] := ['List A_0], ?[("check",[1,3])("T",[1])] := ['List A_0]][0m
err >   [e = ['ListElim ['List A] y ['Emb y] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]], tm = ['Emb ['ListElim ['List A] y ['Emb y] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]]], ty = {y*} ?[("check",[1,3])("T",[1])]]
err >   q!e. q?S. S ~ ty
err >
err > [4mexec[0m 
err >   [<type |-@p {}, check |-@p {}, synth |-@p {}, ([] 0 ) | <>, [33;1m\A_0. [0m, type { A_0 -> [] }. , <> @ p | p [A] @ ([] 0 ), ([] 2 ) | <>, [33;1m\y_1. [0m, synth { y_1 -> {y_1*} ?[("check",[1])("S",[0])] }. , <> @ p | q [y] @ ([] 2 ), ([] 4 ) | <>, [33;1m\y_2. [0m, synth { y_2 -> {y_2*} ?[("check",[1,3])("S",[0])] }. , <> @ p | q [y] @ ([] 4 ), <> @ p | q [] @ ([] 4 [e = ['ListElim ['List A] y ['Emb y] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]], tm = ['Emb ['ListElim ['List A] y ['Emb y] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]]], ty = {y*} ?[("check",[1,3])("T",[1])]] q?S. S ~ ty), [34;1m!p. [] ['ListElim ['List A_0] y_1 ['Emb y_2] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]][0m]
err >   4: [30;42m[?[("check",[1])("S",[0])] := ['List A_0], ?[("check",[1])("T",[1])] := ['Arr ['List A_0] ['List A_0]], ?[("check",[1,3])("S",[0])] := ['List A_0], ?[("check",[1,3])("T",[1])] := ['List A_0]][0m
err >   []
err >   p?tm. [4mlookup[0m tm {S -> p!S.} [4melse[0m p!S.
err >
err > [4mexec[0m 
err >   [<type |-@p {}, check |-@p {}, synth |-@p {}, ([] 0 ) | <>, [33;1m\A_0. [0m, type { A_0 -> [] }. , <> @ p | p [A] @ ([] 0 ), ([] 2 ) | <>, [33;1m\y_1. [0m, synth { y_1 -> {y_1*} ?[("check",[1])("S",[0])] }. , <> @ p | q [y] @ ([] 2 ), ([] 4 ) | <>, [33;1m\y_2. [0m, synth { y_2 -> {y_2*} ?[("check",[1,3])("S",[0])] }. , <> @ p | q [y] @ ([] 4 ), <> @ p | q [] @ ([] 4 [e = ['ListElim ['List A] y ['Emb y] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]], tm = ['Emb ['ListElim ['List A] y ['Emb y] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]]], ty = {y*} ?[("check",[1,3])("T",[1])]] q?S. S ~ ty)]
err >   4: [30;42m[?[("check",[1])("S",[0])] := ['List A_0], ?[("check",[1])("T",[1])] := ['Arr ['List A_0] ['List A_0]], ?[("check",[1,3])("S",[0])] := ['List A_0], ?[("check",[1,3])("T",[1])] := ['List A_0]][0m
err >   [tm = ['ListElim ['List A] y ['Emb y] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]]]
err >   [4mlookup[0m tm {S -> p!S.} [4melse[0m p!S.
err >
err > [4mexec[0m 
err >   [<type |-@p {}, check |-@p {}, synth |-@p {}, ([] 0 ) | <>, [33;1m\A_0. [0m, type { A_0 -> [] }. , <> @ p | p [A] @ ([] 0 ), ([] 2 ) | <>, [33;1m\y_1. [0m, synth { y_1 -> {y_1*} ?[("check",[1])("S",[0])] }. , <> @ p | q [y] @ ([] 2 ), ([] 4 ) | <>, [33;1m\y_2. [0m, synth { y_2 -> {y_2*} ?[("check",[1,3])("S",[0])] }. , <> @ p | q [y] @ ([] 4 ), <> @ p | q [] @ ([] 4 [e = ['ListElim ['List A] y ['Emb y] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]], tm = ['Emb ['ListElim ['List A] y ['Emb y] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]]], ty = {y*} ?[("check",[1,3])("T",[1])]] q?S. S ~ ty)]
err >   4: [30;42m[?[("check",[1])("S",[0])] := ['List A_0], ?[("check",[1])("T",[1])] := ['Arr ['List A_0] ['List A_0]], ?[("check",[1,3])("S",[0])] := ['List A_0], ?[("check",[1,3])("T",[1])] := ['List A_0]][0m
err >   [tm = ['ListElim ['List A] y ['Emb y] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]]]
err >   [4mcase[0m tm {['Rad t ty] -> (type@r. r!ty. | check@q. q!ty. q!t. | p!ty.) ; ['Fst e] -> 'Type?S. 'Type?T. (synth@q. q!e. q?ty. ty ~ ['Pair S T] | p!S.) ; ['Snd e] -> 'Type?S. 'Type?T. (synth@q. q!e. q?ty. ty ~ ['Pair S T] | p!T.) ; ['ListElim ty e n \x. \xs. \ih. c] -> (p!ty. | type@r. r!ty. | check@q. q!ty. q!n. | 'Type?X. (synth@u. u!e. u?V. V ~ ['List X] | \y. synth {y -> {y*} X}. \ys. synth {ys -> ['List {y*, ys*} X]}. \jh. synth {jh -> {y*, ys*, jh*} ty}. check@v. v!{y*, ys*, jh*} ty. v!{y*, ys*, jh*, x=y, xs=ys, ih=jh} c.)) ; ['App f s] -> 'Type?U. 'Type?V. (synth@q. q!f. q?ty. ty ~ ['Arr U V] | check@r. r!U. r!s. | p!V.)}
err >
err > [4mexec[0m 
err >   [<type |-@p {}, check |-@p {}, synth |-@p {}, ([] 0 ) | <>, [33;1m\A_0. [0m, type { A_0 -> [] }. , <> @ p | p [A] @ ([] 0 ), ([] 2 ) | <>, [33;1m\y_1. [0m, synth { y_1 -> {y_1*} ?[("check",[1])("S",[0])] }. , <> @ p | q [y] @ ([] 2 ), ([] 4 ) | <>, [33;1m\y_2. [0m, synth { y_2 -> {y_2*} ?[("check",[1,3])("S",[0])] }. , <> @ p | q [y] @ ([] 4 ), <> @ p | q [] @ ([] 4 [e = ['ListElim ['List A] y ['Emb y] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]], tm = ['Emb ['ListElim ['List A] y ['Emb y] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]]], ty = {y*} ?[("check",[1,3])("T",[1])]] q?S. S ~ ty)]
err >   4: [30;42m[?[("check",[1])("S",[0])] := ['List A_0], ?[("check",[1])("T",[1])] := ['Arr ['List A_0] ['List A_0]], ?[("check",[1,3])("S",[0])] := ['List A_0], ?[("check",[1,3])("T",[1])] := ['List A_0]][0m
err >   [c x xs ih = ['Cons ['Emb x] ['Emb ih]], e = y, n = ['Emb y], tm = ['ListElim ['List A] y ['Emb y] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]], ty = ['List A]]
err >   p!ty. | type@r. r!ty. | check@q. q!ty. q!n. | 'Type?X. (synth@u. u!e. u?V. V ~ ['List X] | \y. synth {y -> {y*} X}. \ys. synth {ys -> ['List {y*, ys*} X]}. \jh. synth {jh -> {y*, ys*, jh*} ty}. check@v. v!{y*, ys*, jh*} ty. v!{y*, ys*, jh*, x=y, xs=ys, ih=jh} c.)
err >
err > [4mexec[0m 
err >   [<type |-@p {}, check |-@p {}, synth |-@p {}, ([] 0 ) | <>, [33;1m\A_0. [0m, type { A_0 -> [] }. , <> @ p | p [A] @ ([] 0 ), ([] 2 ) | <>, [33;1m\y_1. [0m, synth { y_1 -> {y_1*} ?[("check",[1])("S",[0])] }. , <> @ p | q [y] @ ([] 2 ), ([] 4 ) | <>, [33;1m\y_2. [0m, synth { y_2 -> {y_2*} ?[("check",[1,3])("S",[0])] }. , <> @ p | q [y] @ ([] 4 ), <> @ p | q [] @ ([] 4 [e = ['ListElim ['List A] y ['Emb y] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]], tm = ['Emb ['ListElim ['List A] y ['Emb y] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]]], ty = {y*} ?[("check",[1,3])("T",[1])]] q?S. S ~ ty), <> | ([] 4 [c x xs ih = ['Cons ['Emb x] ['Emb ih]], e = y, n = ['Emb y], tm = ['ListElim ['List A] y ['Emb y] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]], ty = ['List A]] type@r. r!ty. | check@q. q!ty. q!n. | 'Type?X. (synth@u. u!e. u?V. V ~ ['List X] | \y. synth {y -> {y*} X}. \ys. synth {ys -> ['List {y*, ys*} X]}. \jh. synth {jh -> {y*, ys*, jh*} ty}. check@v. v!{y*, ys*, jh*} ty. v!{y*, ys*, jh*, x=y, xs=ys, ih=jh} c.))]
err >   4: [30;42m[?[("check",[1])("S",[0])] := ['List A_0], ?[("check",[1])("T",[1])] := ['Arr ['List A_0] ['List A_0]], ?[("check",[1,3])("S",[0])] := ['List A_0], ?[("check",[1,3])("T",[1])] := ['List A_0]][0m
err >   [c x xs ih = ['Cons ['Emb x] ['Emb ih]], e = y, n = ['Emb y], tm = ['ListElim ['List A] y ['Emb y] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]], ty = ['List A]]
err >   p!ty.
err >
err > [4mexec[0m 
err >   [<type |-@p {}, check |-@p {}, synth |-@p {}, ([] 0 ) | <>, [33;1m\A_0. [0m, type { A_0 -> [] }. , <> @ p | p [A] @ ([] 0 ), ([] 2 ) | <>, [33;1m\y_1. [0m, synth { y_1 -> {y_1*} ?[("check",[1])("S",[0])] }. , <> @ p | q [y] @ ([] 2 ), ([] 4 ) | <>, [33;1m\y_2. [0m, synth { y_2 -> {y_2*} ?[("check",[1,3])("S",[0])] }. , <> @ p | q [y] @ ([] 4 ), <> @ p | q [] @ ([[34;1m!q. [] ['List A_0][0m] 4 [e = ['ListElim ['List A] y ['Emb y] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]], tm = ['Emb ['ListElim ['List A] y ['Emb y] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]]], ty = {y*} ?[("check",[1,3])("T",[1])]] q?S. S ~ ty), <> | ([] 4 [c x xs ih = ['Cons ['Emb x] ['Emb ih]], e = y, n = ['Emb y], tm = ['ListElim ['List A] y ['Emb y] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]], ty = ['List A]] type@r. r!ty. | check@q. q!ty. q!n. | 'Type?X. (synth@u. u!e. u?V. V ~ ['List X] | \y. synth {y -> {y*} X}. \ys. synth {ys -> ['List {y*, ys*} X]}. \jh. synth {jh -> {y*, ys*, jh*} ty}. check@v. v!{y*, ys*, jh*} ty. v!{y*, ys*, jh*, x=y, xs=ys, ih=jh} c.))]
err >   4: [30;42m[?[("check",[1])("S",[0])] := ['List A_0], ?[("check",[1])("T",[1])] := ['Arr ['List A_0] ['List A_0]], ?[("check",[1,3])("S",[0])] := ['List A_0], ?[("check",[1,3])("T",[1])] := ['List A_0]][0m
err >   
err >   
err >
err > [4mexec[0m 
err >   [<type |-@p {}, check |-@p {}, synth |-@p {}, ([] 0 ) | <>, [33;1m\A_0. [0m, type { A_0 -> [] }. , <> @ p | p [A] @ ([] 0 ), ([] 2 ) | <>, [33;1m\y_1. [0m, synth { y_1 -> {y_1*} ?[("check",[1])("S",[0])] }. , <> @ p | q [y] @ ([] 2 ), ([] 4 ) | <>, [33;1m\y_2. [0m, synth { y_2 -> {y_2*} ?[("check",[1,3])("S",[0])] }. , <> @ p | q [y] @ ([] 4 ), <> @ p | q [] @ ([[34;1m!q. [] ['List A_0][0m] 4 [e = ['ListElim ['List A] y ['Emb y] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]], tm = ['Emb ['ListElim ['List A] y ['Emb y] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]]], ty = {y*} ?[("check",[1,3])("T",[1])]] q?S. S ~ ty), ([] 4 ) | <>]
err >   4: [30;42m[?[("check",[1])("S",[0])] := ['List A_0], ?[("check",[1])("T",[1])] := ['Arr ['List A_0] ['List A_0]], ?[("check",[1,3])("S",[0])] := ['List A_0], ?[("check",[1,3])("T",[1])] := ['List A_0]][0m
err >   [c x xs ih = ['Cons ['Emb x] ['Emb ih]], e = y, n = ['Emb y], tm = ['ListElim ['List A] y ['Emb y] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]], ty = ['List A]]
err >   type@r. r!ty. | check@q. q!ty. q!n. | 'Type?X. (synth@u. u!e. u?V. V ~ ['List X] | \y. synth {y -> {y*} X}. \ys. synth {ys -> ['List {y*, ys*} X]}. \jh. synth {jh -> {y*, ys*, jh*} ty}. check@v. v!{y*, ys*, jh*} ty. v!{y*, ys*, jh*, x=y, xs=ys, ih=jh} c.)
err >
err > [4mexec[0m 
err >   [<type |-@p {}, check |-@p {}, synth |-@p {}, ([] 0 ) | <>, [33;1m\A_0. [0m, type { A_0 -> [] }. , <> @ p | p [A] @ ([] 0 ), ([] 2 ) | <>, [33;1m\y_1. [0m, synth { y_1 -> {y_1*} ?[("check",[1])("S",[0])] }. , <> @ p | q [y] @ ([] 2 ), ([] 4 ) | <>, [33;1m\y_2. [0m, synth { y_2 -> {y_2*} ?[("check",[1,3])("S",[0])] }. , <> @ p | q [y] @ ([] 4 ), <> @ p | q [] @ ([[34;1m!q. [] ['List A_0][0m] 4 [e = ['ListElim ['List A] y ['Emb y] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]], tm = ['Emb ['ListElim ['List A] y ['Emb y] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]]], ty = {y*} ?[("check",[1,3])("T",[1])]] q?S. S ~ ty), ([] 4 ) | <>, <> | ([] 4 [c x xs ih = ['Cons ['Emb x] ['Emb ih]], e = y, n = ['Emb y], tm = ['ListElim ['List A] y ['Emb y] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]], ty = ['List A]] check@q. q!ty. q!n. | 'Type?X. (synth@u. u!e. u?V. V ~ ['List X] | \y. synth {y -> {y*} X}. \ys. synth {ys -> ['List {y*, ys*} X]}. \jh. synth {jh -> {y*, ys*, jh*} ty}. check@v. v!{y*, ys*, jh*} ty. v!{y*, ys*, jh*, x=y, xs=ys, ih=jh} c.))]
err >   4: [30;42m[?[("check",[1])("S",[0])] := ['List A_0], ?[("check",[1])("T",[1])] := ['Arr ['List A_0] ['List A_0]], ?[("check",[1,3])("S",[0])] := ['List A_0], ?[("check",[1,3])("T",[1])] := ['List A_0]][0m
err >   [c x xs ih = ['Cons ['Emb x] ['Emb ih]], e = y, n = ['Emb y], tm = ['ListElim ['List A] y ['Emb y] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]], ty = ['List A]]
err >   type@r. r!ty.
err >
err > [4mexec[0m 
err >   [<type |-@p {}, check |-@p {}, synth |-@p {}, ([] 0 ) | <>, [33;1m\A_0. [0m, type { A_0 -> [] }. , <> @ p | p [A] @ ([] 0 ), ([] 2 ) | <>, [33;1m\y_1. [0m, synth { y_1 -> {y_1*} ?[("check",[1])("S",[0])] }. , <> @ p | q [y] @ ([] 2 ), ([] 4 ) | <>, [33;1m\y_2. [0m, synth { y_2 -> {y_2*} ?[("check",[1,3])("S",[0])] }. , <> @ p | q [y] @ ([] 4 ), <> @ p | q [] @ ([[34;1m!q. [] ['List A_0][0m] 4 [e = ['ListElim ['List A] y ['Emb y] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]], tm = ['Emb ['ListElim ['List A] y ['Emb y] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]]], ty = {y*} ?[("check",[1,3])("T",[1])]] q?S. S ~ ty), ([] 4 ) | <>, <> | ([] 4 [c x xs ih = ['Cons ['Emb x] ['Emb ih]], e = y, n = ['Emb y], tm = ['ListElim ['List A] y ['Emb y] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]], ty = ['List A]] check@q. q!ty. q!n. | 'Type?X. (synth@u. u!e. u?V. V ~ ['List X] | \y. synth {y -> {y*} X}. \ys. synth {ys -> ['List {y*, ys*} X]}. \jh. synth {jh -> {y*, ys*, jh*} ty}. check@v. v!{y*, ys*, jh*} ty. v!{y*, ys*, jh*, x=y, xs=ys, ih=jh} c.)), ([] 4 [] p?ty. [4mlookup[0m ty {S -> } [4melse[0m ) @ p | r [] @ <>]
err >   4: [30;42m[?[("check",[1])("S",[0])] := ['List A_0], ?[("check",[1])("T",[1])] := ['Arr ['List A_0] ['List A_0]], ?[("check",[1,3])("S",[0])] := ['List A_0], ?[("check",[1,3])("T",[1])] := ['List A_0]][0m
err >   [c x xs ih = ['Cons ['Emb x] ['Emb ih]], e = y, n = ['Emb y], tm = ['ListElim ['List A] y ['Emb y] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]], ty = ['List A]]
err >   r!ty.
err >
err > [4mexec[0m 
err >   [<type |-@p {}, check |-@p {}, synth |-@p {}, ([] 0 ) | <>, [33;1m\A_0. [0m, type { A_0 -> [] }. , <> @ p | p [A] @ ([] 0 ), ([] 2 ) | <>, [33;1m\y_1. [0m, synth { y_1 -> {y_1*} ?[("check",[1])("S",[0])] }. , <> @ p | q [y] @ ([] 2 ), ([] 4 ) | <>, [33;1m\y_2. [0m, synth { y_2 -> {y_2*} ?[("check",[1,3])("S",[0])] }. , <> @ p | q [y] @ ([] 4 ), <> @ p | q [] @ ([[34;1m!q. [] ['List A_0][0m] 4 [e = ['ListElim ['List A] y ['Emb y] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]], tm = ['Emb ['ListElim ['List A] y ['Emb y] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]]], ty = {y*} ?[("check",[1,3])("T",[1])]] q?S. S ~ ty), ([] 4 ) | <>, <> | ([] 4 [c x xs ih = ['Cons ['Emb x] ['Emb ih]], e = y, n = ['Emb y], tm = ['ListElim ['List A] y ['Emb y] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]], ty = ['List A]] check@q. q!ty. q!n. | 'Type?X. (synth@u. u!e. u?V. V ~ ['List X] | \y. synth {y -> {y*} X}. \ys. synth {ys -> ['List {y*, ys*} X]}. \jh. synth {jh -> {y*, ys*, jh*} ty}. check@v. v!{y*, ys*, jh*} ty. v!{y*, ys*, jh*, x=y, xs=ys, ih=jh} c.)), <> @ p | r [] @ ([] 4 ), [34;1m!p. [] ['List A_0][0m]
err >   4: [30;42m[?[("check",[1])("S",[0])] := ['List A_0], ?[("check",[1])("T",[1])] := ['Arr ['List A_0] ['List A_0]], ?[("check",[1,3])("S",[0])] := ['List A_0], ?[("check",[1,3])("T",[1])] := ['List A_0]][0m
err >   []
err >   p?ty. [4mlookup[0m ty {S -> } [4melse[0m 
err >
err > [4mexec[0m 
err >   [<type |-@p {}, check |-@p {}, synth |-@p {}, ([] 0 ) | <>, [33;1m\A_0. [0m, type { A_0 -> [] }. , <> @ p | p [A] @ ([] 0 ), ([] 2 ) | <>, [33;1m\y_1. [0m, synth { y_1 -> {y_1*} ?[("check",[1])("S",[0])] }. , <> @ p | q [y] @ ([] 2 ), ([] 4 ) | <>, [33;1m\y_2. [0m, synth { y_2 -> {y_2*} ?[("check",[1,3])("S",[0])] }. , <> @ p | q [y] @ ([] 4 ), <> @ p | q [] @ ([[34;1m!q. [] ['List A_0][0m] 4 [e = ['ListElim ['List A] y ['Emb y] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]], tm = ['Emb ['ListElim ['List A] y ['Emb y] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]]], ty = {y*} ?[("check",[1,3])("T",[1])]] q?S. S ~ ty), ([] 4 ) | <>, <> | ([] 4 [c x xs ih = ['Cons ['Emb x] ['Emb ih]], e = y, n = ['Emb y], tm = ['ListElim ['List A] y ['Emb y] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]], ty = ['List A]] check@q. q!ty. q!n. | 'Type?X. (synth@u. u!e. u?V. V ~ ['List X] | \y. synth {y -> {y*} X}. \ys. synth {ys -> ['List {y*, ys*} X]}. \jh. synth {jh -> {y*, ys*, jh*} ty}. check@v. v!{y*, ys*, jh*} ty. v!{y*, ys*, jh*, x=y, xs=ys, ih=jh} c.)), <> @ p | r [] @ ([] 4 )]
err >   4: [30;42m[?[("check",[1])("S",[0])] := ['List A_0], ?[("check",[1])("T",[1])] := ['Arr ['List A_0] ['List A_0]], ?[("check",[1,3])("S",[0])] := ['List A_0], ?[("check",[1,3])("T",[1])] := ['List A_0]][0m
err >   [ty = ['List A]]
err >   [4mlookup[0m ty {S -> } [4melse[0m 
err >
err > [4mexec[0m 
err >   [<type |-@p {}, check |-@p {}, synth |-@p {}, ([] 0 ) | <>, [33;1m\A_0. [0m, type { A_0 -> [] }. , <> @ p | p [A] @ ([] 0 ), ([] 2 ) | <>, [33;1m\y_1. [0m, synth { y_1 -> {y_1*} ?[("check",[1])("S",[0])] }. , <> @ p | q [y] @ ([] 2 ), ([] 4 ) | <>, [33;1m\y_2. [0m, synth { y_2 -> {y_2*} ?[("check",[1,3])("S",[0])] }. , <> @ p | q [y] @ ([] 4 ), <> @ p | q [] @ ([[34;1m!q. [] ['List A_0][0m] 4 [e = ['ListElim ['List A] y ['Emb y] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]], tm = ['Emb ['ListElim ['List A] y ['Emb y] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]]], ty = {y*} ?[("check",[1,3])("T",[1])]] q?S. S ~ ty), ([] 4 ) | <>, <> | ([] 4 [c x xs ih = ['Cons ['Emb x] ['Emb ih]], e = y, n = ['Emb y], tm = ['ListElim ['List A] y ['Emb y] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]], ty = ['List A]] check@q. q!ty. q!n. | 'Type?X. (synth@u. u!e. u?V. V ~ ['List X] | \y. synth {y -> {y*} X}. \ys. synth {ys -> ['List {y*, ys*} X]}. \jh. synth {jh -> {y*, ys*, jh*} ty}. check@v. v!{y*, ys*, jh*} ty. v!{y*, ys*, jh*, x=y, xs=ys, ih=jh} c.)), <> @ p | r [] @ ([] 4 )]
err >   4: [30;42m[?[("check",[1])("S",[0])] := ['List A_0], ?[("check",[1])("T",[1])] := ['Arr ['List A_0] ['List A_0]], ?[("check",[1,3])("S",[0])] := ['List A_0], ?[("check",[1,3])("T",[1])] := ['List A_0]][0m
err >   [ty = ['List A]]
err >   [4mcase[0m ty {'One ->  ; ['Pair S T] -> (type@q. q!S. | type@r. r!T.) ; ['List S] -> type@q. q!S. ; ['Arr S T] -> (type@q. q!S. | type@r. r!T.) ; otherwise -> #"not a valid type"}
err >
err > [4mexec[0m 
err >   [<type |-@p {}, check |-@p {}, synth |-@p {}, ([] 0 ) | <>, [33;1m\A_0. [0m, type { A_0 -> [] }. , <> @ p | p [A] @ ([] 0 ), ([] 2 ) | <>, [33;1m\y_1. [0m, synth { y_1 -> {y_1*} ?[("check",[1])("S",[0])] }. , <> @ p | q [y] @ ([] 2 ), ([] 4 ) | <>, [33;1m\y_2. [0m, synth { y_2 -> {y_2*} ?[("check",[1,3])("S",[0])] }. , <> @ p | q [y] @ ([] 4 ), <> @ p | q [] @ ([[34;1m!q. [] ['List A_0][0m] 4 [e = ['ListElim ['List A] y ['Emb y] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]], tm = ['Emb ['ListElim ['List A] y ['Emb y] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]]], ty = {y*} ?[("check",[1,3])("T",[1])]] q?S. S ~ ty), ([] 4 ) | <>, <> | ([] 4 [c x xs ih = ['Cons ['Emb x] ['Emb ih]], e = y, n = ['Emb y], tm = ['ListElim ['List A] y ['Emb y] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]], ty = ['List A]] check@q. q!ty. q!n. | 'Type?X. (synth@u. u!e. u?V. V ~ ['List X] | \y. synth {y -> {y*} X}. \ys. synth {ys -> ['List {y*, ys*} X]}. \jh. synth {jh -> {y*, ys*, jh*} ty}. check@v. v!{y*, ys*, jh*} ty. v!{y*, ys*, jh*, x=y, xs=ys, ih=jh} c.)), <> @ p | r [] @ ([] 4 )]
err >   4: [30;42m[?[("check",[1])("S",[0])] := ['List A_0], ?[("check",[1])("T",[1])] := ['Arr ['List A_0] ['List A_0]], ?[("check",[1,3])("S",[0])] := ['List A_0], ?[("check",[1,3])("T",[1])] := ['List A_0]][0m
err >   [S = A, ty = ['List A]]
err >   type@q. q!S.
err >
err > [4mexec[0m 
err >   [<type |-@p {}, check |-@p {}, synth |-@p {}, ([] 0 ) | <>, [33;1m\A_0. [0m, type { A_0 -> [] }. , <> @ p | p [A] @ ([] 0 ), ([] 2 ) | <>, [33;1m\y_1. [0m, synth { y_1 -> {y_1*} ?[("check",[1])("S",[0])] }. , <> @ p | q [y] @ ([] 2 ), ([] 4 ) | <>, [33;1m\y_2. [0m, synth { y_2 -> {y_2*} ?[("check",[1,3])("S",[0])] }. , <> @ p | q [y] @ ([] 4 ), <> @ p | q [] @ ([[34;1m!q. [] ['List A_0][0m] 4 [e = ['ListElim ['List A] y ['Emb y] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]], tm = ['Emb ['ListElim ['List A] y ['Emb y] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]]], ty = {y*} ?[("check",[1,3])("T",[1])]] q?S. S ~ ty), ([] 4 ) | <>, <> | ([] 4 [c x xs ih = ['Cons ['Emb x] ['Emb ih]], e = y, n = ['Emb y], tm = ['ListElim ['List A] y ['Emb y] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]], ty = ['List A]] check@q. q!ty. q!n. | 'Type?X. (synth@u. u!e. u?V. V ~ ['List X] | \y. synth {y -> {y*} X}. \ys. synth {ys -> ['List {y*, ys*} X]}. \jh. synth {jh -> {y*, ys*, jh*} ty}. check@v. v!{y*, ys*, jh*} ty. v!{y*, ys*, jh*, x=y, xs=ys, ih=jh} c.)), <> @ p | r [] @ ([] 4 ), ([] 4 [] p?ty. [4mlookup[0m ty {S -> } [4melse[0m ) @ p | q [] @ <>]
err >   4: [30;42m[?[("check",[1])("S",[0])] := ['List A_0], ?[("check",[1])("T",[1])] := ['Arr ['List A_0] ['List A_0]], ?[("check",[1,3])("S",[0])] := ['List A_0], ?[("check",[1,3])("T",[1])] := ['List A_0]][0m
err >   [S = A, ty = ['List A]]
err >   q!S.
err >
err > [4mexec[0m 
err >   [<type |-@p {}, check |-@p {}, synth |-@p {}, ([] 0 ) | <>, [33;1m\A_0. [0m, type { A_0 -> [] }. , <> @ p | p [A] @ ([] 0 ), ([] 2 ) | <>, [33;1m\y_1. [0m, synth { y_1 -> {y_1*} ?[("check",[1])("S",[0])] }. , <> @ p | q [y] @ ([] 2 ), ([] 4 ) | <>, [33;1m\y_2. [0m, synth { y_2 -> {y_2*} ?[("check",[1,3])("S",[0])] }. , <> @ p | q [y] @ ([] 4 ), <> @ p | q [] @ ([[34;1m!q. [] ['List A_0][0m] 4 [e = ['ListElim ['List A] y ['Emb y] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]], tm = ['Emb ['ListElim ['List A] y ['Emb y] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]]], ty = {y*} ?[("check",[1,3])("T",[1])]] q?S. S ~ ty), ([] 4 ) | <>, <> | ([] 4 [c x xs ih = ['Cons ['Emb x] ['Emb ih]], e = y, n = ['Emb y], tm = ['ListElim ['List A] y ['Emb y] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]], ty = ['List A]] check@q. q!ty. q!n. | 'Type?X. (synth@u. u!e. u?V. V ~ ['List X] | \y. synth {y -> {y*} X}. \ys. synth {ys -> ['List {y*, ys*} X]}. \jh. synth {jh -> {y*, ys*, jh*} ty}. check@v. v!{y*, ys*, jh*} ty. v!{y*, ys*, jh*, x=y, xs=ys, ih=jh} c.)), <> @ p | r [] @ ([] 4 ), <> @ p | q [] @ ([] 4 ), [34;1m!p. [] A_0[0m]
err >   4: [30;42m[?[("check",[1])("S",[0])] := ['List A_0], ?[("check",[1])("T",[1])] := ['Arr ['List A_0] ['List A_0]], ?[("check",[1,3])("S",[0])] := ['List A_0], ?[("check",[1,3])("T",[1])] := ['List A_0]][0m
err >   []
err >   p?ty. [4mlookup[0m ty {S -> } [4melse[0m 
err >
err > [4mexec[0m 
err >   [<type |-@p {}, check |-@p {}, synth |-@p {}, ([] 0 ) | <>, [33;1m\A_0. [0m, type { A_0 -> [] }. , <> @ p | p [A] @ ([] 0 ), ([] 2 ) | <>, [33;1m\y_1. [0m, synth { y_1 -> {y_1*} ?[("check",[1])("S",[0])] }. , <> @ p | q [y] @ ([] 2 ), ([] 4 ) | <>, [33;1m\y_2. [0m, synth { y_2 -> {y_2*} ?[("check",[1,3])("S",[0])] }. , <> @ p | q [y] @ ([] 4 ), <> @ p | q [] @ ([[34;1m!q. [] ['List A_0][0m] 4 [e = ['ListElim ['List A] y ['Emb y] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]], tm = ['Emb ['ListElim ['List A] y ['Emb y] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]]], ty = {y*} ?[("check",[1,3])("T",[1])]] q?S. S ~ ty), ([] 4 ) | <>, <> | ([] 4 [c x xs ih = ['Cons ['Emb x] ['Emb ih]], e = y, n = ['Emb y], tm = ['ListElim ['List A] y ['Emb y] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]], ty = ['List A]] check@q. q!ty. q!n. | 'Type?X. (synth@u. u!e. u?V. V ~ ['List X] | \y. synth {y -> {y*} X}. \ys. synth {ys -> ['List {y*, ys*} X]}. \jh. synth {jh -> {y*, ys*, jh*} ty}. check@v. v!{y*, ys*, jh*} ty. v!{y*, ys*, jh*, x=y, xs=ys, ih=jh} c.)), <> @ p | r [] @ ([] 4 ), <> @ p | q [] @ ([] 4 )]
err >   4: [30;42m[?[("check",[1])("S",[0])] := ['List A_0], ?[("check",[1])("T",[1])] := ['Arr ['List A_0] ['List A_0]], ?[("check",[1,3])("S",[0])] := ['List A_0], ?[("check",[1,3])("T",[1])] := ['List A_0]][0m
err >   [ty = A]
err >   [4mlookup[0m ty {S -> } [4melse[0m 
err >
err > [4mexec[0m 
err >   [<type |-@p {}, check |-@p {}, synth |-@p {}, ([] 0 ) | <>, [33;1m\A_0. [0m, type { A_0 -> [] }. , <> @ p | p [A] @ ([] 0 ), ([] 2 ) | <>, [33;1m\y_1. [0m, synth { y_1 -> {y_1*} ?[("check",[1])("S",[0])] }. , <> @ p | q [y] @ ([] 2 ), ([] 4 ) | <>, [33;1m\y_2. [0m, synth { y_2 -> {y_2*} ?[("check",[1,3])("S",[0])] }. , <> @ p | q [y] @ ([] 4 ), <> @ p | q [] @ ([[34;1m!q. [] ['List A_0][0m] 4 [e = ['ListElim ['List A] y ['Emb y] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]], tm = ['Emb ['ListElim ['List A] y ['Emb y] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]]], ty = {y*} ?[("check",[1,3])("T",[1])]] q?S. S ~ ty), ([] 4 ) | <>, <> | ([] 4 [c x xs ih = ['Cons ['Emb x] ['Emb ih]], e = y, n = ['Emb y], tm = ['ListElim ['List A] y ['Emb y] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]], ty = ['List A]] check@q. q!ty. q!n. | 'Type?X. (synth@u. u!e. u?V. V ~ ['List X] | \y. synth {y -> {y*} X}. \ys. synth {ys -> ['List {y*, ys*} X]}. \jh. synth {jh -> {y*, ys*, jh*} ty}. check@v. v!{y*, ys*, jh*} ty. v!{y*, ys*, jh*, x=y, xs=ys, ih=jh} c.)), <> @ p | r [] @ ([] 4 ), <> @ p | q [] @ ([] 4 )]
err >   4: [30;42m[?[("check",[1])("S",[0])] := ['List A_0], ?[("check",[1])("T",[1])] := ['Arr ['List A_0] ['List A_0]], ?[("check",[1,3])("S",[0])] := ['List A_0], ?[("check",[1,3])("T",[1])] := ['List A_0]][0m
err >   
err >   
err >
err > [4mexec[0m 
err >   [<type |-@p {}, check |-@p {}, synth |-@p {}, ([] 0 ) | <>, [33;1m\A_0. [0m, type { A_0 -> [] }. , <> @ p | p [A] @ ([] 0 ), ([] 2 ) | <>, [33;1m\y_1. [0m, synth { y_1 -> {y_1*} ?[("check",[1])("S",[0])] }. , <> @ p | q [y] @ ([] 2 ), ([] 4 ) | <>, [33;1m\y_2. [0m, synth { y_2 -> {y_2*} ?[("check",[1,3])("S",[0])] }. , <> @ p | q [y] @ ([] 4 ), <> @ p | q [] @ ([[34;1m!q. [] ['List A_0][0m] 4 [e = ['ListElim ['List A] y ['Emb y] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]], tm = ['Emb ['ListElim ['List A] y ['Emb y] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]]], ty = {y*} ?[("check",[1,3])("T",[1])]] q?S. S ~ ty), ([] 4 ) | <>, <> | ([] 4 [c x xs ih = ['Cons ['Emb x] ['Emb ih]], e = y, n = ['Emb y], tm = ['ListElim ['List A] y ['Emb y] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]], ty = ['List A]] check@q. q!ty. q!n. | 'Type?X. (synth@u. u!e. u?V. V ~ ['List X] | \y. synth {y -> {y*} X}. \ys. synth {ys -> ['List {y*, ys*} X]}. \jh. synth {jh -> {y*, ys*, jh*} ty}. check@v. v!{y*, ys*, jh*} ty. v!{y*, ys*, jh*, x=y, xs=ys, ih=jh} c.)), <> @ p | r [] @ ([] 4 ), ([] 4 ) @ p | q [] @ <>]
err >   4: [30;42m[?[("check",[1])("S",[0])] := ['List A_0], ?[("check",[1])("T",[1])] := ['Arr ['List A_0] ['List A_0]], ?[("check",[1,3])("S",[0])] := ['List A_0], ?[("check",[1,3])("T",[1])] := ['List A_0]][0m
err >   
err >   
err >
err > [4mexec[0m 
err >   [<type |-@p {}, check |-@p {}, synth |-@p {}, ([] 0 ) | <>, [33;1m\A_0. [0m, type { A_0 -> [] }. , <> @ p | p [A] @ ([] 0 ), ([] 2 ) | <>, [33;1m\y_1. [0m, synth { y_1 -> {y_1*} ?[("check",[1])("S",[0])] }. , <> @ p | q [y] @ ([] 2 ), ([] 4 ) | <>, [33;1m\y_2. [0m, synth { y_2 -> {y_2*} ?[("check",[1,3])("S",[0])] }. , <> @ p | q [y] @ ([] 4 ), <> @ p | q [] @ ([[34;1m!q. [] ['List A_0][0m] 4 [e = ['ListElim ['List A] y ['Emb y] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]], tm = ['Emb ['ListElim ['List A] y ['Emb y] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]]], ty = {y*} ?[("check",[1,3])("T",[1])]] q?S. S ~ ty), ([] 4 ) | <>, <> | ([] 4 [c x xs ih = ['Cons ['Emb x] ['Emb ih]], e = y, n = ['Emb y], tm = ['ListElim ['List A] y ['Emb y] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]], ty = ['List A]] check@q. q!ty. q!n. | 'Type?X. (synth@u. u!e. u?V. V ~ ['List X] | \y. synth {y -> {y*} X}. \ys. synth {ys -> ['List {y*, ys*} X]}. \jh. synth {jh -> {y*, ys*, jh*} ty}. check@v. v!{y*, ys*, jh*} ty. v!{y*, ys*, jh*, x=y, xs=ys, ih=jh} c.)), ([([] 4 ) @ p | q [] @ <>] 4 ) @ p | r [] @ <>]
err >   4: [30;42m[?[("check",[1])("S",[0])] := ['List A_0], ?[("check",[1])("T",[1])] := ['Arr ['List A_0] ['List A_0]], ?[("check",[1,3])("S",[0])] := ['List A_0], ?[("check",[1,3])("T",[1])] := ['List A_0]][0m
err >   
err >   
err >
err > [4mexec[0m 
err >   [<type |-@p {}, check |-@p {}, synth |-@p {}, ([] 0 ) | <>, [33;1m\A_0. [0m, type { A_0 -> [] }. , <> @ p | p [A] @ ([] 0 ), ([] 2 ) | <>, [33;1m\y_1. [0m, synth { y_1 -> {y_1*} ?[("check",[1])("S",[0])] }. , <> @ p | q [y] @ ([] 2 ), ([] 4 ) | <>, [33;1m\y_2. [0m, synth { y_2 -> {y_2*} ?[("check",[1,3])("S",[0])] }. , <> @ p | q [y] @ ([] 4 ), <> @ p | q [] @ ([[34;1m!q. [] ['List A_0][0m] 4 [e = ['ListElim ['List A] y ['Emb y] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]], tm = ['Emb ['ListElim ['List A] y ['Emb y] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]]], ty = {y*} ?[("check",[1,3])("T",[1])]] q?S. S ~ ty), ([] 4 ) | <>, ([([([] 4 ) @ p | q [] @ <>] 4 ) @ p | r [] @ <>] 4 ) | <>]
err >   4: [30;42m[?[("check",[1])("S",[0])] := ['List A_0], ?[("check",[1])("T",[1])] := ['Arr ['List A_0] ['List A_0]], ?[("check",[1,3])("S",[0])] := ['List A_0], ?[("check",[1,3])("T",[1])] := ['List A_0]][0m
err >   [c x xs ih = ['Cons ['Emb x] ['Emb ih]], e = y, n = ['Emb y], tm = ['ListElim ['List A] y ['Emb y] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]], ty = ['List A]]
err >   check@q. q!ty. q!n. | 'Type?X. (synth@u. u!e. u?V. V ~ ['List X] | \y. synth {y -> {y*} X}. \ys. synth {ys -> ['List {y*, ys*} X]}. \jh. synth {jh -> {y*, ys*, jh*} ty}. check@v. v!{y*, ys*, jh*} ty. v!{y*, ys*, jh*, x=y, xs=ys, ih=jh} c.)
err >
err > [4mexec[0m 
err >   [<type |-@p {}, check |-@p {}, synth |-@p {}, ([] 0 ) | <>, [33;1m\A_0. [0m, type { A_0 -> [] }. , <> @ p | p [A] @ ([] 0 ), ([] 2 ) | <>, [33;1m\y_1. [0m, synth { y_1 -> {y_1*} ?[("check",[1])("S",[0])] }. , <> @ p | q [y] @ ([] 2 ), ([] 4 ) | <>, [33;1m\y_2. [0m, synth { y_2 -> {y_2*} ?[("check",[1,3])("S",[0])] }. , <> @ p | q [y] @ ([] 4 ), <> @ p | q [] @ ([[34;1m!q. [] ['List A_0][0m] 4 [e = ['ListElim ['List A] y ['Emb y] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]], tm = ['Emb ['ListElim ['List A] y ['Emb y] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]]], ty = {y*} ?[("check",[1,3])("T",[1])]] q?S. S ~ ty), ([] 4 ) | <>, ([([([] 4 ) @ p | q [] @ <>] 4 ) @ p | r [] @ <>] 4 ) | <>, <> | ([] 4 [c x xs ih = ['Cons ['Emb x] ['Emb ih]], e = y, n = ['Emb y], tm = ['ListElim ['List A] y ['Emb y] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]], ty = ['List A]] 'Type?X. (synth@u. u!e. u?V. V ~ ['List X] | \y. synth {y -> {y*} X}. \ys. synth {ys -> ['List {y*, ys*} X]}. \jh. synth {jh -> {y*, ys*, jh*} ty}. check@v. v!{y*, ys*, jh*} ty. v!{y*, ys*, jh*, x=y, xs=ys, ih=jh} c.))]
err >   4: [30;42m[?[("check",[1])("S",[0])] := ['List A_0], ?[("check",[1])("T",[1])] := ['Arr ['List A_0] ['List A_0]], ?[("check",[1,3])("S",[0])] := ['List A_0], ?[("check",[1,3])("T",[1])] := ['List A_0]][0m
err >   [c x xs ih = ['Cons ['Emb x] ['Emb ih]], e = y, n = ['Emb y], tm = ['ListElim ['List A] y ['Emb y] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]], ty = ['List A]]
err >   check@q. q!ty. q!n.
err >
err > [4mexec[0m 
err >   [<type |-@p {}, check |-@p {}, synth |-@p {}, ([] 0 ) | <>, [33;1m\A_0. [0m, type { A_0 -> [] }. , <> @ p | p [A] @ ([] 0 ), ([] 2 ) | <>, [33;1m\y_1. [0m, synth { y_1 -> {y_1*} ?[("check",[1])("S",[0])] }. , <> @ p | q [y] @ ([] 2 ), ([] 4 ) | <>, [33;1m\y_2. [0m, synth { y_2 -> {y_2*} ?[("check",[1,3])("S",[0])] }. , <> @ p | q [y] @ ([] 4 ), <> @ p | q [] @ ([[34;1m!q. [] ['List A_0][0m] 4 [e = ['ListElim ['List A] y ['Emb y] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]], tm = ['Emb ['ListElim ['List A] y ['Emb y] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]]], ty = {y*} ?[("check",[1,3])("T",[1])]] q?S. S ~ ty), ([] 4 ) | <>, ([([([] 4 ) @ p | q [] @ <>] 4 ) @ p | r [] @ <>] 4 ) | <>, <> | ([] 4 [c x xs ih = ['Cons ['Emb x] ['Emb ih]], e = y, n = ['Emb y], tm = ['ListElim ['List A] y ['Emb y] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]], ty = ['List A]] 'Type?X. (synth@u. u!e. u?V. V ~ ['List X] | \y. synth {y -> {y*} X}. \ys. synth {ys -> ['List {y*, ys*} X]}. \jh. synth {jh -> {y*, ys*, jh*} ty}. check@v. v!{y*, ys*, jh*} ty. v!{y*, ys*, jh*, x=y, xs=ys, ih=jh} c.)), ([] 4 [] p?ty. p?tm. [4mcase[0m tm {['Lam \x. body] -> 'Type?S. 'Type?T. (ty ~ ['Arr S T] | \y. synth {y -> {y*} S}. check@q. q!{y*} T. q!{y*, x=y} body.) ; 'Nil -> [4mcase[0m ty {'One ->  ; ['List S] ->  ; otherwise -> #"wrong type for Nil"} ; ['Cons s t] -> [4mcase[0m ty {['Pair S T] -> (check@q. q!S. q!s. | check@r. r!T. r!t.) ; ['List S] -> (check@q. q!S. q!s. | check@r. r!['List S]. r!t.) ; otherwise -> #"wrong type for Cons"} ; ['Emb e] -> synth@q. q!e. q?S. S ~ ty}) @ p | q [] @ <>]
err >   4: [30;42m[?[("check",[1])("S",[0])] := ['List A_0], ?[("check",[1])("T",[1])] := ['Arr ['List A_0] ['List A_0]], ?[("check",[1,3])("S",[0])] := ['List A_0], ?[("check",[1,3])("T",[1])] := ['List A_0]][0m
err >   [c x xs ih = ['Cons ['Emb x] ['Emb ih]], e = y, n = ['Emb y], tm = ['ListElim ['List A] y ['Emb y] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]], ty = ['List A]]
err >   q!ty. q!n.
err >
err > [4mexec[0m 
err >   [<type |-@p {}, check |-@p {}, synth |-@p {}, ([] 0 ) | <>, [33;1m\A_0. [0m, type { A_0 -> [] }. , <> @ p | p [A] @ ([] 0 ), ([] 2 ) | <>, [33;1m\y_1. [0m, synth { y_1 -> {y_1*} ?[("check",[1])("S",[0])] }. , <> @ p | q [y] @ ([] 2 ), ([] 4 ) | <>, [33;1m\y_2. [0m, synth { y_2 -> {y_2*} ?[("check",[1,3])("S",[0])] }. , <> @ p | q [y] @ ([] 4 ), <> @ p | q [] @ ([[34;1m!q. [] ['List A_0][0m] 4 [e = ['ListElim ['List A] y ['Emb y] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]], tm = ['Emb ['ListElim ['List A] y ['Emb y] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]]], ty = {y*} ?[("check",[1,3])("T",[1])]] q?S. S ~ ty), ([] 4 ) | <>, ([([([] 4 ) @ p | q [] @ <>] 4 ) @ p | r [] @ <>] 4 ) | <>, <> | ([] 4 [c x xs ih = ['Cons ['Emb x] ['Emb ih]], e = y, n = ['Emb y], tm = ['ListElim ['List A] y ['Emb y] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]], ty = ['List A]] 'Type?X. (synth@u. u!e. u?V. V ~ ['List X] | \y. synth {y -> {y*} X}. \ys. synth {ys -> ['List {y*, ys*} X]}. \jh. synth {jh -> {y*, ys*, jh*} ty}. check@v. v!{y*, ys*, jh*} ty. v!{y*, ys*, jh*, x=y, xs=ys, ih=jh} c.)), <> @ p | q [] @ ([] 4 [c x xs ih = ['Cons ['Emb x] ['Emb ih]], e = y, n = ['Emb y], tm = ['ListElim ['List A] y ['Emb y] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]], ty = ['List A]] q!n.), [34;1m!p. [] ['List A_0][0m]
err >   4: [30;42m[?[("check",[1])("S",[0])] := ['List A_0], ?[("check",[1])("T",[1])] := ['Arr ['List A_0] ['List A_0]], ?[("check",[1,3])("S",[0])] := ['List A_0], ?[("check",[1,3])("T",[1])] := ['List A_0]][0m
err >   []
err >   p?ty. p?tm. [4mcase[0m tm {['Lam \x. body] -> 'Type?S. 'Type?T. (ty ~ ['Arr S T] | \y. synth {y -> {y*} S}. check@q. q!{y*} T. q!{y*, x=y} body.) ; 'Nil -> [4mcase[0m ty {'One ->  ; ['List S] ->  ; otherwise -> #"wrong type for Nil"} ; ['Cons s t] -> [4mcase[0m ty {['Pair S T] -> (check@q. q!S. q!s. | check@r. r!T. r!t.) ; ['List S] -> (check@q. q!S. q!s. | check@r. r!['List S]. r!t.) ; otherwise -> #"wrong type for Cons"} ; ['Emb e] -> synth@q. q!e. q?S. S ~ ty}
err >
err > [4mexec[0m 
err >   [<type |-@p {}, check |-@p {}, synth |-@p {}, ([] 0 ) | <>, [33;1m\A_0. [0m, type { A_0 -> [] }. , <> @ p | p [A] @ ([] 0 ), ([] 2 ) | <>, [33;1m\y_1. [0m, synth { y_1 -> {y_1*} ?[("check",[1])("S",[0])] }. , <> @ p | q [y] @ ([] 2 ), ([] 4 ) | <>, [33;1m\y_2. [0m, synth { y_2 -> {y_2*} ?[("check",[1,3])("S",[0])] }. , <> @ p | q [y] @ ([] 4 ), <> @ p | q [] @ ([[34;1m!q. [] ['List A_0][0m] 4 [e = ['ListElim ['List A] y ['Emb y] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]], tm = ['Emb ['ListElim ['List A] y ['Emb y] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]]], ty = {y*} ?[("check",[1,3])("T",[1])]] q?S. S ~ ty), ([] 4 ) | <>, ([([([] 4 ) @ p | q [] @ <>] 4 ) @ p | r [] @ <>] 4 ) | <>, <> | ([] 4 [c x xs ih = ['Cons ['Emb x] ['Emb ih]], e = y, n = ['Emb y], tm = ['ListElim ['List A] y ['Emb y] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]], ty = ['List A]] 'Type?X. (synth@u. u!e. u?V. V ~ ['List X] | \y. synth {y -> {y*} X}. \ys. synth {ys -> ['List {y*, ys*} X]}. \jh. synth {jh -> {y*, ys*, jh*} ty}. check@v. v!{y*, ys*, jh*} ty. v!{y*, ys*, jh*, x=y, xs=ys, ih=jh} c.)), <> @ p | q [] @ ([] 4 [c x xs ih = ['Cons ['Emb x] ['Emb ih]], e = y, n = ['Emb y], tm = ['ListElim ['List A] y ['Emb y] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]], ty = ['List A]] q!n.)]
err >   4: [30;42m[?[("check",[1])("S",[0])] := ['List A_0], ?[("check",[1])("T",[1])] := ['Arr ['List A_0] ['List A_0]], ?[("check",[1,3])("S",[0])] := ['List A_0], ?[("check",[1,3])("T",[1])] := ['List A_0]][0m
err >   [ty = ['List A]]
err >   p?tm. [4mcase[0m tm {['Lam \x. body] -> 'Type?S. 'Type?T. (ty ~ ['Arr S T] | \y. synth {y -> {y*} S}. check@q. q!{y*} T. q!{y*, x=y} body.) ; 'Nil -> [4mcase[0m ty {'One ->  ; ['List S] ->  ; otherwise -> #"wrong type for Nil"} ; ['Cons s t] -> [4mcase[0m ty {['Pair S T] -> (check@q. q!S. q!s. | check@r. r!T. r!t.) ; ['List S] -> (check@q. q!S. q!s. | check@r. r!['List S]. r!t.) ; otherwise -> #"wrong type for Cons"} ; ['Emb e] -> synth@q. q!e. q?S. S ~ ty}
err >
err > [4mexec[0m 
err >   [<type |-@p {}, check |-@p {}, synth |-@p {}, ([] 0 ) | <>, [33;1m\A_0. [0m, type { A_0 -> [] }. , <> @ p | p [A] @ ([] 0 ), ([] 2 ) | <>, [33;1m\y_1. [0m, synth { y_1 -> {y_1*} ?[("check",[1])("S",[0])] }. , <> @ p | q [y] @ ([] 2 ), ([] 4 ) | <>, [33;1m\y_2. [0m, synth { y_2 -> {y_2*} ?[("check",[1,3])("S",[0])] }. , <> @ p | q [y] @ ([] 4 ), <> @ p | q [] @ ([[34;1m!q. [] ['List A_0][0m] 4 [e = ['ListElim ['List A] y ['Emb y] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]], tm = ['Emb ['ListElim ['List A] y ['Emb y] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]]], ty = {y*} ?[("check",[1,3])("T",[1])]] q?S. S ~ ty), ([] 4 ) | <>, ([([([] 4 ) @ p | q [] @ <>] 4 ) @ p | r [] @ <>] 4 ) | <>, <> | ([] 4 [c x xs ih = ['Cons ['Emb x] ['Emb ih]], e = y, n = ['Emb y], tm = ['ListElim ['List A] y ['Emb y] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]], ty = ['List A]] 'Type?X. (synth@u. u!e. u?V. V ~ ['List X] | \y. synth {y -> {y*} X}. \ys. synth {ys -> ['List {y*, ys*} X]}. \jh. synth {jh -> {y*, ys*, jh*} ty}. check@v. v!{y*, ys*, jh*} ty. v!{y*, ys*, jh*, x=y, xs=ys, ih=jh} c.)), ([] 4 [ty = ['List A]] p?tm. [4mcase[0m tm {['Lam \x. body] -> 'Type?S. 'Type?T. (ty ~ ['Arr S T] | \y. synth {y -> {y*} S}. check@q. q!{y*} T. q!{y*, x=y} body.) ; 'Nil -> [4mcase[0m ty {'One ->  ; ['List S] ->  ; otherwise -> #"wrong type for Nil"} ; ['Cons s t] -> [4mcase[0m ty {['Pair S T] -> (check@q. q!S. q!s. | check@r. r!T. r!t.) ; ['List S] -> (check@q. q!S. q!s. | check@r. r!['List S]. r!t.) ; otherwise -> #"wrong type for Cons"} ; ['Emb e] -> synth@q. q!e. q?S. S ~ ty}) @ p | q [] @ <>]
err >   4: [30;42m[?[("check",[1])("S",[0])] := ['List A_0], ?[("check",[1])("T",[1])] := ['Arr ['List A_0] ['List A_0]], ?[("check",[1,3])("S",[0])] := ['List A_0], ?[("check",[1,3])("T",[1])] := ['List A_0]][0m
err >   [c x xs ih = ['Cons ['Emb x] ['Emb ih]], e = y, n = ['Emb y], tm = ['ListElim ['List A] y ['Emb y] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]], ty = ['List A]]
err >   q!n.
err >
err > [4mexec[0m 
err >   [<type |-@p {}, check |-@p {}, synth |-@p {}, ([] 0 ) | <>, [33;1m\A_0. [0m, type { A_0 -> [] }. , <> @ p | p [A] @ ([] 0 ), ([] 2 ) | <>, [33;1m\y_1. [0m, synth { y_1 -> {y_1*} ?[("check",[1])("S",[0])] }. , <> @ p | q [y] @ ([] 2 ), ([] 4 ) | <>, [33;1m\y_2. [0m, synth { y_2 -> {y_2*} ?[("check",[1,3])("S",[0])] }. , <> @ p | q [y] @ ([] 4 ), <> @ p | q [] @ ([[34;1m!q. [] ['List A_0][0m] 4 [e = ['ListElim ['List A] y ['Emb y] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]], tm = ['Emb ['ListElim ['List A] y ['Emb y] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]]], ty = {y*} ?[("check",[1,3])("T",[1])]] q?S. S ~ ty), ([] 4 ) | <>, ([([([] 4 ) @ p | q [] @ <>] 4 ) @ p | r [] @ <>] 4 ) | <>, <> | ([] 4 [c x xs ih = ['Cons ['Emb x] ['Emb ih]], e = y, n = ['Emb y], tm = ['ListElim ['List A] y ['Emb y] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]], ty = ['List A]] 'Type?X. (synth@u. u!e. u?V. V ~ ['List X] | \y. synth {y -> {y*} X}. \ys. synth {ys -> ['List {y*, ys*} X]}. \jh. synth {jh -> {y*, ys*, jh*} ty}. check@v. v!{y*, ys*, jh*} ty. v!{y*, ys*, jh*, x=y, xs=ys, ih=jh} c.)), <> @ p | q [] @ ([] 4 ), [34;1m!p. [] ['Emb y_2][0m]
err >   4: [30;42m[?[("check",[1])("S",[0])] := ['List A_0], ?[("check",[1])("T",[1])] := ['Arr ['List A_0] ['List A_0]], ?[("check",[1,3])("S",[0])] := ['List A_0], ?[("check",[1,3])("T",[1])] := ['List A_0]][0m
err >   [ty = ['List A]]
err >   p?tm. [4mcase[0m tm {['Lam \x. body] -> 'Type?S. 'Type?T. (ty ~ ['Arr S T] | \y. synth {y -> {y*} S}. check@q. q!{y*} T. q!{y*, x=y} body.) ; 'Nil -> [4mcase[0m ty {'One ->  ; ['List S] ->  ; otherwise -> #"wrong type for Nil"} ; ['Cons s t] -> [4mcase[0m ty {['Pair S T] -> (check@q. q!S. q!s. | check@r. r!T. r!t.) ; ['List S] -> (check@q. q!S. q!s. | check@r. r!['List S]. r!t.) ; otherwise -> #"wrong type for Cons"} ; ['Emb e] -> synth@q. q!e. q?S. S ~ ty}
err >
err > [4mexec[0m 
err >   [<type |-@p {}, check |-@p {}, synth |-@p {}, ([] 0 ) | <>, [33;1m\A_0. [0m, type { A_0 -> [] }. , <> @ p | p [A] @ ([] 0 ), ([] 2 ) | <>, [33;1m\y_1. [0m, synth { y_1 -> {y_1*} ?[("check",[1])("S",[0])] }. , <> @ p | q [y] @ ([] 2 ), ([] 4 ) | <>, [33;1m\y_2. [0m, synth { y_2 -> {y_2*} ?[("check",[1,3])("S",[0])] }. , <> @ p | q [y] @ ([] 4 ), <> @ p | q [] @ ([[34;1m!q. [] ['List A_0][0m] 4 [e = ['ListElim ['List A] y ['Emb y] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]], tm = ['Emb ['ListElim ['List A] y ['Emb y] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]]], ty = {y*} ?[("check",[1,3])("T",[1])]] q?S. S ~ ty), ([] 4 ) | <>, ([([([] 4 ) @ p | q [] @ <>] 4 ) @ p | r [] @ <>] 4 ) | <>, <> | ([] 4 [c x xs ih = ['Cons ['Emb x] ['Emb ih]], e = y, n = ['Emb y], tm = ['ListElim ['List A] y ['Emb y] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]], ty = ['List A]] 'Type?X. (synth@u. u!e. u?V. V ~ ['List X] | \y. synth {y -> {y*} X}. \ys. synth {ys -> ['List {y*, ys*} X]}. \jh. synth {jh -> {y*, ys*, jh*} ty}. check@v. v!{y*, ys*, jh*} ty. v!{y*, ys*, jh*, x=y, xs=ys, ih=jh} c.)), <> @ p | q [] @ ([] 4 )]
err >   4: [30;42m[?[("check",[1])("S",[0])] := ['List A_0], ?[("check",[1])("T",[1])] := ['Arr ['List A_0] ['List A_0]], ?[("check",[1,3])("S",[0])] := ['List A_0], ?[("check",[1,3])("T",[1])] := ['List A_0]][0m
err >   [tm = ['Emb y], ty = ['List A]]
err >   [4mcase[0m tm {['Lam \x. body] -> 'Type?S. 'Type?T. (ty ~ ['Arr S T] | \y. synth {y -> {y*} S}. check@q. q!{y*} T. q!{y*, x=y} body.) ; 'Nil -> [4mcase[0m ty {'One ->  ; ['List S] ->  ; otherwise -> #"wrong type for Nil"} ; ['Cons s t] -> [4mcase[0m ty {['Pair S T] -> (check@q. q!S. q!s. | check@r. r!T. r!t.) ; ['List S] -> (check@q. q!S. q!s. | check@r. r!['List S]. r!t.) ; otherwise -> #"wrong type for Cons"} ; ['Emb e] -> synth@q. q!e. q?S. S ~ ty}
err >
err > [4mexec[0m 
err >   [<type |-@p {}, check |-@p {}, synth |-@p {}, ([] 0 ) | <>, [33;1m\A_0. [0m, type { A_0 -> [] }. , <> @ p | p [A] @ ([] 0 ), ([] 2 ) | <>, [33;1m\y_1. [0m, synth { y_1 -> {y_1*} ?[("check",[1])("S",[0])] }. , <> @ p | q [y] @ ([] 2 ), ([] 4 ) | <>, [33;1m\y_2. [0m, synth { y_2 -> {y_2*} ?[("check",[1,3])("S",[0])] }. , <> @ p | q [y] @ ([] 4 ), <> @ p | q [] @ ([[34;1m!q. [] ['List A_0][0m] 4 [e = ['ListElim ['List A] y ['Emb y] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]], tm = ['Emb ['ListElim ['List A] y ['Emb y] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]]], ty = {y*} ?[("check",[1,3])("T",[1])]] q?S. S ~ ty), ([] 4 ) | <>, ([([([] 4 ) @ p | q [] @ <>] 4 ) @ p | r [] @ <>] 4 ) | <>, <> | ([] 4 [c x xs ih = ['Cons ['Emb x] ['Emb ih]], e = y, n = ['Emb y], tm = ['ListElim ['List A] y ['Emb y] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]], ty = ['List A]] 'Type?X. (synth@u. u!e. u?V. V ~ ['List X] | \y. synth {y -> {y*} X}. \ys. synth {ys -> ['List {y*, ys*} X]}. \jh. synth {jh -> {y*, ys*, jh*} ty}. check@v. v!{y*, ys*, jh*} ty. v!{y*, ys*, jh*, x=y, xs=ys, ih=jh} c.)), <> @ p | q [] @ ([] 4 )]
err >   4: [30;42m[?[("check",[1])("S",[0])] := ['List A_0], ?[("check",[1])("T",[1])] := ['Arr ['List A_0] ['List A_0]], ?[("check",[1,3])("S",[0])] := ['List A_0], ?[("check",[1,3])("T",[1])] := ['List A_0]][0m
err >   [e = y, tm = ['Emb y], ty = ['List A]]
err >   synth@q. q!e. q?S. S ~ ty
err >
err > [4mexec[0m 
err >   [<type |-@p {}, check |-@p {}, synth |-@p {}, ([] 0 ) | <>, [33;1m\A_0. [0m, type { A_0 -> [] }. , <> @ p | p [A] @ ([] 0 ), ([] 2 ) | <>, [33;1m\y_1. [0m, synth { y_1 -> {y_1*} ?[("check",[1])("S",[0])] }. , <> @ p | q [y] @ ([] 2 ), ([] 4 ) | <>, [33;1m\y_2. [0m, synth { y_2 -> {y_2*} ?[("check",[1,3])("S",[0])] }. , <> @ p | q [y] @ ([] 4 ), <> @ p | q [] @ ([[34;1m!q. [] ['List A_0][0m] 4 [e = ['ListElim ['List A] y ['Emb y] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]], tm = ['Emb ['ListElim ['List A] y ['Emb y] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]]], ty = {y*} ?[("check",[1,3])("T",[1])]] q?S. S ~ ty), ([] 4 ) | <>, ([([([] 4 ) @ p | q [] @ <>] 4 ) @ p | r [] @ <>] 4 ) | <>, <> | ([] 4 [c x xs ih = ['Cons ['Emb x] ['Emb ih]], e = y, n = ['Emb y], tm = ['ListElim ['List A] y ['Emb y] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]], ty = ['List A]] 'Type?X. (synth@u. u!e. u?V. V ~ ['List X] | \y. synth {y -> {y*} X}. \ys. synth {ys -> ['List {y*, ys*} X]}. \jh. synth {jh -> {y*, ys*, jh*} ty}. check@v. v!{y*, ys*, jh*} ty. v!{y*, ys*, jh*, x=y, xs=ys, ih=jh} c.)), <> @ p | q [] @ ([] 4 ), ([] 4 [] p?tm. [4mlookup[0m tm {S -> p!S.} [4melse[0m p!S.) @ p | q [] @ <>]
err >   4: [30;42m[?[("check",[1])("S",[0])] := ['List A_0], ?[("check",[1])("T",[1])] := ['Arr ['List A_0] ['List A_0]], ?[("check",[1,3])("S",[0])] := ['List A_0], ?[("check",[1,3])("T",[1])] := ['List A_0]][0m
err >   [e = y, tm = ['Emb y], ty = ['List A]]
err >   q!e. q?S. S ~ ty
err >
err > [4mexec[0m 
err >   [<type |-@p {}, check |-@p {}, synth |-@p {}, ([] 0 ) | <>, [33;1m\A_0. [0m, type { A_0 -> [] }. , <> @ p | p [A] @ ([] 0 ), ([] 2 ) | <>, [33;1m\y_1. [0m, synth { y_1 -> {y_1*} ?[("check",[1])("S",[0])] }. , <> @ p | q [y] @ ([] 2 ), ([] 4 ) | <>, [33;1m\y_2. [0m, synth { y_2 -> {y_2*} ?[("check",[1,3])("S",[0])] }. , <> @ p | q [y] @ ([] 4 ), <> @ p | q [] @ ([[34;1m!q. [] ['List A_0][0m] 4 [e = ['ListElim ['List A] y ['Emb y] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]], tm = ['Emb ['ListElim ['List A] y ['Emb y] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]]], ty = {y*} ?[("check",[1,3])("T",[1])]] q?S. S ~ ty), ([] 4 ) | <>, ([([([] 4 ) @ p | q [] @ <>] 4 ) @ p | r [] @ <>] 4 ) | <>, <> | ([] 4 [c x xs ih = ['Cons ['Emb x] ['Emb ih]], e = y, n = ['Emb y], tm = ['ListElim ['List A] y ['Emb y] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]], ty = ['List A]] 'Type?X. (synth@u. u!e. u?V. V ~ ['List X] | \y. synth {y -> {y*} X}. \ys. synth {ys -> ['List {y*, ys*} X]}. \jh. synth {jh -> {y*, ys*, jh*} ty}. check@v. v!{y*, ys*, jh*} ty. v!{y*, ys*, jh*, x=y, xs=ys, ih=jh} c.)), <> @ p | q [] @ ([] 4 ), <> @ p | q [] @ ([] 4 [e = y, tm = ['Emb y], ty = ['List A]] q?S. S ~ ty), [34;1m!p. [] y_2[0m]
err >   4: [30;42m[?[("check",[1])("S",[0])] := ['List A_0], ?[("check",[1])("T",[1])] := ['Arr ['List A_0] ['List A_0]], ?[("check",[1,3])("S",[0])] := ['List A_0], ?[("check",[1,3])("T",[1])] := ['List A_0]][0m
err >   []
err >   p?tm. [4mlookup[0m tm {S -> p!S.} [4melse[0m p!S.
err >
err > [4mexec[0m 
err >   [<type |-@p {}, check |-@p {}, synth |-@p {}, ([] 0 ) | <>, [33;1m\A_0. [0m, type { A_0 -> [] }. , <> @ p | p [A] @ ([] 0 ), ([] 2 ) | <>, [33;1m\y_1. [0m, synth { y_1 -> {y_1*} ?[("check",[1])("S",[0])] }. , <> @ p | q [y] @ ([] 2 ), ([] 4 ) | <>, [33;1m\y_2. [0m, synth { y_2 -> {y_2*} ?[("check",[1,3])("S",[0])] }. , <> @ p | q [y] @ ([] 4 ), <> @ p | q [] @ ([[34;1m!q. [] ['List A_0][0m] 4 [e = ['ListElim ['List A] y ['Emb y] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]], tm = ['Emb ['ListElim ['List A] y ['Emb y] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]]], ty = {y*} ?[("check",[1,3])("T",[1])]] q?S. S ~ ty), ([] 4 ) | <>, ([([([] 4 ) @ p | q [] @ <>] 4 ) @ p | r [] @ <>] 4 ) | <>, <> | ([] 4 [c x xs ih = ['Cons ['Emb x] ['Emb ih]], e = y, n = ['Emb y], tm = ['ListElim ['List A] y ['Emb y] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]], ty = ['List A]] 'Type?X. (synth@u. u!e. u?V. V ~ ['List X] | \y. synth {y -> {y*} X}. \ys. synth {ys -> ['List {y*, ys*} X]}. \jh. synth {jh -> {y*, ys*, jh*} ty}. check@v. v!{y*, ys*, jh*} ty. v!{y*, ys*, jh*, x=y, xs=ys, ih=jh} c.)), <> @ p | q [] @ ([] 4 ), <> @ p | q [] @ ([] 4 [e = y, tm = ['Emb y], ty = ['List A]] q?S. S ~ ty)]
err >   4: [30;42m[?[("check",[1])("S",[0])] := ['List A_0], ?[("check",[1])("T",[1])] := ['Arr ['List A_0] ['List A_0]], ?[("check",[1,3])("S",[0])] := ['List A_0], ?[("check",[1,3])("T",[1])] := ['List A_0]][0m
err >   [tm = y]
err >   [4mlookup[0m tm {S -> p!S.} [4melse[0m p!S.
err >
err > [4mexec[0m 
err >   [<type |-@p {}, check |-@p {}, synth |-@p {}, ([] 0 ) | <>, [33;1m\A_0. [0m, type { A_0 -> [] }. , <> @ p | p [A] @ ([] 0 ), ([] 2 ) | <>, [33;1m\y_1. [0m, synth { y_1 -> {y_1*} ?[("check",[1])("S",[0])] }. , <> @ p | q [y] @ ([] 2 ), ([] 4 ) | <>, [33;1m\y_2. [0m, synth { y_2 -> {y_2*} ?[("check",[1,3])("S",[0])] }. , <> @ p | q [y] @ ([] 4 ), <> @ p | q [] @ ([[34;1m!q. [] ['List A_0][0m] 4 [e = ['ListElim ['List A] y ['Emb y] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]], tm = ['Emb ['ListElim ['List A] y ['Emb y] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]]], ty = {y*} ?[("check",[1,3])("T",[1])]] q?S. S ~ ty), ([] 4 ) | <>, ([([([] 4 ) @ p | q [] @ <>] 4 ) @ p | r [] @ <>] 4 ) | <>, <> | ([] 4 [c x xs ih = ['Cons ['Emb x] ['Emb ih]], e = y, n = ['Emb y], tm = ['ListElim ['List A] y ['Emb y] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]], ty = ['List A]] 'Type?X. (synth@u. u!e. u?V. V ~ ['List X] | \y. synth {y -> {y*} X}. \ys. synth {ys -> ['List {y*, ys*} X]}. \jh. synth {jh -> {y*, ys*, jh*} ty}. check@v. v!{y*, ys*, jh*} ty. v!{y*, ys*, jh*, x=y, xs=ys, ih=jh} c.)), <> @ p | q [] @ ([] 4 ), <> @ p | q [] @ ([] 4 [e = y, tm = ['Emb y], ty = ['List A]] q?S. S ~ ty)]
err >   4: [30;42m[?[("check",[1])("S",[0])] := ['List A_0], ?[("check",[1])("T",[1])] := ['Arr ['List A_0] ['List A_0]], ?[("check",[1,3])("S",[0])] := ['List A_0], ?[("check",[1,3])("T",[1])] := ['List A_0]][0m
err >   [S = {y*} ?[("check",[1,3])("S",[0])], tm = y]
err >   p!S.
err >
err > [4mexec[0m 
err >   [<type |-@p {}, check |-@p {}, synth |-@p {}, ([] 0 ) | <>, [33;1m\A_0. [0m, type { A_0 -> [] }. , <> @ p | p [A] @ ([] 0 ), ([] 2 ) | <>, [33;1m\y_1. [0m, synth { y_1 -> {y_1*} ?[("check",[1])("S",[0])] }. , <> @ p | q [y] @ ([] 2 ), ([] 4 ) | <>, [33;1m\y_2. [0m, synth { y_2 -> {y_2*} ?[("check",[1,3])("S",[0])] }. , <> @ p | q [y] @ ([] 4 ), <> @ p | q [] @ ([[34;1m!q. [] ['List A_0][0m] 4 [e = ['ListElim ['List A] y ['Emb y] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]], tm = ['Emb ['ListElim ['List A] y ['Emb y] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]]], ty = {y*} ?[("check",[1,3])("T",[1])]] q?S. S ~ ty), ([] 4 ) | <>, ([([([] 4 ) @ p | q [] @ <>] 4 ) @ p | r [] @ <>] 4 ) | <>, <> | ([] 4 [c x xs ih = ['Cons ['Emb x] ['Emb ih]], e = y, n = ['Emb y], tm = ['ListElim ['List A] y ['Emb y] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]], ty = ['List A]] 'Type?X. (synth@u. u!e. u?V. V ~ ['List X] | \y. synth {y -> {y*} X}. \ys. synth {ys -> ['List {y*, ys*} X]}. \jh. synth {jh -> {y*, ys*, jh*} ty}. check@v. v!{y*, ys*, jh*} ty. v!{y*, ys*, jh*, x=y, xs=ys, ih=jh} c.)), <> @ p | q [] @ ([] 4 ), <> @ p | q [] @ ([[34;1m!q. [] {y_2*} ?[("check",[1,3])("S",[0])][0m] 4 [e = y, tm = ['Emb y], ty = ['List A]] q?S. S ~ ty)]
err >   4: [30;42m[?[("check",[1])("S",[0])] := ['List A_0], ?[("check",[1])("T",[1])] := ['Arr ['List A_0] ['List A_0]], ?[("check",[1,3])("S",[0])] := ['List A_0], ?[("check",[1,3])("T",[1])] := ['List A_0]][0m
err >   
err >   
err >
err > [4mexec[0m 
err >   [<type |-@p {}, check |-@p {}, synth |-@p {}, ([] 0 ) | <>, [33;1m\A_0. [0m, type { A_0 -> [] }. , <> @ p | p [A] @ ([] 0 ), ([] 2 ) | <>, [33;1m\y_1. [0m, synth { y_1 -> {y_1*} ?[("check",[1])("S",[0])] }. , <> @ p | q [y] @ ([] 2 ), ([] 4 ) | <>, [33;1m\y_2. [0m, synth { y_2 -> {y_2*} ?[("check",[1,3])("S",[0])] }. , <> @ p | q [y] @ ([] 4 ), <> @ p | q [] @ ([[34;1m!q. [] ['List A_0][0m] 4 [e = ['ListElim ['List A] y ['Emb y] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]], tm = ['Emb ['ListElim ['List A] y ['Emb y] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]]], ty = {y*} ?[("check",[1,3])("T",[1])]] q?S. S ~ ty), ([] 4 ) | <>, ([([([] 4 ) @ p | q [] @ <>] 4 ) @ p | r [] @ <>] 4 ) | <>, <> | ([] 4 [c x xs ih = ['Cons ['Emb x] ['Emb ih]], e = y, n = ['Emb y], tm = ['ListElim ['List A] y ['Emb y] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]], ty = ['List A]] 'Type?X. (synth@u. u!e. u?V. V ~ ['List X] | \y. synth {y -> {y*} X}. \ys. synth {ys -> ['List {y*, ys*} X]}. \jh. synth {jh -> {y*, ys*, jh*} ty}. check@v. v!{y*, ys*, jh*} ty. v!{y*, ys*, jh*, x=y, xs=ys, ih=jh} c.)), <> @ p | q [] @ ([] 4 ), ([] 4 ) @ p | q [] @ <>, [34;1m!q. [] {y_2*} ?[("check",[1,3])("S",[0])][0m]
err >   4: [30;42m[?[("check",[1])("S",[0])] := ['List A_0], ?[("check",[1])("T",[1])] := ['Arr ['List A_0] ['List A_0]], ?[("check",[1,3])("S",[0])] := ['List A_0], ?[("check",[1,3])("T",[1])] := ['List A_0]][0m
err >   [e = y, tm = ['Emb y], ty = ['List A]]
err >   q?S. S ~ ty
err >
err > [4mexec[0m 
err >   [<type |-@p {}, check |-@p {}, synth |-@p {}, ([] 0 ) | <>, [33;1m\A_0. [0m, type { A_0 -> [] }. , <> @ p | p [A] @ ([] 0 ), ([] 2 ) | <>, [33;1m\y_1. [0m, synth { y_1 -> {y_1*} ?[("check",[1])("S",[0])] }. , <> @ p | q [y] @ ([] 2 ), ([] 4 ) | <>, [33;1m\y_2. [0m, synth { y_2 -> {y_2*} ?[("check",[1,3])("S",[0])] }. , <> @ p | q [y] @ ([] 4 ), <> @ p | q [] @ ([[34;1m!q. [] ['List A_0][0m] 4 [e = ['ListElim ['List A] y ['Emb y] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]], tm = ['Emb ['ListElim ['List A] y ['Emb y] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]]], ty = {y*} ?[("check",[1,3])("T",[1])]] q?S. S ~ ty), ([] 4 ) | <>, ([([([] 4 ) @ p | q [] @ <>] 4 ) @ p | r [] @ <>] 4 ) | <>, <> | ([] 4 [c x xs ih = ['Cons ['Emb x] ['Emb ih]], e = y, n = ['Emb y], tm = ['ListElim ['List A] y ['Emb y] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]], ty = ['List A]] 'Type?X. (synth@u. u!e. u?V. V ~ ['List X] | \y. synth {y -> {y*} X}. \ys. synth {ys -> ['List {y*, ys*} X]}. \jh. synth {jh -> {y*, ys*, jh*} ty}. check@v. v!{y*, ys*, jh*} ty. v!{y*, ys*, jh*, x=y, xs=ys, ih=jh} c.)), <> @ p | q [] @ ([] 4 ), ([] 4 ) @ p | q [] @ <>]
err >   4: [30;42m[?[("check",[1])("S",[0])] := ['List A_0], ?[("check",[1])("T",[1])] := ['Arr ['List A_0] ['List A_0]], ?[("check",[1,3])("S",[0])] := ['List A_0], ?[("check",[1,3])("T",[1])] := ['List A_0]][0m
err >   [S = {y*} ?[("check",[1,3])("S",[0])], e = y, tm = ['Emb y], ty = ['List A]]
err >   S ~ ty
err >
err > [4mexec[0m 
err >   [<type |-@p {}, check |-@p {}, synth |-@p {}, ([] 0 ) | <>, [33;1m\A_0. [0m, type { A_0 -> [] }. , <> @ p | p [A] @ ([] 0 ), ([] 2 ) | <>, [33;1m\y_1. [0m, synth { y_1 -> {y_1*} ?[("check",[1])("S",[0])] }. , <> @ p | q [y] @ ([] 2 ), ([] 4 ) | <>, [33;1m\y_2. [0m, synth { y_2 -> {y_2*} ?[("check",[1,3])("S",[0])] }. , <> @ p | q [y] @ ([] 4 ), <> @ p | q [] @ ([[34;1m!q. [] ['List A_0][0m] 4 [e = ['ListElim ['List A] y ['Emb y] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]], tm = ['Emb ['ListElim ['List A] y ['Emb y] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]]], ty = {y*} ?[("check",[1,3])("T",[1])]] q?S. S ~ ty), ([] 4 ) | <>, ([([([] 4 ) @ p | q [] @ <>] 4 ) @ p | r [] @ <>] 4 ) | <>, <> | ([] 4 [c x xs ih = ['Cons ['Emb x] ['Emb ih]], e = y, n = ['Emb y], tm = ['ListElim ['List A] y ['Emb y] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]], ty = ['List A]] 'Type?X. (synth@u. u!e. u?V. V ~ ['List X] | \y. synth {y -> {y*} X}. \ys. synth {ys -> ['List {y*, ys*} X]}. \jh. synth {jh -> {y*, ys*, jh*} ty}. check@v. v!{y*, ys*, jh*} ty. v!{y*, ys*, jh*, x=y, xs=ys, ih=jh} c.)), ([([] 4 ) @ p | q [] @ <>] 4 ) @ p | q [] @ <>]
err >   4: [30;42m[?[("check",[1])("S",[0])] := ['List A_0], ?[("check",[1])("T",[1])] := ['Arr ['List A_0] ['List A_0]], ?[("check",[1,3])("S",[0])] := ['List A_0], ?[("check",[1,3])("T",[1])] := ['List A_0]][0m
err >   
err >   
err >
err > [4mexec[0m 
err >   [<type |-@p {}, check |-@p {}, synth |-@p {}, ([] 0 ) | <>, [33;1m\A_0. [0m, type { A_0 -> [] }. , <> @ p | p [A] @ ([] 0 ), ([] 2 ) | <>, [33;1m\y_1. [0m, synth { y_1 -> {y_1*} ?[("check",[1])("S",[0])] }. , <> @ p | q [y] @ ([] 2 ), ([] 4 ) | <>, [33;1m\y_2. [0m, synth { y_2 -> {y_2*} ?[("check",[1,3])("S",[0])] }. , <> @ p | q [y] @ ([] 4 ), <> @ p | q [] @ ([[34;1m!q. [] ['List A_0][0m] 4 [e = ['ListElim ['List A] y ['Emb y] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]], tm = ['Emb ['ListElim ['List A] y ['Emb y] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]]], ty = {y*} ?[("check",[1,3])("T",[1])]] q?S. S ~ ty), ([] 4 ) | <>, ([([([] 4 ) @ p | q [] @ <>] 4 ) @ p | r [] @ <>] 4 ) | <>, ([([([] 4 ) @ p | q [] @ <>] 4 ) @ p | q [] @ <>] 4 ) | <>]
err >   4: [30;42m[?[("check",[1])("S",[0])] := ['List A_0], ?[("check",[1])("T",[1])] := ['Arr ['List A_0] ['List A_0]], ?[("check",[1,3])("S",[0])] := ['List A_0], ?[("check",[1,3])("T",[1])] := ['List A_0]][0m
err >   [c x xs ih = ['Cons ['Emb x] ['Emb ih]], e = y, n = ['Emb y], tm = ['ListElim ['List A] y ['Emb y] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]], ty = ['List A]]
err >   'Type?X. (synth@u. u!e. u?V. V ~ ['List X] | \y. synth {y -> {y*} X}. \ys. synth {ys -> ['List {y*, ys*} X]}. \jh. synth {jh -> {y*, ys*, jh*} ty}. check@v. v!{y*, ys*, jh*} ty. v!{y*, ys*, jh*, x=y, xs=ys, ih=jh} c.)
err >
err > [4mexec[0m 
err >   [<type |-@p {}, check |-@p {}, synth |-@p {}, ([] 0 ) | <>, [33;1m\A_0. [0m, type { A_0 -> [] }. , <> @ p | p [A] @ ([] 0 ), ([] 2 ) | <>, [33;1m\y_1. [0m, synth { y_1 -> {y_1*} ?[("check",[1])("S",[0])] }. , <> @ p | q [y] @ ([] 2 ), ([] 4 ) | <>, [33;1m\y_2. [0m, synth { y_2 -> {y_2*} ?[("check",[1,3])("S",[0])] }. , <> @ p | q [y] @ ([] 4 ), <> @ p | q [] @ ([[34;1m!q. [] ['List A_0][0m] 4 [e = ['ListElim ['List A] y ['Emb y] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]], tm = ['Emb ['ListElim ['List A] y ['Emb y] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]]], ty = {y*} ?[("check",[1,3])("T",[1])]] q?S. S ~ ty), ([] 4 ) | <>, ([([([] 4 ) @ p | q [] @ <>] 4 ) @ p | r [] @ <>] 4 ) | <>, ([([([] 4 ) @ p | q [] @ <>] 4 ) @ p | q [] @ <>] 4 ) | <>]
err >   4: [30;42m[?[("check",[1])("S",[0])] := ['List A_0], ?[("check",[1])("T",[1])] := ['Arr ['List A_0] ['List A_0]], ?[("check",[1,3])("S",[0])] := ['List A_0], ?[("check",[1,3])("T",[1])] := ['List A_0]][0m
err >   [X = ?[("check",[1,3,3])("synth",[0])("X",[3])], c x xs ih = ['Cons ['Emb x] ['Emb ih]], e = y, n = ['Emb y], tm = ['ListElim ['List A] y ['Emb y] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]], ty = ['List A]]
err >   synth@u. u!e. u?V. V ~ ['List X] | \y. synth {y -> {y*} X}. \ys. synth {ys -> ['List {y*, ys*} X]}. \jh. synth {jh -> {y*, ys*, jh*} ty}. check@v. v!{y*, ys*, jh*} ty. v!{y*, ys*, jh*, x=y, xs=ys, ih=jh} c.
err >
err > [4mexec[0m 
err >   [<type |-@p {}, check |-@p {}, synth |-@p {}, ([] 0 ) | <>, [33;1m\A_0. [0m, type { A_0 -> [] }. , <> @ p | p [A] @ ([] 0 ), ([] 2 ) | <>, [33;1m\y_1. [0m, synth { y_1 -> {y_1*} ?[("check",[1])("S",[0])] }. , <> @ p | q [y] @ ([] 2 ), ([] 4 ) | <>, [33;1m\y_2. [0m, synth { y_2 -> {y_2*} ?[("check",[1,3])("S",[0])] }. , <> @ p | q [y] @ ([] 4 ), <> @ p | q [] @ ([[34;1m!q. [] ['List A_0][0m] 4 [e = ['ListElim ['List A] y ['Emb y] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]], tm = ['Emb ['ListElim ['List A] y ['Emb y] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]]], ty = {y*} ?[("check",[1,3])("T",[1])]] q?S. S ~ ty), ([] 4 ) | <>, ([([([] 4 ) @ p | q [] @ <>] 4 ) @ p | r [] @ <>] 4 ) | <>, ([([([] 4 ) @ p | q [] @ <>] 4 ) @ p | q [] @ <>] 4 ) | <>, <> | ([] 4 [X = ?[("check",[1,3,3])("synth",[0])("X",[3])], c x xs ih = ['Cons ['Emb x] ['Emb ih]], e = y, n = ['Emb y], tm = ['ListElim ['List A] y ['Emb y] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]], ty = ['List A]] \y. synth {y -> {y*} X}. \ys. synth {ys -> ['List {y*, ys*} X]}. \jh. synth {jh -> {y*, ys*, jh*} ty}. check@v. v!{y*, ys*, jh*} ty. v!{y*, ys*, jh*, x=y, xs=ys, ih=jh} c.)]
err >   4: [30;42m[?[("check",[1])("S",[0])] := ['List A_0], ?[("check",[1])("T",[1])] := ['Arr ['List A_0] ['List A_0]], ?[("check",[1,3])("S",[0])] := ['List A_0], ?[("check",[1,3])("T",[1])] := ['List A_0]][0m
err >   [X = ?[("check",[1,3,3])("synth",[0])("X",[3])], c x xs ih = ['Cons ['Emb x] ['Emb ih]], e = y, n = ['Emb y], tm = ['ListElim ['List A] y ['Emb y] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]], ty = ['List A]]
err >   synth@u. u!e. u?V. V ~ ['List X]
err >
err > [4mexec[0m 
err >   [<type |-@p {}, check |-@p {}, synth |-@p {}, ([] 0 ) | <>, [33;1m\A_0. [0m, type { A_0 -> [] }. , <> @ p | p [A] @ ([] 0 ), ([] 2 ) | <>, [33;1m\y_1. [0m, synth { y_1 -> {y_1*} ?[("check",[1])("S",[0])] }. , <> @ p | q [y] @ ([] 2 ), ([] 4 ) | <>, [33;1m\y_2. [0m, synth { y_2 -> {y_2*} ?[("check",[1,3])("S",[0])] }. , <> @ p | q [y] @ ([] 4 ), <> @ p | q [] @ ([[34;1m!q. [] ['List A_0][0m] 4 [e = ['ListElim ['List A] y ['Emb y] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]], tm = ['Emb ['ListElim ['List A] y ['Emb y] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]]], ty = {y*} ?[("check",[1,3])("T",[1])]] q?S. S ~ ty), ([] 4 ) | <>, ([([([] 4 ) @ p | q [] @ <>] 4 ) @ p | r [] @ <>] 4 ) | <>, ([([([] 4 ) @ p | q [] @ <>] 4 ) @ p | q [] @ <>] 4 ) | <>, <> | ([] 4 [X = ?[("check",[1,3,3])("synth",[0])("X",[3])], c x xs ih = ['Cons ['Emb x] ['Emb ih]], e = y, n = ['Emb y], tm = ['ListElim ['List A] y ['Emb y] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]], ty = ['List A]] \y. synth {y -> {y*} X}. \ys. synth {ys -> ['List {y*, ys*} X]}. \jh. synth {jh -> {y*, ys*, jh*} ty}. check@v. v!{y*, ys*, jh*} ty. v!{y*, ys*, jh*, x=y, xs=ys, ih=jh} c.), ([] 4 [] p?tm. [4mlookup[0m tm {S -> p!S.} [4melse[0m p!S.) @ p | u [] @ <>]
err >   4: [30;42m[?[("check",[1])("S",[0])] := ['List A_0], ?[("check",[1])("T",[1])] := ['Arr ['List A_0] ['List A_0]], ?[("check",[1,3])("S",[0])] := ['List A_0], ?[("check",[1,3])("T",[1])] := ['List A_0]][0m
err >   [X = ?[("check",[1,3,3])("synth",[0])("X",[3])], c x xs ih = ['Cons ['Emb x] ['Emb ih]], e = y, n = ['Emb y], tm = ['ListElim ['List A] y ['Emb y] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]], ty = ['List A]]
err >   u!e. u?V. V ~ ['List X]
err >
err > [4mexec[0m 
err >   [<type |-@p {}, check |-@p {}, synth |-@p {}, ([] 0 ) | <>, [33;1m\A_0. [0m, type { A_0 -> [] }. , <> @ p | p [A] @ ([] 0 ), ([] 2 ) | <>, [33;1m\y_1. [0m, synth { y_1 -> {y_1*} ?[("check",[1])("S",[0])] }. , <> @ p | q [y] @ ([] 2 ), ([] 4 ) | <>, [33;1m\y_2. [0m, synth { y_2 -> {y_2*} ?[("check",[1,3])("S",[0])] }. , <> @ p | q [y] @ ([] 4 ), <> @ p | q [] @ ([[34;1m!q. [] ['List A_0][0m] 4 [e = ['ListElim ['List A] y ['Emb y] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]], tm = ['Emb ['ListElim ['List A] y ['Emb y] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]]], ty = {y*} ?[("check",[1,3])("T",[1])]] q?S. S ~ ty), ([] 4 ) | <>, ([([([] 4 ) @ p | q [] @ <>] 4 ) @ p | r [] @ <>] 4 ) | <>, ([([([] 4 ) @ p | q [] @ <>] 4 ) @ p | q [] @ <>] 4 ) | <>, <> | ([] 4 [X = ?[("check",[1,3,3])("synth",[0])("X",[3])], c x xs ih = ['Cons ['Emb x] ['Emb ih]], e = y, n = ['Emb y], tm = ['ListElim ['List A] y ['Emb y] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]], ty = ['List A]] \y. synth {y -> {y*} X}. \ys. synth {ys -> ['List {y*, ys*} X]}. \jh. synth {jh -> {y*, ys*, jh*} ty}. check@v. v!{y*, ys*, jh*} ty. v!{y*, ys*, jh*, x=y, xs=ys, ih=jh} c.), <> @ p | u [] @ ([] 4 [X = ?[("check",[1,3,3])("synth",[0])("X",[3])], c x xs ih = ['Cons ['Emb x] ['Emb ih]], e = y, n = ['Emb y], tm = ['ListElim ['List A] y ['Emb y] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]], ty = ['List A]] u?V. V ~ ['List X]), [34;1m!p. [] y_1[0m]
err >   4: [30;42m[?[("check",[1])("S",[0])] := ['List A_0], ?[("check",[1])("T",[1])] := ['Arr ['List A_0] ['List A_0]], ?[("check",[1,3])("S",[0])] := ['List A_0], ?[("check",[1,3])("T",[1])] := ['List A_0]][0m
err >   []
err >   p?tm. [4mlookup[0m tm {S -> p!S.} [4melse[0m p!S.
err >
err > [4mexec[0m 
err >   [<type |-@p {}, check |-@p {}, synth |-@p {}, ([] 0 ) | <>, [33;1m\A_0. [0m, type { A_0 -> [] }. , <> @ p | p [A] @ ([] 0 ), ([] 2 ) | <>, [33;1m\y_1. [0m, synth { y_1 -> {y_1*} ?[("check",[1])("S",[0])] }. , <> @ p | q [y] @ ([] 2 ), ([] 4 ) | <>, [33;1m\y_2. [0m, synth { y_2 -> {y_2*} ?[("check",[1,3])("S",[0])] }. , <> @ p | q [y] @ ([] 4 ), <> @ p | q [] @ ([[34;1m!q. [] ['List A_0][0m] 4 [e = ['ListElim ['List A] y ['Emb y] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]], tm = ['Emb ['ListElim ['List A] y ['Emb y] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]]], ty = {y*} ?[("check",[1,3])("T",[1])]] q?S. S ~ ty), ([] 4 ) | <>, ([([([] 4 ) @ p | q [] @ <>] 4 ) @ p | r [] @ <>] 4 ) | <>, ([([([] 4 ) @ p | q [] @ <>] 4 ) @ p | q [] @ <>] 4 ) | <>, <> | ([] 4 [X = ?[("check",[1,3,3])("synth",[0])("X",[3])], c x xs ih = ['Cons ['Emb x] ['Emb ih]], e = y, n = ['Emb y], tm = ['ListElim ['List A] y ['Emb y] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]], ty = ['List A]] \y. synth {y -> {y*} X}. \ys. synth {ys -> ['List {y*, ys*} X]}. \jh. synth {jh -> {y*, ys*, jh*} ty}. check@v. v!{y*, ys*, jh*} ty. v!{y*, ys*, jh*, x=y, xs=ys, ih=jh} c.), <> @ p | u [] @ ([] 4 [X = ?[("check",[1,3,3])("synth",[0])("X",[3])], c x xs ih = ['Cons ['Emb x] ['Emb ih]], e = y, n = ['Emb y], tm = ['ListElim ['List A] y ['Emb y] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]], ty = ['List A]] u?V. V ~ ['List X])]
err >   4: [30;42m[?[("check",[1])("S",[0])] := ['List A_0], ?[("check",[1])("T",[1])] := ['Arr ['List A_0] ['List A_0]], ?[("check",[1,3])("S",[0])] := ['List A_0], ?[("check",[1,3])("T",[1])] := ['List A_0]][0m
err >   [tm = y]
err >   [4mlookup[0m tm {S -> p!S.} [4melse[0m p!S.
err >
err > [4mexec[0m 
err >   [<type |-@p {}, check |-@p {}, synth |-@p {}, ([] 0 ) | <>, [33;1m\A_0. [0m, type { A_0 -> [] }. , <> @ p | p [A] @ ([] 0 ), ([] 2 ) | <>, [33;1m\y_1. [0m, synth { y_1 -> {y_1*} ?[("check",[1])("S",[0])] }. , <> @ p | q [y] @ ([] 2 ), ([] 4 ) | <>, [33;1m\y_2. [0m, synth { y_2 -> {y_2*} ?[("check",[1,3])("S",[0])] }. , <> @ p | q [y] @ ([] 4 ), <> @ p | q [] @ ([[34;1m!q. [] ['List A_0][0m] 4 [e = ['ListElim ['List A] y ['Emb y] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]], tm = ['Emb ['ListElim ['List A] y ['Emb y] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]]], ty = {y*} ?[("check",[1,3])("T",[1])]] q?S. S ~ ty), ([] 4 ) | <>, ([([([] 4 ) @ p | q [] @ <>] 4 ) @ p | r [] @ <>] 4 ) | <>, ([([([] 4 ) @ p | q [] @ <>] 4 ) @ p | q [] @ <>] 4 ) | <>, <> | ([] 4 [X = ?[("check",[1,3,3])("synth",[0])("X",[3])], c x xs ih = ['Cons ['Emb x] ['Emb ih]], e = y, n = ['Emb y], tm = ['ListElim ['List A] y ['Emb y] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]], ty = ['List A]] \y. synth {y -> {y*} X}. \ys. synth {ys -> ['List {y*, ys*} X]}. \jh. synth {jh -> {y*, ys*, jh*} ty}. check@v. v!{y*, ys*, jh*} ty. v!{y*, ys*, jh*, x=y, xs=ys, ih=jh} c.), <> @ p | u [] @ ([] 4 [X = ?[("check",[1,3,3])("synth",[0])("X",[3])], c x xs ih = ['Cons ['Emb x] ['Emb ih]], e = y, n = ['Emb y], tm = ['ListElim ['List A] y ['Emb y] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]], ty = ['List A]] u?V. V ~ ['List X])]
err >   4: [30;42m[?[("check",[1])("S",[0])] := ['List A_0], ?[("check",[1])("T",[1])] := ['Arr ['List A_0] ['List A_0]], ?[("check",[1,3])("S",[0])] := ['List A_0], ?[("check",[1,3])("T",[1])] := ['List A_0]][0m
err >   [S = {y*, y*} ?[("check",[1])("S",[0])], tm = y]
err >   p!S.
err >
err > [4mexec[0m 
err >   [<type |-@p {}, check |-@p {}, synth |-@p {}, ([] 0 ) | <>, [33;1m\A_0. [0m, type { A_0 -> [] }. , <> @ p | p [A] @ ([] 0 ), ([] 2 ) | <>, [33;1m\y_1. [0m, synth { y_1 -> {y_1*} ?[("check",[1])("S",[0])] }. , <> @ p | q [y] @ ([] 2 ), ([] 4 ) | <>, [33;1m\y_2. [0m, synth { y_2 -> {y_2*} ?[("check",[1,3])("S",[0])] }. , <> @ p | q [y] @ ([] 4 ), <> @ p | q [] @ ([[34;1m!q. [] ['List A_0][0m] 4 [e = ['ListElim ['List A] y ['Emb y] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]], tm = ['Emb ['ListElim ['List A] y ['Emb y] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]]], ty = {y*} ?[("check",[1,3])("T",[1])]] q?S. S ~ ty), ([] 4 ) | <>, ([([([] 4 ) @ p | q [] @ <>] 4 ) @ p | r [] @ <>] 4 ) | <>, ([([([] 4 ) @ p | q [] @ <>] 4 ) @ p | q [] @ <>] 4 ) | <>, <> | ([] 4 [X = ?[("check",[1,3,3])("synth",[0])("X",[3])], c x xs ih = ['Cons ['Emb x] ['Emb ih]], e = y, n = ['Emb y], tm = ['ListElim ['List A] y ['Emb y] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]], ty = ['List A]] \y. synth {y -> {y*} X}. \ys. synth {ys -> ['List {y*, ys*} X]}. \jh. synth {jh -> {y*, ys*, jh*} ty}. check@v. v!{y*, ys*, jh*} ty. v!{y*, ys*, jh*, x=y, xs=ys, ih=jh} c.), <> @ p | u [] @ ([[34;1m!u. [] {y_1*, y_2*} ?[("check",[1])("S",[0])][0m] 4 [X = ?[("check",[1,3,3])("synth",[0])("X",[3])], c x xs ih = ['Cons ['Emb x] ['Emb ih]], e = y, n = ['Emb y], tm = ['ListElim ['List A] y ['Emb y] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]], ty = ['List A]] u?V. V ~ ['List X])]
err >   4: [30;42m[?[("check",[1])("S",[0])] := ['List A_0], ?[("check",[1])("T",[1])] := ['Arr ['List A_0] ['List A_0]], ?[("check",[1,3])("S",[0])] := ['List A_0], ?[("check",[1,3])("T",[1])] := ['List A_0]][0m
err >   
err >   
err >
err > [4mexec[0m 
err >   [<type |-@p {}, check |-@p {}, synth |-@p {}, ([] 0 ) | <>, [33;1m\A_0. [0m, type { A_0 -> [] }. , <> @ p | p [A] @ ([] 0 ), ([] 2 ) | <>, [33;1m\y_1. [0m, synth { y_1 -> {y_1*} ?[("check",[1])("S",[0])] }. , <> @ p | q [y] @ ([] 2 ), ([] 4 ) | <>, [33;1m\y_2. [0m, synth { y_2 -> {y_2*} ?[("check",[1,3])("S",[0])] }. , <> @ p | q [y] @ ([] 4 ), <> @ p | q [] @ ([[34;1m!q. [] ['List A_0][0m] 4 [e = ['ListElim ['List A] y ['Emb y] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]], tm = ['Emb ['ListElim ['List A] y ['Emb y] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]]], ty = {y*} ?[("check",[1,3])("T",[1])]] q?S. S ~ ty), ([] 4 ) | <>, ([([([] 4 ) @ p | q [] @ <>] 4 ) @ p | r [] @ <>] 4 ) | <>, ([([([] 4 ) @ p | q [] @ <>] 4 ) @ p | q [] @ <>] 4 ) | <>, <> | ([] 4 [X = ?[("check",[1,3,3])("synth",[0])("X",[3])], c x xs ih = ['Cons ['Emb x] ['Emb ih]], e = y, n = ['Emb y], tm = ['ListElim ['List A] y ['Emb y] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]], ty = ['List A]] \y. synth {y -> {y*} X}. \ys. synth {ys -> ['List {y*, ys*} X]}. \jh. synth {jh -> {y*, ys*, jh*} ty}. check@v. v!{y*, ys*, jh*} ty. v!{y*, ys*, jh*, x=y, xs=ys, ih=jh} c.), ([] 4 ) @ p | u [] @ <>, [34;1m!u. [] {y_1*, y_2*} ?[("check",[1])("S",[0])][0m]
err >   4: [30;42m[?[("check",[1])("S",[0])] := ['List A_0], ?[("check",[1])("T",[1])] := ['Arr ['List A_0] ['List A_0]], ?[("check",[1,3])("S",[0])] := ['List A_0], ?[("check",[1,3])("T",[1])] := ['List A_0]][0m
err >   [X = ?[("check",[1,3,3])("synth",[0])("X",[3])], c x xs ih = ['Cons ['Emb x] ['Emb ih]], e = y, n = ['Emb y], tm = ['ListElim ['List A] y ['Emb y] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]], ty = ['List A]]
err >   u?V. V ~ ['List X]
err >
err > [4mexec[0m 
err >   [<type |-@p {}, check |-@p {}, synth |-@p {}, ([] 0 ) | <>, [33;1m\A_0. [0m, type { A_0 -> [] }. , <> @ p | p [A] @ ([] 0 ), ([] 2 ) | <>, [33;1m\y_1. [0m, synth { y_1 -> {y_1*} ?[("check",[1])("S",[0])] }. , <> @ p | q [y] @ ([] 2 ), ([] 4 ) | <>, [33;1m\y_2. [0m, synth { y_2 -> {y_2*} ?[("check",[1,3])("S",[0])] }. , <> @ p | q [y] @ ([] 4 ), <> @ p | q [] @ ([[34;1m!q. [] ['List A_0][0m] 4 [e = ['ListElim ['List A] y ['Emb y] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]], tm = ['Emb ['ListElim ['List A] y ['Emb y] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]]], ty = {y*} ?[("check",[1,3])("T",[1])]] q?S. S ~ ty), ([] 4 ) | <>, ([([([] 4 ) @ p | q [] @ <>] 4 ) @ p | r [] @ <>] 4 ) | <>, ([([([] 4 ) @ p | q [] @ <>] 4 ) @ p | q [] @ <>] 4 ) | <>, <> | ([] 4 [X = ?[("check",[1,3,3])("synth",[0])("X",[3])], c x xs ih = ['Cons ['Emb x] ['Emb ih]], e = y, n = ['Emb y], tm = ['ListElim ['List A] y ['Emb y] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]], ty = ['List A]] \y. synth {y -> {y*} X}. \ys. synth {ys -> ['List {y*, ys*} X]}. \jh. synth {jh -> {y*, ys*, jh*} ty}. check@v. v!{y*, ys*, jh*} ty. v!{y*, ys*, jh*, x=y, xs=ys, ih=jh} c.), ([] 4 ) @ p | u [] @ <>]
err >   4: [30;42m[?[("check",[1])("S",[0])] := ['List A_0], ?[("check",[1])("T",[1])] := ['Arr ['List A_0] ['List A_0]], ?[("check",[1,3])("S",[0])] := ['List A_0], ?[("check",[1,3])("T",[1])] := ['List A_0]][0m
err >   [V = {y*, y*} ?[("check",[1])("S",[0])], X = ?[("check",[1,3,3])("synth",[0])("X",[3])], c x xs ih = ['Cons ['Emb x] ['Emb ih]], e = y, n = ['Emb y], tm = ['ListElim ['List A] y ['Emb y] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]], ty = ['List A]]
err >   V ~ ['List X]
err >
err > [4mexec[0m 
err >   [<type |-@p {}, check |-@p {}, synth |-@p {}, ([] 0 ) | <>, [33;1m\A_0. [0m, type { A_0 -> [] }. , <> @ p | p [A] @ ([] 0 ), ([] 2 ) | <>, [33;1m\y_1. [0m, synth { y_1 -> {y_1*} ?[("check",[1])("S",[0])] }. , <> @ p | q [y] @ ([] 2 ), ([] 4 ) | <>, [33;1m\y_2. [0m, synth { y_2 -> {y_2*} ?[("check",[1,3])("S",[0])] }. , <> @ p | q [y] @ ([] 4 ), <> @ p | q [] @ ([[34;1m!q. [] ['List A_0][0m] 4 [e = ['ListElim ['List A] y ['Emb y] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]], tm = ['Emb ['ListElim ['List A] y ['Emb y] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]]], ty = {y*} ?[("check",[1,3])("T",[1])]] q?S. S ~ ty), ([] 4 ) | <>, ([([([] 4 ) @ p | q [] @ <>] 4 ) @ p | r [] @ <>] 4 ) | <>, ([([([] 4 ) @ p | q [] @ <>] 4 ) @ p | q [] @ <>] 4 ) | <>, <> | ([] 4 [X = ?[("check",[1,3,3])("synth",[0])("X",[3])], c x xs ih = ['Cons ['Emb x] ['Emb ih]], e = y, n = ['Emb y], tm = ['ListElim ['List A] y ['Emb y] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]], ty = ['List A]] \y. synth {y -> {y*} X}. \ys. synth {ys -> ['List {y*, ys*} X]}. \jh. synth {jh -> {y*, ys*, jh*} ty}. check@v. v!{y*, ys*, jh*} ty. v!{y*, ys*, jh*, x=y, xs=ys, ih=jh} c.), <> @ p | u [] @ ([] 5 )]
err >   5: [30;42m[?[("check",[1])("S",[0])] := ['List A_0], ?[("check",[1])("T",[1])] := ['Arr ['List A_0] ['List A_0]], ?[("check",[1,3])("S",[0])] := ['List A_0], ?[("check",[1,3])("T",[1])] := ['List A_0], ?[("check",[1,3,3])("synth",[0])("X",[3])] := A_0][0m
err >   
err >   
err >
err > [4mexec[0m 
err >   [<type |-@p {}, check |-@p {}, synth |-@p {}, ([] 0 ) | <>, [33;1m\A_0. [0m, type { A_0 -> [] }. , <> @ p | p [A] @ ([] 0 ), ([] 2 ) | <>, [33;1m\y_1. [0m, synth { y_1 -> {y_1*} ?[("check",[1])("S",[0])] }. , <> @ p | q [y] @ ([] 2 ), ([] 4 ) | <>, [33;1m\y_2. [0m, synth { y_2 -> {y_2*} ?[("check",[1,3])("S",[0])] }. , <> @ p | q [y] @ ([] 4 ), <> @ p | q [] @ ([[34;1m!q. [] ['List A_0][0m] 4 [e = ['ListElim ['List A] y ['Emb y] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]], tm = ['Emb ['ListElim ['List A] y ['Emb y] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]]], ty = {y*} ?[("check",[1,3])("T",[1])]] q?S. S ~ ty), ([] 4 ) | <>, ([([([] 4 ) @ p | q [] @ <>] 4 ) @ p | r [] @ <>] 4 ) | <>, ([([([] 4 ) @ p | q [] @ <>] 4 ) @ p | q [] @ <>] 4 ) | <>, <> | ([] 4 [X = ?[("check",[1,3,3])("synth",[0])("X",[3])], c x xs ih = ['Cons ['Emb x] ['Emb ih]], e = y, n = ['Emb y], tm = ['ListElim ['List A] y ['Emb y] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]], ty = ['List A]] \y. synth {y -> {y*} X}. \ys. synth {ys -> ['List {y*, ys*} X]}. \jh. synth {jh -> {y*, ys*, jh*} ty}. check@v. v!{y*, ys*, jh*} ty. v!{y*, ys*, jh*, x=y, xs=ys, ih=jh} c.), ([] 5 ) @ p | u [] @ <>]
err >   5: [30;42m[?[("check",[1])("S",[0])] := ['List A_0], ?[("check",[1])("T",[1])] := ['Arr ['List A_0] ['List A_0]], ?[("check",[1,3])("S",[0])] := ['List A_0], ?[("check",[1,3])("T",[1])] := ['List A_0], ?[("check",[1,3,3])("synth",[0])("X",[3])] := A_0][0m
err >   
err >   
err >
err > [4mexec[0m 
err >   [<type |-@p {}, check |-@p {}, synth |-@p {}, ([] 0 ) | <>, [33;1m\A_0. [0m, type { A_0 -> [] }. , <> @ p | p [A] @ ([] 0 ), ([] 2 ) | <>, [33;1m\y_1. [0m, synth { y_1 -> {y_1*} ?[("check",[1])("S",[0])] }. , <> @ p | q [y] @ ([] 2 ), ([] 4 ) | <>, [33;1m\y_2. [0m, synth { y_2 -> {y_2*} ?[("check",[1,3])("S",[0])] }. , <> @ p | q [y] @ ([] 4 ), <> @ p | q [] @ ([[34;1m!q. [] ['List A_0][0m] 4 [e = ['ListElim ['List A] y ['Emb y] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]], tm = ['Emb ['ListElim ['List A] y ['Emb y] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]]], ty = {y*} ?[("check",[1,3])("T",[1])]] q?S. S ~ ty), ([] 4 ) | <>, ([([([] 4 ) @ p | q [] @ <>] 4 ) @ p | r [] @ <>] 4 ) | <>, ([([([] 4 ) @ p | q [] @ <>] 4 ) @ p | q [] @ <>] 4 ) | <>, ([([] 5 ) @ p | u [] @ <>] 5 ) | <>]
err >   5: [30;42m[?[("check",[1])("S",[0])] := ['List A_0], ?[("check",[1])("T",[1])] := ['Arr ['List A_0] ['List A_0]], ?[("check",[1,3])("S",[0])] := ['List A_0], ?[("check",[1,3])("T",[1])] := ['List A_0], ?[("check",[1,3,3])("synth",[0])("X",[3])] := A_0][0m
err >   [X = ?[("check",[1,3,3])("synth",[0])("X",[3])], c x xs ih = ['Cons ['Emb x] ['Emb ih]], e = y, n = ['Emb y], tm = ['ListElim ['List A] y ['Emb y] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]], ty = ['List A]]
err >   \y. synth {y -> {y*} X}. \ys. synth {ys -> ['List {y*, ys*} X]}. \jh. synth {jh -> {y*, ys*, jh*} ty}. check@v. v!{y*, ys*, jh*} ty. v!{y*, ys*, jh*, x=y, xs=ys, ih=jh} c.
err >
err > [4mexec[0m 
err >   [<type |-@p {}, check |-@p {}, synth |-@p {}, ([] 0 ) | <>, [33;1m\A_0. [0m, type { A_0 -> [] }. , <> @ p | p [A] @ ([] 0 ), ([] 2 ) | <>, [33;1m\y_1. [0m, synth { y_1 -> {y_1*} ?[("check",[1])("S",[0])] }. , <> @ p | q [y] @ ([] 2 ), ([] 4 ) | <>, [33;1m\y_2. [0m, synth { y_2 -> {y_2*} ?[("check",[1,3])("S",[0])] }. , <> @ p | q [y] @ ([] 4 ), <> @ p | q [] @ ([[34;1m!q. [] ['List A_0][0m] 4 [e = ['ListElim ['List A] y ['Emb y] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]], tm = ['Emb ['ListElim ['List A] y ['Emb y] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]]], ty = {y*} ?[("check",[1,3])("T",[1])]] q?S. S ~ ty), ([] 4 ) | <>, ([([([] 4 ) @ p | q [] @ <>] 4 ) @ p | r [] @ <>] 4 ) | <>, ([([([] 4 ) @ p | q [] @ <>] 4 ) @ p | q [] @ <>] 4 ) | <>, ([([] 5 ) @ p | u [] @ <>] 5 ) | <>, [33;1m\y_3. [0m]
err >   5: [30;42m[?[("check",[1])("S",[0])] := ['List A_0], ?[("check",[1])("T",[1])] := ['Arr ['List A_0] ['List A_0]], ?[("check",[1,3])("S",[0])] := ['List A_0], ?[("check",[1,3])("T",[1])] := ['List A_0], ?[("check",[1,3,3])("synth",[0])("X",[3])] := A_0][0m
err >   [X = ?[("check",[1,3,3])("synth",[0])("X",[3])], c x xs ih = ['Cons ['Emb x] ['Emb ih]], e = y, n = ['Emb y], tm = ['ListElim ['List A] y ['Emb y] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]], ty = ['List A]]
err >   synth {y_3 -> {y_3*} X}. \ys. synth {ys -> ['List {y_3*, ys*} X]}. \jh. synth {jh -> {y_3*, ys*, jh*} ty}. check@v. v!{y_3*, ys*, jh*} ty. v!{y_3*, ys*, jh*, x=y_3, xs=ys, ih=jh} c.
err >
err > [4mexec[0m 
err >   [<type |-@p {}, check |-@p {}, synth |-@p {}, ([] 0 ) | <>, [33;1m\A_0. [0m, type { A_0 -> [] }. , <> @ p | p [A] @ ([] 0 ), ([] 2 ) | <>, [33;1m\y_1. [0m, synth { y_1 -> {y_1*} ?[("check",[1])("S",[0])] }. , <> @ p | q [y] @ ([] 2 ), ([] 4 ) | <>, [33;1m\y_2. [0m, synth { y_2 -> {y_2*} ?[("check",[1,3])("S",[0])] }. , <> @ p | q [y] @ ([] 4 ), <> @ p | q [] @ ([[34;1m!q. [] ['List A_0][0m] 4 [e = ['ListElim ['List A] y ['Emb y] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]], tm = ['Emb ['ListElim ['List A] y ['Emb y] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]]], ty = {y*} ?[("check",[1,3])("T",[1])]] q?S. S ~ ty), ([] 4 ) | <>, ([([([] 4 ) @ p | q [] @ <>] 4 ) @ p | r [] @ <>] 4 ) | <>, ([([([] 4 ) @ p | q [] @ <>] 4 ) @ p | q [] @ <>] 4 ) | <>, ([([] 5 ) @ p | u [] @ <>] 5 ) | <>, [33;1m\y_3. [0m, synth { y_3 -> {y_3*} ?[("check",[1,3,3])("synth",[0])("X",[3])] }. ]
err >   5: [30;42m[?[("check",[1])("S",[0])] := ['List A_0], ?[("check",[1])("T",[1])] := ['Arr ['List A_0] ['List A_0]], ?[("check",[1,3])("S",[0])] := ['List A_0], ?[("check",[1,3])("T",[1])] := ['List A_0], ?[("check",[1,3,3])("synth",[0])("X",[3])] := A_0][0m
err >   [X = ?[("check",[1,3,3])("synth",[0])("X",[3])], c x xs ih = ['Cons ['Emb x] ['Emb ih]], e = y, n = ['Emb y], tm = ['ListElim ['List A] y ['Emb y] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]], ty = ['List A]]
err >   \ys. synth {ys -> ['List {y_3*, ys*} X]}. \jh. synth {jh -> {y_3*, ys*, jh*} ty}. check@v. v!{y_3*, ys*, jh*} ty. v!{y_3*, ys*, jh*, x=y_3, xs=ys, ih=jh} c.
err >
err > [4mexec[0m 
err >   [<type |-@p {}, check |-@p {}, synth |-@p {}, ([] 0 ) | <>, [33;1m\A_0. [0m, type { A_0 -> [] }. , <> @ p | p [A] @ ([] 0 ), ([] 2 ) | <>, [33;1m\y_1. [0m, synth { y_1 -> {y_1*} ?[("check",[1])("S",[0])] }. , <> @ p | q [y] @ ([] 2 ), ([] 4 ) | <>, [33;1m\y_2. [0m, synth { y_2 -> {y_2*} ?[("check",[1,3])("S",[0])] }. , <> @ p | q [y] @ ([] 4 ), <> @ p | q [] @ ([[34;1m!q. [] ['List A_0][0m] 4 [e = ['ListElim ['List A] y ['Emb y] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]], tm = ['Emb ['ListElim ['List A] y ['Emb y] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]]], ty = {y*} ?[("check",[1,3])("T",[1])]] q?S. S ~ ty), ([] 4 ) | <>, ([([([] 4 ) @ p | q [] @ <>] 4 ) @ p | r [] @ <>] 4 ) | <>, ([([([] 4 ) @ p | q [] @ <>] 4 ) @ p | q [] @ <>] 4 ) | <>, ([([] 5 ) @ p | u [] @ <>] 5 ) | <>, [33;1m\y_3. [0m, synth { y_3 -> {y_3*} ?[("check",[1,3,3])("synth",[0])("X",[3])] }. , [33;1m\ys_4. [0m]
err >   5: [30;42m[?[("check",[1])("S",[0])] := ['List A_0], ?[("check",[1])("T",[1])] := ['Arr ['List A_0] ['List A_0]], ?[("check",[1,3])("S",[0])] := ['List A_0], ?[("check",[1,3])("T",[1])] := ['List A_0], ?[("check",[1,3,3])("synth",[0])("X",[3])] := A_0][0m
err >   [X = ?[("check",[1,3,3])("synth",[0])("X",[3])], c x xs ih = ['Cons ['Emb x] ['Emb ih]], e = y, n = ['Emb y], tm = ['ListElim ['List A] y ['Emb y] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]], ty = ['List A]]
err >   synth {ys_4 -> ['List {y_3*, ys_4*} X]}. \jh. synth {jh -> {y_3*, ys_4*, jh*} ty}. check@v. v!{y_3*, ys_4*, jh*} ty. v!{y_3*, ys_4*, jh*, x=y_3, xs=ys_4, ih=jh} c.
err >
err > [4mexec[0m 
err >   [<type |-@p {}, check |-@p {}, synth |-@p {}, ([] 0 ) | <>, [33;1m\A_0. [0m, type { A_0 -> [] }. , <> @ p | p [A] @ ([] 0 ), ([] 2 ) | <>, [33;1m\y_1. [0m, synth { y_1 -> {y_1*} ?[("check",[1])("S",[0])] }. , <> @ p | q [y] @ ([] 2 ), ([] 4 ) | <>, [33;1m\y_2. [0m, synth { y_2 -> {y_2*} ?[("check",[1,3])("S",[0])] }. , <> @ p | q [y] @ ([] 4 ), <> @ p | q [] @ ([[34;1m!q. [] ['List A_0][0m] 4 [e = ['ListElim ['List A] y ['Emb y] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]], tm = ['Emb ['ListElim ['List A] y ['Emb y] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]]], ty = {y*} ?[("check",[1,3])("T",[1])]] q?S. S ~ ty), ([] 4 ) | <>, ([([([] 4 ) @ p | q [] @ <>] 4 ) @ p | r [] @ <>] 4 ) | <>, ([([([] 4 ) @ p | q [] @ <>] 4 ) @ p | q [] @ <>] 4 ) | <>, ([([] 5 ) @ p | u [] @ <>] 5 ) | <>, [33;1m\y_3. [0m, synth { y_3 -> {y_3*} ?[("check",[1,3,3])("synth",[0])("X",[3])] }. , [33;1m\ys_4. [0m, synth { ys_4 -> ['List {y_3*, ys_4*} ?[("check",[1,3,3])("synth",[0])("X",[3])]] }. ]
err >   5: [30;42m[?[("check",[1])("S",[0])] := ['List A_0], ?[("check",[1])("T",[1])] := ['Arr ['List A_0] ['List A_0]], ?[("check",[1,3])("S",[0])] := ['List A_0], ?[("check",[1,3])("T",[1])] := ['List A_0], ?[("check",[1,3,3])("synth",[0])("X",[3])] := A_0][0m
err >   [X = ?[("check",[1,3,3])("synth",[0])("X",[3])], c x xs ih = ['Cons ['Emb x] ['Emb ih]], e = y, n = ['Emb y], tm = ['ListElim ['List A] y ['Emb y] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]], ty = ['List A]]
err >   \jh. synth {jh -> {y_3*, ys_4*, jh*} ty}. check@v. v!{y_3*, ys_4*, jh*} ty. v!{y_3*, ys_4*, jh*, x=y_3, xs=ys_4, ih=jh} c.
err >
err > [4mexec[0m 
err >   [<type |-@p {}, check |-@p {}, synth |-@p {}, ([] 0 ) | <>, [33;1m\A_0. [0m, type { A_0 -> [] }. , <> @ p | p [A] @ ([] 0 ), ([] 2 ) | <>, [33;1m\y_1. [0m, synth { y_1 -> {y_1*} ?[("check",[1])("S",[0])] }. , <> @ p | q [y] @ ([] 2 ), ([] 4 ) | <>, [33;1m\y_2. [0m, synth { y_2 -> {y_2*} ?[("check",[1,3])("S",[0])] }. , <> @ p | q [y] @ ([] 4 ), <> @ p | q [] @ ([[34;1m!q. [] ['List A_0][0m] 4 [e = ['ListElim ['List A] y ['Emb y] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]], tm = ['Emb ['ListElim ['List A] y ['Emb y] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]]], ty = {y*} ?[("check",[1,3])("T",[1])]] q?S. S ~ ty), ([] 4 ) | <>, ([([([] 4 ) @ p | q [] @ <>] 4 ) @ p | r [] @ <>] 4 ) | <>, ([([([] 4 ) @ p | q [] @ <>] 4 ) @ p | q [] @ <>] 4 ) | <>, ([([] 5 ) @ p | u [] @ <>] 5 ) | <>, [33;1m\y_3. [0m, synth { y_3 -> {y_3*} ?[("check",[1,3,3])("synth",[0])("X",[3])] }. , [33;1m\ys_4. [0m, synth { ys_4 -> ['List {y_3*, ys_4*} ?[("check",[1,3,3])("synth",[0])("X",[3])]] }. , [33;1m\jh_5. [0m]
err >   5: [30;42m[?[("check",[1])("S",[0])] := ['List A_0], ?[("check",[1])("T",[1])] := ['Arr ['List A_0] ['List A_0]], ?[("check",[1,3])("S",[0])] := ['List A_0], ?[("check",[1,3])("T",[1])] := ['List A_0], ?[("check",[1,3,3])("synth",[0])("X",[3])] := A_0][0m
err >   [X = ?[("check",[1,3,3])("synth",[0])("X",[3])], c x xs ih = ['Cons ['Emb x] ['Emb ih]], e = y, n = ['Emb y], tm = ['ListElim ['List A] y ['Emb y] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]], ty = ['List A]]
err >   synth {jh_5 -> {y_3*, ys_4*, jh_5*} ty}. check@v. v!{y_3*, ys_4*, jh_5*} ty. v!{y_3*, ys_4*, jh_5*, x=y_3, xs=ys_4, ih=jh_5} c.
err >
err > [4mexec[0m 
err >   [<type |-@p {}, check |-@p {}, synth |-@p {}, ([] 0 ) | <>, [33;1m\A_0. [0m, type { A_0 -> [] }. , <> @ p | p [A] @ ([] 0 ), ([] 2 ) | <>, [33;1m\y_1. [0m, synth { y_1 -> {y_1*} ?[("check",[1])("S",[0])] }. , <> @ p | q [y] @ ([] 2 ), ([] 4 ) | <>, [33;1m\y_2. [0m, synth { y_2 -> {y_2*} ?[("check",[1,3])("S",[0])] }. , <> @ p | q [y] @ ([] 4 ), <> @ p | q [] @ ([[34;1m!q. [] ['List A_0][0m] 4 [e = ['ListElim ['List A] y ['Emb y] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]], tm = ['Emb ['ListElim ['List A] y ['Emb y] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]]], ty = {y*} ?[("check",[1,3])("T",[1])]] q?S. S ~ ty), ([] 4 ) | <>, ([([([] 4 ) @ p | q [] @ <>] 4 ) @ p | r [] @ <>] 4 ) | <>, ([([([] 4 ) @ p | q [] @ <>] 4 ) @ p | q [] @ <>] 4 ) | <>, ([([] 5 ) @ p | u [] @ <>] 5 ) | <>, [33;1m\y_3. [0m, synth { y_3 -> {y_3*} ?[("check",[1,3,3])("synth",[0])("X",[3])] }. , [33;1m\ys_4. [0m, synth { ys_4 -> ['List {y_3*, ys_4*} ?[("check",[1,3,3])("synth",[0])("X",[3])]] }. , [33;1m\jh_5. [0m, synth { jh_5 -> ['List A_0] }. ]
err >   5: [30;42m[?[("check",[1])("S",[0])] := ['List A_0], ?[("check",[1])("T",[1])] := ['Arr ['List A_0] ['List A_0]], ?[("check",[1,3])("S",[0])] := ['List A_0], ?[("check",[1,3])("T",[1])] := ['List A_0], ?[("check",[1,3,3])("synth",[0])("X",[3])] := A_0][0m
err >   [X = ?[("check",[1,3,3])("synth",[0])("X",[3])], c x xs ih = ['Cons ['Emb x] ['Emb ih]], e = y, n = ['Emb y], tm = ['ListElim ['List A] y ['Emb y] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]], ty = ['List A]]
err >   check@v. v!{y_3*, ys_4*, jh_5*} ty. v!{y_3*, ys_4*, jh_5*, x=y_3, xs=ys_4, ih=jh_5} c.
err >
err > [4mexec[0m 
err >   [<type |-@p {}, check |-@p {}, synth |-@p {}, ([] 0 ) | <>, [33;1m\A_0. [0m, type { A_0 -> [] }. , <> @ p | p [A] @ ([] 0 ), ([] 2 ) | <>, [33;1m\y_1. [0m, synth { y_1 -> {y_1*} ?[("check",[1])("S",[0])] }. , <> @ p | q [y] @ ([] 2 ), ([] 4 ) | <>, [33;1m\y_2. [0m, synth { y_2 -> {y_2*} ?[("check",[1,3])("S",[0])] }. , <> @ p | q [y] @ ([] 4 ), <> @ p | q [] @ ([[34;1m!q. [] ['List A_0][0m] 4 [e = ['ListElim ['List A] y ['Emb y] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]], tm = ['Emb ['ListElim ['List A] y ['Emb y] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]]], ty = {y*} ?[("check",[1,3])("T",[1])]] q?S. S ~ ty), ([] 4 ) | <>, ([([([] 4 ) @ p | q [] @ <>] 4 ) @ p | r [] @ <>] 4 ) | <>, ([([([] 4 ) @ p | q [] @ <>] 4 ) @ p | q [] @ <>] 4 ) | <>, ([([] 5 ) @ p | u [] @ <>] 5 ) | <>, [33;1m\y_3. [0m, synth { y_3 -> {y_3*} ?[("check",[1,3,3])("synth",[0])("X",[3])] }. , [33;1m\ys_4. [0m, synth { ys_4 -> ['List {y_3*, ys_4*} ?[("check",[1,3,3])("synth",[0])("X",[3])]] }. , [33;1m\jh_5. [0m, synth { jh_5 -> ['List A_0] }. , ([] 5 [] p?ty. p?tm. [4mcase[0m tm {['Lam \x. body] -> 'Type?S. 'Type?T. (ty ~ ['Arr S T] | \y. synth {y -> {y*} S}. check@q. q!{y*} T. q!{y*, x=y} body.) ; 'Nil -> [4mcase[0m ty {'One ->  ; ['List S] ->  ; otherwise -> #"wrong type for Nil"} ; ['Cons s t] -> [4mcase[0m ty {['Pair S T] -> (check@q. q!S. q!s. | check@r. r!T. r!t.) ; ['List S] -> (check@q. q!S. q!s. | check@r. r!['List S]. r!t.) ; otherwise -> #"wrong type for Cons"} ; ['Emb e] -> synth@q. q!e. q?S. S ~ ty}) @ p | v [y, ys, jh] @ <>]
err >   5: [30;42m[?[("check",[1])("S",[0])] := ['List A_0], ?[("check",[1])("T",[1])] := ['Arr ['List A_0] ['List A_0]], ?[("check",[1,3])("S",[0])] := ['List A_0], ?[("check",[1,3])("T",[1])] := ['List A_0], ?[("check",[1,3,3])("synth",[0])("X",[3])] := A_0][0m
err >   [X = ?[("check",[1,3,3])("synth",[0])("X",[3])], c x xs ih = ['Cons ['Emb x] ['Emb ih]], e = y, n = ['Emb y], tm = ['ListElim ['List A] y ['Emb y] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]], ty = ['List A]]
err >   v!{y_3*, ys_4*, jh_5*} ty. v!{y_3*, ys_4*, jh_5*, x=y_3, xs=ys_4, ih=jh_5} c.
err >
err > [4mexec[0m 
err >   [<type |-@p {}, check |-@p {}, synth |-@p {}, ([] 0 ) | <>, [33;1m\A_0. [0m, type { A_0 -> [] }. , <> @ p | p [A] @ ([] 0 ), ([] 2 ) | <>, [33;1m\y_1. [0m, synth { y_1 -> {y_1*} ?[("check",[1])("S",[0])] }. , <> @ p | q [y] @ ([] 2 ), ([] 4 ) | <>, [33;1m\y_2. [0m, synth { y_2 -> {y_2*} ?[("check",[1,3])("S",[0])] }. , <> @ p | q [y] @ ([] 4 ), <> @ p | q [] @ ([[34;1m!q. [] ['List A_0][0m] 4 [e = ['ListElim ['List A] y ['Emb y] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]], tm = ['Emb ['ListElim ['List A] y ['Emb y] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]]], ty = {y*} ?[("check",[1,3])("T",[1])]] q?S. S ~ ty), ([] 4 ) | <>, ([([([] 4 ) @ p | q [] @ <>] 4 ) @ p | r [] @ <>] 4 ) | <>, ([([([] 4 ) @ p | q [] @ <>] 4 ) @ p | q [] @ <>] 4 ) | <>, ([([] 5 ) @ p | u [] @ <>] 5 ) | <>, [33;1m\y_3. [0m, synth { y_3 -> {y_3*} ?[("check",[1,3,3])("synth",[0])("X",[3])] }. , [33;1m\ys_4. [0m, synth { ys_4 -> ['List {y_3*, ys_4*} ?[("check",[1,3,3])("synth",[0])("X",[3])]] }. , [33;1m\jh_5. [0m, synth { jh_5 -> ['List A_0] }. , <> @ p | v [y, ys, jh] @ ([] 5 [X = ?[("check",[1,3,3])("synth",[0])("X",[3])], c x xs ih = ['Cons ['Emb x] ['Emb ih]], e = y, n = ['Emb y], tm = ['ListElim ['List A] y ['Emb y] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]], ty = ['List A]] v!{y_3*, ys_4*, jh_5*, x=y_3, xs=ys_4, ih=jh_5} c.), [34;1m!p. [] ['List A_0][0m]
err >   5: [30;42m[?[("check",[1])("S",[0])] := ['List A_0], ?[("check",[1])("T",[1])] := ['Arr ['List A_0] ['List A_0]], ?[("check",[1,3])("S",[0])] := ['List A_0], ?[("check",[1,3])("T",[1])] := ['List A_0], ?[("check",[1,3,3])("synth",[0])("X",[3])] := A_0][0m
err >   []
err >   p?ty. p?tm. [4mcase[0m tm {['Lam \x. body] -> 'Type?S. 'Type?T. (ty ~ ['Arr S T] | \y. synth {y -> {y*} S}. check@q. q!{y*} T. q!{y*, x=y} body.) ; 'Nil -> [4mcase[0m ty {'One ->  ; ['List S] ->  ; otherwise -> #"wrong type for Nil"} ; ['Cons s t] -> [4mcase[0m ty {['Pair S T] -> (check@q. q!S. q!s. | check@r. r!T. r!t.) ; ['List S] -> (check@q. q!S. q!s. | check@r. r!['List S]. r!t.) ; otherwise -> #"wrong type for Cons"} ; ['Emb e] -> synth@q. q!e. q?S. S ~ ty}
err >
err > [4mexec[0m 
err >   [<type |-@p {}, check |-@p {}, synth |-@p {}, ([] 0 ) | <>, [33;1m\A_0. [0m, type { A_0 -> [] }. , <> @ p | p [A] @ ([] 0 ), ([] 2 ) | <>, [33;1m\y_1. [0m, synth { y_1 -> {y_1*} ?[("check",[1])("S",[0])] }. , <> @ p | q [y] @ ([] 2 ), ([] 4 ) | <>, [33;1m\y_2. [0m, synth { y_2 -> {y_2*} ?[("check",[1,3])("S",[0])] }. , <> @ p | q [y] @ ([] 4 ), <> @ p | q [] @ ([[34;1m!q. [] ['List A_0][0m] 4 [e = ['ListElim ['List A] y ['Emb y] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]], tm = ['Emb ['ListElim ['List A] y ['Emb y] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]]], ty = {y*} ?[("check",[1,3])("T",[1])]] q?S. S ~ ty), ([] 4 ) | <>, ([([([] 4 ) @ p | q [] @ <>] 4 ) @ p | r [] @ <>] 4 ) | <>, ([([([] 4 ) @ p | q [] @ <>] 4 ) @ p | q [] @ <>] 4 ) | <>, ([([] 5 ) @ p | u [] @ <>] 5 ) | <>, [33;1m\y_3. [0m, synth { y_3 -> {y_3*} ?[("check",[1,3,3])("synth",[0])("X",[3])] }. , [33;1m\ys_4. [0m, synth { ys_4 -> ['List {y_3*, ys_4*} ?[("check",[1,3,3])("synth",[0])("X",[3])]] }. , [33;1m\jh_5. [0m, synth { jh_5 -> ['List A_0] }. , <> @ p | v [y, ys, jh] @ ([] 5 [X = ?[("check",[1,3,3])("synth",[0])("X",[3])], c x xs ih = ['Cons ['Emb x] ['Emb ih]], e = y, n = ['Emb y], tm = ['ListElim ['List A] y ['Emb y] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]], ty = ['List A]] v!{y_3*, ys_4*, jh_5*, x=y_3, xs=ys_4, ih=jh_5} c.)]
err >   5: [30;42m[?[("check",[1])("S",[0])] := ['List A_0], ?[("check",[1])("T",[1])] := ['Arr ['List A_0] ['List A_0]], ?[("check",[1,3])("S",[0])] := ['List A_0], ?[("check",[1,3])("T",[1])] := ['List A_0], ?[("check",[1,3,3])("synth",[0])("X",[3])] := A_0][0m
err >   [ty = ['List A]]
err >   p?tm. [4mcase[0m tm {['Lam \x. body] -> 'Type?S. 'Type?T. (ty ~ ['Arr S T] | \y. synth {y -> {y*} S}. check@q. q!{y*} T. q!{y*, x=y} body.) ; 'Nil -> [4mcase[0m ty {'One ->  ; ['List S] ->  ; otherwise -> #"wrong type for Nil"} ; ['Cons s t] -> [4mcase[0m ty {['Pair S T] -> (check@q. q!S. q!s. | check@r. r!T. r!t.) ; ['List S] -> (check@q. q!S. q!s. | check@r. r!['List S]. r!t.) ; otherwise -> #"wrong type for Cons"} ; ['Emb e] -> synth@q. q!e. q?S. S ~ ty}
err >
err > [4mexec[0m 
err >   [<type |-@p {}, check |-@p {}, synth |-@p {}, ([] 0 ) | <>, [33;1m\A_0. [0m, type { A_0 -> [] }. , <> @ p | p [A] @ ([] 0 ), ([] 2 ) | <>, [33;1m\y_1. [0m, synth { y_1 -> {y_1*} ?[("check",[1])("S",[0])] }. , <> @ p | q [y] @ ([] 2 ), ([] 4 ) | <>, [33;1m\y_2. [0m, synth { y_2 -> {y_2*} ?[("check",[1,3])("S",[0])] }. , <> @ p | q [y] @ ([] 4 ), <> @ p | q [] @ ([[34;1m!q. [] ['List A_0][0m] 4 [e = ['ListElim ['List A] y ['Emb y] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]], tm = ['Emb ['ListElim ['List A] y ['Emb y] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]]], ty = {y*} ?[("check",[1,3])("T",[1])]] q?S. S ~ ty), ([] 4 ) | <>, ([([([] 4 ) @ p | q [] @ <>] 4 ) @ p | r [] @ <>] 4 ) | <>, ([([([] 4 ) @ p | q [] @ <>] 4 ) @ p | q [] @ <>] 4 ) | <>, ([([] 5 ) @ p | u [] @ <>] 5 ) | <>, [33;1m\y_3. [0m, synth { y_3 -> {y_3*} ?[("check",[1,3,3])("synth",[0])("X",[3])] }. , [33;1m\ys_4. [0m, synth { ys_4 -> ['List {y_3*, ys_4*} ?[("check",[1,3,3])("synth",[0])("X",[3])]] }. , [33;1m\jh_5. [0m, synth { jh_5 -> ['List A_0] }. , ([] 5 [ty = ['List A]] p?tm. [4mcase[0m tm {['Lam \x. body] -> 'Type?S. 'Type?T. (ty ~ ['Arr S T] | \y. synth {y -> {y*} S}. check@q. q!{y*} T. q!{y*, x=y} body.) ; 'Nil -> [4mcase[0m ty {'One ->  ; ['List S] ->  ; otherwise -> #"wrong type for Nil"} ; ['Cons s t] -> [4mcase[0m ty {['Pair S T] -> (check@q. q!S. q!s. | check@r. r!T. r!t.) ; ['List S] -> (check@q. q!S. q!s. | check@r. r!['List S]. r!t.) ; otherwise -> #"wrong type for Cons"} ; ['Emb e] -> synth@q. q!e. q?S. S ~ ty}) @ p | v [y, ys, jh] @ <>]
err >   5: [30;42m[?[("check",[1])("S",[0])] := ['List A_0], ?[("check",[1])("T",[1])] := ['Arr ['List A_0] ['List A_0]], ?[("check",[1,3])("S",[0])] := ['List A_0], ?[("check",[1,3])("T",[1])] := ['List A_0], ?[("check",[1,3,3])("synth",[0])("X",[3])] := A_0][0m
err >   [X = ?[("check",[1,3,3])("synth",[0])("X",[3])], c x xs ih = ['Cons ['Emb x] ['Emb ih]], e = y, n = ['Emb y], tm = ['ListElim ['List A] y ['Emb y] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]], ty = ['List A]]
err >   v!{y_3*, ys_4*, jh_5*, x=y_3, xs=ys_4, ih=jh_5} c.
err >
err > [4mexec[0m 
err >   [<type |-@p {}, check |-@p {}, synth |-@p {}, ([] 0 ) | <>, [33;1m\A_0. [0m, type { A_0 -> [] }. , <> @ p | p [A] @ ([] 0 ), ([] 2 ) | <>, [33;1m\y_1. [0m, synth { y_1 -> {y_1*} ?[("check",[1])("S",[0])] }. , <> @ p | q [y] @ ([] 2 ), ([] 4 ) | <>, [33;1m\y_2. [0m, synth { y_2 -> {y_2*} ?[("check",[1,3])("S",[0])] }. , <> @ p | q [y] @ ([] 4 ), <> @ p | q [] @ ([[34;1m!q. [] ['List A_0][0m] 4 [e = ['ListElim ['List A] y ['Emb y] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]], tm = ['Emb ['ListElim ['List A] y ['Emb y] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]]], ty = {y*} ?[("check",[1,3])("T",[1])]] q?S. S ~ ty), ([] 4 ) | <>, ([([([] 4 ) @ p | q [] @ <>] 4 ) @ p | r [] @ <>] 4 ) | <>, ([([([] 4 ) @ p | q [] @ <>] 4 ) @ p | q [] @ <>] 4 ) | <>, ([([] 5 ) @ p | u [] @ <>] 5 ) | <>, [33;1m\y_3. [0m, synth { y_3 -> {y_3*} ?[("check",[1,3,3])("synth",[0])("X",[3])] }. , [33;1m\ys_4. [0m, synth { ys_4 -> ['List {y_3*, ys_4*} ?[("check",[1,3,3])("synth",[0])("X",[3])]] }. , [33;1m\jh_5. [0m, synth { jh_5 -> ['List A_0] }. , <> @ p | v [y, ys, jh] @ ([] 5 ), [34;1m!p. [] ['Cons ['Emb y_3] ['Emb jh_5]][0m]
err >   5: [30;42m[?[("check",[1])("S",[0])] := ['List A_0], ?[("check",[1])("T",[1])] := ['Arr ['List A_0] ['List A_0]], ?[("check",[1,3])("S",[0])] := ['List A_0], ?[("check",[1,3])("T",[1])] := ['List A_0], ?[("check",[1,3,3])("synth",[0])("X",[3])] := A_0][0m
err >   [ty = ['List A]]
err >   p?tm. [4mcase[0m tm {['Lam \x. body] -> 'Type?S. 'Type?T. (ty ~ ['Arr S T] | \y. synth {y -> {y*} S}. check@q. q!{y*} T. q!{y*, x=y} body.) ; 'Nil -> [4mcase[0m ty {'One ->  ; ['List S] ->  ; otherwise -> #"wrong type for Nil"} ; ['Cons s t] -> [4mcase[0m ty {['Pair S T] -> (check@q. q!S. q!s. | check@r. r!T. r!t.) ; ['List S] -> (check@q. q!S. q!s. | check@r. r!['List S]. r!t.) ; otherwise -> #"wrong type for Cons"} ; ['Emb e] -> synth@q. q!e. q?S. S ~ ty}
err >
err > [4mexec[0m 
err >   [<type |-@p {}, check |-@p {}, synth |-@p {}, ([] 0 ) | <>, [33;1m\A_0. [0m, type { A_0 -> [] }. , <> @ p | p [A] @ ([] 0 ), ([] 2 ) | <>, [33;1m\y_1. [0m, synth { y_1 -> {y_1*} ?[("check",[1])("S",[0])] }. , <> @ p | q [y] @ ([] 2 ), ([] 4 ) | <>, [33;1m\y_2. [0m, synth { y_2 -> {y_2*} ?[("check",[1,3])("S",[0])] }. , <> @ p | q [y] @ ([] 4 ), <> @ p | q [] @ ([[34;1m!q. [] ['List A_0][0m] 4 [e = ['ListElim ['List A] y ['Emb y] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]], tm = ['Emb ['ListElim ['List A] y ['Emb y] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]]], ty = {y*} ?[("check",[1,3])("T",[1])]] q?S. S ~ ty), ([] 4 ) | <>, ([([([] 4 ) @ p | q [] @ <>] 4 ) @ p | r [] @ <>] 4 ) | <>, ([([([] 4 ) @ p | q [] @ <>] 4 ) @ p | q [] @ <>] 4 ) | <>, ([([] 5 ) @ p | u [] @ <>] 5 ) | <>, [33;1m\y_3. [0m, synth { y_3 -> {y_3*} ?[("check",[1,3,3])("synth",[0])("X",[3])] }. , [33;1m\ys_4. [0m, synth { ys_4 -> ['List {y_3*, ys_4*} ?[("check",[1,3,3])("synth",[0])("X",[3])]] }. , [33;1m\jh_5. [0m, synth { jh_5 -> ['List A_0] }. , <> @ p | v [y, ys, jh] @ ([] 5 )]
err >   5: [30;42m[?[("check",[1])("S",[0])] := ['List A_0], ?[("check",[1])("T",[1])] := ['Arr ['List A_0] ['List A_0]], ?[("check",[1,3])("S",[0])] := ['List A_0], ?[("check",[1,3])("T",[1])] := ['List A_0], ?[("check",[1,3,3])("synth",[0])("X",[3])] := A_0][0m
err >   [tm = ['Cons ['Emb y] ['Emb jh]], ty = ['List A]]
err >   [4mcase[0m tm {['Lam \x. body] -> 'Type?S. 'Type?T. (ty ~ ['Arr S T] | \y. synth {y -> {y*} S}. check@q. q!{y*} T. q!{y*, x=y} body.) ; 'Nil -> [4mcase[0m ty {'One ->  ; ['List S] ->  ; otherwise -> #"wrong type for Nil"} ; ['Cons s t] -> [4mcase[0m ty {['Pair S T] -> (check@q. q!S. q!s. | check@r. r!T. r!t.) ; ['List S] -> (check@q. q!S. q!s. | check@r. r!['List S]. r!t.) ; otherwise -> #"wrong type for Cons"} ; ['Emb e] -> synth@q. q!e. q?S. S ~ ty}
err >
err > [4mexec[0m 
err >   [<type |-@p {}, check |-@p {}, synth |-@p {}, ([] 0 ) | <>, [33;1m\A_0. [0m, type { A_0 -> [] }. , <> @ p | p [A] @ ([] 0 ), ([] 2 ) | <>, [33;1m\y_1. [0m, synth { y_1 -> {y_1*} ?[("check",[1])("S",[0])] }. , <> @ p | q [y] @ ([] 2 ), ([] 4 ) | <>, [33;1m\y_2. [0m, synth { y_2 -> {y_2*} ?[("check",[1,3])("S",[0])] }. , <> @ p | q [y] @ ([] 4 ), <> @ p | q [] @ ([[34;1m!q. [] ['List A_0][0m] 4 [e = ['ListElim ['List A] y ['Emb y] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]], tm = ['Emb ['ListElim ['List A] y ['Emb y] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]]], ty = {y*} ?[("check",[1,3])("T",[1])]] q?S. S ~ ty), ([] 4 ) | <>, ([([([] 4 ) @ p | q [] @ <>] 4 ) @ p | r [] @ <>] 4 ) | <>, ([([([] 4 ) @ p | q [] @ <>] 4 ) @ p | q [] @ <>] 4 ) | <>, ([([] 5 ) @ p | u [] @ <>] 5 ) | <>, [33;1m\y_3. [0m, synth { y_3 -> {y_3*} ?[("check",[1,3,3])("synth",[0])("X",[3])] }. , [33;1m\ys_4. [0m, synth { ys_4 -> ['List {y_3*, ys_4*} ?[("check",[1,3,3])("synth",[0])("X",[3])]] }. , [33;1m\jh_5. [0m, synth { jh_5 -> ['List A_0] }. , <> @ p | v [y, ys, jh] @ ([] 5 )]
err >   5: [30;42m[?[("check",[1])("S",[0])] := ['List A_0], ?[("check",[1])("T",[1])] := ['Arr ['List A_0] ['List A_0]], ?[("check",[1,3])("S",[0])] := ['List A_0], ?[("check",[1,3])("T",[1])] := ['List A_0], ?[("check",[1,3,3])("synth",[0])("X",[3])] := A_0][0m
err >   [s = ['Emb y], t = ['Emb jh], tm = ['Cons ['Emb y] ['Emb jh]], ty = ['List A]]
err >   [4mcase[0m ty {['Pair S T] -> (check@q. q!S. q!s. | check@r. r!T. r!t.) ; ['List S] -> (check@q. q!S. q!s. | check@r. r!['List S]. r!t.) ; otherwise -> #"wrong type for Cons"}
err >
err > [4mexec[0m 
err >   [<type |-@p {}, check |-@p {}, synth |-@p {}, ([] 0 ) | <>, [33;1m\A_0. [0m, type { A_0 -> [] }. , <> @ p | p [A] @ ([] 0 ), ([] 2 ) | <>, [33;1m\y_1. [0m, synth { y_1 -> {y_1*} ?[("check",[1])("S",[0])] }. , <> @ p | q [y] @ ([] 2 ), ([] 4 ) | <>, [33;1m\y_2. [0m, synth { y_2 -> {y_2*} ?[("check",[1,3])("S",[0])] }. , <> @ p | q [y] @ ([] 4 ), <> @ p | q [] @ ([[34;1m!q. [] ['List A_0][0m] 4 [e = ['ListElim ['List A] y ['Emb y] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]], tm = ['Emb ['ListElim ['List A] y ['Emb y] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]]], ty = {y*} ?[("check",[1,3])("T",[1])]] q?S. S ~ ty), ([] 4 ) | <>, ([([([] 4 ) @ p | q [] @ <>] 4 ) @ p | r [] @ <>] 4 ) | <>, ([([([] 4 ) @ p | q [] @ <>] 4 ) @ p | q [] @ <>] 4 ) | <>, ([([] 5 ) @ p | u [] @ <>] 5 ) | <>, [33;1m\y_3. [0m, synth { y_3 -> {y_3*} ?[("check",[1,3,3])("synth",[0])("X",[3])] }. , [33;1m\ys_4. [0m, synth { ys_4 -> ['List {y_3*, ys_4*} ?[("check",[1,3,3])("synth",[0])("X",[3])]] }. , [33;1m\jh_5. [0m, synth { jh_5 -> ['List A_0] }. , <> @ p | v [y, ys, jh] @ ([] 5 )]
err >   5: [30;42m[?[("check",[1])("S",[0])] := ['List A_0], ?[("check",[1])("T",[1])] := ['Arr ['List A_0] ['List A_0]], ?[("check",[1,3])("S",[0])] := ['List A_0], ?[("check",[1,3])("T",[1])] := ['List A_0], ?[("check",[1,3,3])("synth",[0])("X",[3])] := A_0][0m
err >   [S = A, s = ['Emb y], t = ['Emb jh], tm = ['Cons ['Emb y] ['Emb jh]], ty = ['List A]]
err >   check@q. q!S. q!s. | check@r. r!['List S]. r!t.
err >
err > [4mexec[0m 
err >   [<type |-@p {}, check |-@p {}, synth |-@p {}, ([] 0 ) | <>, [33;1m\A_0. [0m, type { A_0 -> [] }. , <> @ p | p [A] @ ([] 0 ), ([] 2 ) | <>, [33;1m\y_1. [0m, synth { y_1 -> {y_1*} ?[("check",[1])("S",[0])] }. , <> @ p | q [y] @ ([] 2 ), ([] 4 ) | <>, [33;1m\y_2. [0m, synth { y_2 -> {y_2*} ?[("check",[1,3])("S",[0])] }. , <> @ p | q [y] @ ([] 4 ), <> @ p | q [] @ ([[34;1m!q. [] ['List A_0][0m] 4 [e = ['ListElim ['List A] y ['Emb y] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]], tm = ['Emb ['ListElim ['List A] y ['Emb y] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]]], ty = {y*} ?[("check",[1,3])("T",[1])]] q?S. S ~ ty), ([] 4 ) | <>, ([([([] 4 ) @ p | q [] @ <>] 4 ) @ p | r [] @ <>] 4 ) | <>, ([([([] 4 ) @ p | q [] @ <>] 4 ) @ p | q [] @ <>] 4 ) | <>, ([([] 5 ) @ p | u [] @ <>] 5 ) | <>, [33;1m\y_3. [0m, synth { y_3 -> {y_3*} ?[("check",[1,3,3])("synth",[0])("X",[3])] }. , [33;1m\ys_4. [0m, synth { ys_4 -> ['List {y_3*, ys_4*} ?[("check",[1,3,3])("synth",[0])("X",[3])]] }. , [33;1m\jh_5. [0m, synth { jh_5 -> ['List A_0] }. , <> @ p | v [y, ys, jh] @ ([] 5 ), <> | ([] 5 [S = A, s = ['Emb y], t = ['Emb jh], tm = ['Cons ['Emb y] ['Emb jh]], ty = ['List A]] check@r. r!['List S]. r!t.)]
err >   5: [30;42m[?[("check",[1])("S",[0])] := ['List A_0], ?[("check",[1])("T",[1])] := ['Arr ['List A_0] ['List A_0]], ?[("check",[1,3])("S",[0])] := ['List A_0], ?[("check",[1,3])("T",[1])] := ['List A_0], ?[("check",[1,3,3])("synth",[0])("X",[3])] := A_0][0m
err >   [S = A, s = ['Emb y], t = ['Emb jh], tm = ['Cons ['Emb y] ['Emb jh]], ty = ['List A]]
err >   check@q. q!S. q!s.
err >
err > [4mexec[0m 
err >   [<type |-@p {}, check |-@p {}, synth |-@p {}, ([] 0 ) | <>, [33;1m\A_0. [0m, type { A_0 -> [] }. , <> @ p | p [A] @ ([] 0 ), ([] 2 ) | <>, [33;1m\y_1. [0m, synth { y_1 -> {y_1*} ?[("check",[1])("S",[0])] }. , <> @ p | q [y] @ ([] 2 ), ([] 4 ) | <>, [33;1m\y_2. [0m, synth { y_2 -> {y_2*} ?[("check",[1,3])("S",[0])] }. , <> @ p | q [y] @ ([] 4 ), <> @ p | q [] @ ([[34;1m!q. [] ['List A_0][0m] 4 [e = ['ListElim ['List A] y ['Emb y] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]], tm = ['Emb ['ListElim ['List A] y ['Emb y] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]]], ty = {y*} ?[("check",[1,3])("T",[1])]] q?S. S ~ ty), ([] 4 ) | <>, ([([([] 4 ) @ p | q [] @ <>] 4 ) @ p | r [] @ <>] 4 ) | <>, ([([([] 4 ) @ p | q [] @ <>] 4 ) @ p | q [] @ <>] 4 ) | <>, ([([] 5 ) @ p | u [] @ <>] 5 ) | <>, [33;1m\y_3. [0m, synth { y_3 -> {y_3*} ?[("check",[1,3,3])("synth",[0])("X",[3])] }. , [33;1m\ys_4. [0m, synth { ys_4 -> ['List {y_3*, ys_4*} ?[("check",[1,3,3])("synth",[0])("X",[3])]] }. , [33;1m\jh_5. [0m, synth { jh_5 -> ['List A_0] }. , <> @ p | v [y, ys, jh] @ ([] 5 ), <> | ([] 5 [S = A, s = ['Emb y], t = ['Emb jh], tm = ['Cons ['Emb y] ['Emb jh]], ty = ['List A]] check@r. r!['List S]. r!t.), ([] 5 [] p?ty. p?tm. [4mcase[0m tm {['Lam \x. body] -> 'Type?S. 'Type?T. (ty ~ ['Arr S T] | \y. synth {y -> {y*} S}. check@q. q!{y*} T. q!{y*, x=y} body.) ; 'Nil -> [4mcase[0m ty {'One ->  ; ['List S] ->  ; otherwise -> #"wrong type for Nil"} ; ['Cons s t] -> [4mcase[0m ty {['Pair S T] -> (check@q. q!S. q!s. | check@r. r!T. r!t.) ; ['List S] -> (check@q. q!S. q!s. | check@r. r!['List S]. r!t.) ; otherwise -> #"wrong type for Cons"} ; ['Emb e] -> synth@q. q!e. q?S. S ~ ty}) @ p | q [] @ <>]
err >   5: [30;42m[?[("check",[1])("S",[0])] := ['List A_0], ?[("check",[1])("T",[1])] := ['Arr ['List A_0] ['List A_0]], ?[("check",[1,3])("S",[0])] := ['List A_0], ?[("check",[1,3])("T",[1])] := ['List A_0], ?[("check",[1,3,3])("synth",[0])("X",[3])] := A_0][0m
err >   [S = A, s = ['Emb y], t = ['Emb jh], tm = ['Cons ['Emb y] ['Emb jh]], ty = ['List A]]
err >   q!S. q!s.
err >
err > [4mexec[0m 
err >   [<type |-@p {}, check |-@p {}, synth |-@p {}, ([] 0 ) | <>, [33;1m\A_0. [0m, type { A_0 -> [] }. , <> @ p | p [A] @ ([] 0 ), ([] 2 ) | <>, [33;1m\y_1. [0m, synth { y_1 -> {y_1*} ?[("check",[1])("S",[0])] }. , <> @ p | q [y] @ ([] 2 ), ([] 4 ) | <>, [33;1m\y_2. [0m, synth { y_2 -> {y_2*} ?[("check",[1,3])("S",[0])] }. , <> @ p | q [y] @ ([] 4 ), <> @ p | q [] @ ([[34;1m!q. [] ['List A_0][0m] 4 [e = ['ListElim ['List A] y ['Emb y] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]], tm = ['Emb ['ListElim ['List A] y ['Emb y] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]]], ty = {y*} ?[("check",[1,3])("T",[1])]] q?S. S ~ ty), ([] 4 ) | <>, ([([([] 4 ) @ p | q [] @ <>] 4 ) @ p | r [] @ <>] 4 ) | <>, ([([([] 4 ) @ p | q [] @ <>] 4 ) @ p | q [] @ <>] 4 ) | <>, ([([] 5 ) @ p | u [] @ <>] 5 ) | <>, [33;1m\y_3. [0m, synth { y_3 -> {y_3*} ?[("check",[1,3,3])("synth",[0])("X",[3])] }. , [33;1m\ys_4. [0m, synth { ys_4 -> ['List {y_3*, ys_4*} ?[("check",[1,3,3])("synth",[0])("X",[3])]] }. , [33;1m\jh_5. [0m, synth { jh_5 -> ['List A_0] }. , <> @ p | v [y, ys, jh] @ ([] 5 ), <> | ([] 5 [S = A, s = ['Emb y], t = ['Emb jh], tm = ['Cons ['Emb y] ['Emb jh]], ty = ['List A]] check@r. r!['List S]. r!t.), <> @ p | q [] @ ([] 5 [S = A, s = ['Emb y], t = ['Emb jh], tm = ['Cons ['Emb y] ['Emb jh]], ty = ['List A]] q!s.), [34;1m!p. [] A_0[0m]
err >   5: [30;42m[?[("check",[1])("S",[0])] := ['List A_0], ?[("check",[1])("T",[1])] := ['Arr ['List A_0] ['List A_0]], ?[("check",[1,3])("S",[0])] := ['List A_0], ?[("check",[1,3])("T",[1])] := ['List A_0], ?[("check",[1,3,3])("synth",[0])("X",[3])] := A_0][0m
err >   []
err >   p?ty. p?tm. [4mcase[0m tm {['Lam \x. body] -> 'Type?S. 'Type?T. (ty ~ ['Arr S T] | \y. synth {y -> {y*} S}. check@q. q!{y*} T. q!{y*, x=y} body.) ; 'Nil -> [4mcase[0m ty {'One ->  ; ['List S] ->  ; otherwise -> #"wrong type for Nil"} ; ['Cons s t] -> [4mcase[0m ty {['Pair S T] -> (check@q. q!S. q!s. | check@r. r!T. r!t.) ; ['List S] -> (check@q. q!S. q!s. | check@r. r!['List S]. r!t.) ; otherwise -> #"wrong type for Cons"} ; ['Emb e] -> synth@q. q!e. q?S. S ~ ty}
err >
err > [4mexec[0m 
err >   [<type |-@p {}, check |-@p {}, synth |-@p {}, ([] 0 ) | <>, [33;1m\A_0. [0m, type { A_0 -> [] }. , <> @ p | p [A] @ ([] 0 ), ([] 2 ) | <>, [33;1m\y_1. [0m, synth { y_1 -> {y_1*} ?[("check",[1])("S",[0])] }. , <> @ p | q [y] @ ([] 2 ), ([] 4 ) | <>, [33;1m\y_2. [0m, synth { y_2 -> {y_2*} ?[("check",[1,3])("S",[0])] }. , <> @ p | q [y] @ ([] 4 ), <> @ p | q [] @ ([[34;1m!q. [] ['List A_0][0m] 4 [e = ['ListElim ['List A] y ['Emb y] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]], tm = ['Emb ['ListElim ['List A] y ['Emb y] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]]], ty = {y*} ?[("check",[1,3])("T",[1])]] q?S. S ~ ty), ([] 4 ) | <>, ([([([] 4 ) @ p | q [] @ <>] 4 ) @ p | r [] @ <>] 4 ) | <>, ([([([] 4 ) @ p | q [] @ <>] 4 ) @ p | q [] @ <>] 4 ) | <>, ([([] 5 ) @ p | u [] @ <>] 5 ) | <>, [33;1m\y_3. [0m, synth { y_3 -> {y_3*} ?[("check",[1,3,3])("synth",[0])("X",[3])] }. , [33;1m\ys_4. [0m, synth { ys_4 -> ['List {y_3*, ys_4*} ?[("check",[1,3,3])("synth",[0])("X",[3])]] }. , [33;1m\jh_5. [0m, synth { jh_5 -> ['List A_0] }. , <> @ p | v [y, ys, jh] @ ([] 5 ), <> | ([] 5 [S = A, s = ['Emb y], t = ['Emb jh], tm = ['Cons ['Emb y] ['Emb jh]], ty = ['List A]] check@r. r!['List S]. r!t.), <> @ p | q [] @ ([] 5 [S = A, s = ['Emb y], t = ['Emb jh], tm = ['Cons ['Emb y] ['Emb jh]], ty = ['List A]] q!s.)]
err >   5: [30;42m[?[("check",[1])("S",[0])] := ['List A_0], ?[("check",[1])("T",[1])] := ['Arr ['List A_0] ['List A_0]], ?[("check",[1,3])("S",[0])] := ['List A_0], ?[("check",[1,3])("T",[1])] := ['List A_0], ?[("check",[1,3,3])("synth",[0])("X",[3])] := A_0][0m
err >   [ty = A]
err >   p?tm. [4mcase[0m tm {['Lam \x. body] -> 'Type?S. 'Type?T. (ty ~ ['Arr S T] | \y. synth {y -> {y*} S}. check@q. q!{y*} T. q!{y*, x=y} body.) ; 'Nil -> [4mcase[0m ty {'One ->  ; ['List S] ->  ; otherwise -> #"wrong type for Nil"} ; ['Cons s t] -> [4mcase[0m ty {['Pair S T] -> (check@q. q!S. q!s. | check@r. r!T. r!t.) ; ['List S] -> (check@q. q!S. q!s. | check@r. r!['List S]. r!t.) ; otherwise -> #"wrong type for Cons"} ; ['Emb e] -> synth@q. q!e. q?S. S ~ ty}
err >
err > [4mexec[0m 
err >   [<type |-@p {}, check |-@p {}, synth |-@p {}, ([] 0 ) | <>, [33;1m\A_0. [0m, type { A_0 -> [] }. , <> @ p | p [A] @ ([] 0 ), ([] 2 ) | <>, [33;1m\y_1. [0m, synth { y_1 -> {y_1*} ?[("check",[1])("S",[0])] }. , <> @ p | q [y] @ ([] 2 ), ([] 4 ) | <>, [33;1m\y_2. [0m, synth { y_2 -> {y_2*} ?[("check",[1,3])("S",[0])] }. , <> @ p | q [y] @ ([] 4 ), <> @ p | q [] @ ([[34;1m!q. [] ['List A_0][0m] 4 [e = ['ListElim ['List A] y ['Emb y] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]], tm = ['Emb ['ListElim ['List A] y ['Emb y] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]]], ty = {y*} ?[("check",[1,3])("T",[1])]] q?S. S ~ ty), ([] 4 ) | <>, ([([([] 4 ) @ p | q [] @ <>] 4 ) @ p | r [] @ <>] 4 ) | <>, ([([([] 4 ) @ p | q [] @ <>] 4 ) @ p | q [] @ <>] 4 ) | <>, ([([] 5 ) @ p | u [] @ <>] 5 ) | <>, [33;1m\y_3. [0m, synth { y_3 -> {y_3*} ?[("check",[1,3,3])("synth",[0])("X",[3])] }. , [33;1m\ys_4. [0m, synth { ys_4 -> ['List {y_3*, ys_4*} ?[("check",[1,3,3])("synth",[0])("X",[3])]] }. , [33;1m\jh_5. [0m, synth { jh_5 -> ['List A_0] }. , <> @ p | v [y, ys, jh] @ ([] 5 ), <> | ([] 5 [S = A, s = ['Emb y], t = ['Emb jh], tm = ['Cons ['Emb y] ['Emb jh]], ty = ['List A]] check@r. r!['List S]. r!t.), ([] 5 [ty = A] p?tm. [4mcase[0m tm {['Lam \x. body] -> 'Type?S. 'Type?T. (ty ~ ['Arr S T] | \y. synth {y -> {y*} S}. check@q. q!{y*} T. q!{y*, x=y} body.) ; 'Nil -> [4mcase[0m ty {'One ->  ; ['List S] ->  ; otherwise -> #"wrong type for Nil"} ; ['Cons s t] -> [4mcase[0m ty {['Pair S T] -> (check@q. q!S. q!s. | check@r. r!T. r!t.) ; ['List S] -> (check@q. q!S. q!s. | check@r. r!['List S]. r!t.) ; otherwise -> #"wrong type for Cons"} ; ['Emb e] -> synth@q. q!e. q?S. S ~ ty}) @ p | q [] @ <>]
err >   5: [30;42m[?[("check",[1])("S",[0])] := ['List A_0], ?[("check",[1])("T",[1])] := ['Arr ['List A_0] ['List A_0]], ?[("check",[1,3])("S",[0])] := ['List A_0], ?[("check",[1,3])("T",[1])] := ['List A_0], ?[("check",[1,3,3])("synth",[0])("X",[3])] := A_0][0m
err >   [S = A, s = ['Emb y], t = ['Emb jh], tm = ['Cons ['Emb y] ['Emb jh]], ty = ['List A]]
err >   q!s.
err >
err > [4mexec[0m 
err >   [<type |-@p {}, check |-@p {}, synth |-@p {}, ([] 0 ) | <>, [33;1m\A_0. [0m, type { A_0 -> [] }. , <> @ p | p [A] @ ([] 0 ), ([] 2 ) | <>, [33;1m\y_1. [0m, synth { y_1 -> {y_1*} ?[("check",[1])("S",[0])] }. , <> @ p | q [y] @ ([] 2 ), ([] 4 ) | <>, [33;1m\y_2. [0m, synth { y_2 -> {y_2*} ?[("check",[1,3])("S",[0])] }. , <> @ p | q [y] @ ([] 4 ), <> @ p | q [] @ ([[34;1m!q. [] ['List A_0][0m] 4 [e = ['ListElim ['List A] y ['Emb y] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]], tm = ['Emb ['ListElim ['List A] y ['Emb y] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]]], ty = {y*} ?[("check",[1,3])("T",[1])]] q?S. S ~ ty), ([] 4 ) | <>, ([([([] 4 ) @ p | q [] @ <>] 4 ) @ p | r [] @ <>] 4 ) | <>, ([([([] 4 ) @ p | q [] @ <>] 4 ) @ p | q [] @ <>] 4 ) | <>, ([([] 5 ) @ p | u [] @ <>] 5 ) | <>, [33;1m\y_3. [0m, synth { y_3 -> {y_3*} ?[("check",[1,3,3])("synth",[0])("X",[3])] }. , [33;1m\ys_4. [0m, synth { ys_4 -> ['List {y_3*, ys_4*} ?[("check",[1,3,3])("synth",[0])("X",[3])]] }. , [33;1m\jh_5. [0m, synth { jh_5 -> ['List A_0] }. , <> @ p | v [y, ys, jh] @ ([] 5 ), <> | ([] 5 [S = A, s = ['Emb y], t = ['Emb jh], tm = ['Cons ['Emb y] ['Emb jh]], ty = ['List A]] check@r. r!['List S]. r!t.), <> @ p | q [] @ ([] 5 ), [34;1m!p. [] ['Emb y_3][0m]
err >   5: [30;42m[?[("check",[1])("S",[0])] := ['List A_0], ?[("check",[1])("T",[1])] := ['Arr ['List A_0] ['List A_0]], ?[("check",[1,3])("S",[0])] := ['List A_0], ?[("check",[1,3])("T",[1])] := ['List A_0], ?[("check",[1,3,3])("synth",[0])("X",[3])] := A_0][0m
err >   [ty = A]
err >   p?tm. [4mcase[0m tm {['Lam \x. body] -> 'Type?S. 'Type?T. (ty ~ ['Arr S T] | \y. synth {y -> {y*} S}. check@q. q!{y*} T. q!{y*, x=y} body.) ; 'Nil -> [4mcase[0m ty {'One ->  ; ['List S] ->  ; otherwise -> #"wrong type for Nil"} ; ['Cons s t] -> [4mcase[0m ty {['Pair S T] -> (check@q. q!S. q!s. | check@r. r!T. r!t.) ; ['List S] -> (check@q. q!S. q!s. | check@r. r!['List S]. r!t.) ; otherwise -> #"wrong type for Cons"} ; ['Emb e] -> synth@q. q!e. q?S. S ~ ty}
err >
err > [4mexec[0m 
err >   [<type |-@p {}, check |-@p {}, synth |-@p {}, ([] 0 ) | <>, [33;1m\A_0. [0m, type { A_0 -> [] }. , <> @ p | p [A] @ ([] 0 ), ([] 2 ) | <>, [33;1m\y_1. [0m, synth { y_1 -> {y_1*} ?[("check",[1])("S",[0])] }. , <> @ p | q [y] @ ([] 2 ), ([] 4 ) | <>, [33;1m\y_2. [0m, synth { y_2 -> {y_2*} ?[("check",[1,3])("S",[0])] }. , <> @ p | q [y] @ ([] 4 ), <> @ p | q [] @ ([[34;1m!q. [] ['List A_0][0m] 4 [e = ['ListElim ['List A] y ['Emb y] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]], tm = ['Emb ['ListElim ['List A] y ['Emb y] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]]], ty = {y*} ?[("check",[1,3])("T",[1])]] q?S. S ~ ty), ([] 4 ) | <>, ([([([] 4 ) @ p | q [] @ <>] 4 ) @ p | r [] @ <>] 4 ) | <>, ([([([] 4 ) @ p | q [] @ <>] 4 ) @ p | q [] @ <>] 4 ) | <>, ([([] 5 ) @ p | u [] @ <>] 5 ) | <>, [33;1m\y_3. [0m, synth { y_3 -> {y_3*} ?[("check",[1,3,3])("synth",[0])("X",[3])] }. , [33;1m\ys_4. [0m, synth { ys_4 -> ['List {y_3*, ys_4*} ?[("check",[1,3,3])("synth",[0])("X",[3])]] }. , [33;1m\jh_5. [0m, synth { jh_5 -> ['List A_0] }. , <> @ p | v [y, ys, jh] @ ([] 5 ), <> | ([] 5 [S = A, s = ['Emb y], t = ['Emb jh], tm = ['Cons ['Emb y] ['Emb jh]], ty = ['List A]] check@r. r!['List S]. r!t.), <> @ p | q [] @ ([] 5 )]
err >   5: [30;42m[?[("check",[1])("S",[0])] := ['List A_0], ?[("check",[1])("T",[1])] := ['Arr ['List A_0] ['List A_0]], ?[("check",[1,3])("S",[0])] := ['List A_0], ?[("check",[1,3])("T",[1])] := ['List A_0], ?[("check",[1,3,3])("synth",[0])("X",[3])] := A_0][0m
err >   [tm = ['Emb y], ty = A]
err >   [4mcase[0m tm {['Lam \x. body] -> 'Type?S. 'Type?T. (ty ~ ['Arr S T] | \y. synth {y -> {y*} S}. check@q. q!{y*} T. q!{y*, x=y} body.) ; 'Nil -> [4mcase[0m ty {'One ->  ; ['List S] ->  ; otherwise -> #"wrong type for Nil"} ; ['Cons s t] -> [4mcase[0m ty {['Pair S T] -> (check@q. q!S. q!s. | check@r. r!T. r!t.) ; ['List S] -> (check@q. q!S. q!s. | check@r. r!['List S]. r!t.) ; otherwise -> #"wrong type for Cons"} ; ['Emb e] -> synth@q. q!e. q?S. S ~ ty}
err >
err > [4mexec[0m 
err >   [<type |-@p {}, check |-@p {}, synth |-@p {}, ([] 0 ) | <>, [33;1m\A_0. [0m, type { A_0 -> [] }. , <> @ p | p [A] @ ([] 0 ), ([] 2 ) | <>, [33;1m\y_1. [0m, synth { y_1 -> {y_1*} ?[("check",[1])("S",[0])] }. , <> @ p | q [y] @ ([] 2 ), ([] 4 ) | <>, [33;1m\y_2. [0m, synth { y_2 -> {y_2*} ?[("check",[1,3])("S",[0])] }. , <> @ p | q [y] @ ([] 4 ), <> @ p | q [] @ ([[34;1m!q. [] ['List A_0][0m] 4 [e = ['ListElim ['List A] y ['Emb y] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]], tm = ['Emb ['ListElim ['List A] y ['Emb y] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]]], ty = {y*} ?[("check",[1,3])("T",[1])]] q?S. S ~ ty), ([] 4 ) | <>, ([([([] 4 ) @ p | q [] @ <>] 4 ) @ p | r [] @ <>] 4 ) | <>, ([([([] 4 ) @ p | q [] @ <>] 4 ) @ p | q [] @ <>] 4 ) | <>, ([([] 5 ) @ p | u [] @ <>] 5 ) | <>, [33;1m\y_3. [0m, synth { y_3 -> {y_3*} ?[("check",[1,3,3])("synth",[0])("X",[3])] }. , [33;1m\ys_4. [0m, synth { ys_4 -> ['List {y_3*, ys_4*} ?[("check",[1,3,3])("synth",[0])("X",[3])]] }. , [33;1m\jh_5. [0m, synth { jh_5 -> ['List A_0] }. , <> @ p | v [y, ys, jh] @ ([] 5 ), <> | ([] 5 [S = A, s = ['Emb y], t = ['Emb jh], tm = ['Cons ['Emb y] ['Emb jh]], ty = ['List A]] check@r. r!['List S]. r!t.), <> @ p | q [] @ ([] 5 )]
err >   5: [30;42m[?[("check",[1])("S",[0])] := ['List A_0], ?[("check",[1])("T",[1])] := ['Arr ['List A_0] ['List A_0]], ?[("check",[1,3])("S",[0])] := ['List A_0], ?[("check",[1,3])("T",[1])] := ['List A_0], ?[("check",[1,3,3])("synth",[0])("X",[3])] := A_0][0m
err >   [e = y, tm = ['Emb y], ty = A]
err >   synth@q. q!e. q?S. S ~ ty
err >
err > [4mexec[0m 
err >   [<type |-@p {}, check |-@p {}, synth |-@p {}, ([] 0 ) | <>, [33;1m\A_0. [0m, type { A_0 -> [] }. , <> @ p | p [A] @ ([] 0 ), ([] 2 ) | <>, [33;1m\y_1. [0m, synth { y_1 -> {y_1*} ?[("check",[1])("S",[0])] }. , <> @ p | q [y] @ ([] 2 ), ([] 4 ) | <>, [33;1m\y_2. [0m, synth { y_2 -> {y_2*} ?[("check",[1,3])("S",[0])] }. , <> @ p | q [y] @ ([] 4 ), <> @ p | q [] @ ([[34;1m!q. [] ['List A_0][0m] 4 [e = ['ListElim ['List A] y ['Emb y] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]], tm = ['Emb ['ListElim ['List A] y ['Emb y] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]]], ty = {y*} ?[("check",[1,3])("T",[1])]] q?S. S ~ ty), ([] 4 ) | <>, ([([([] 4 ) @ p | q [] @ <>] 4 ) @ p | r [] @ <>] 4 ) | <>, ([([([] 4 ) @ p | q [] @ <>] 4 ) @ p | q [] @ <>] 4 ) | <>, ([([] 5 ) @ p | u [] @ <>] 5 ) | <>, [33;1m\y_3. [0m, synth { y_3 -> {y_3*} ?[("check",[1,3,3])("synth",[0])("X",[3])] }. , [33;1m\ys_4. [0m, synth { ys_4 -> ['List {y_3*, ys_4*} ?[("check",[1,3,3])("synth",[0])("X",[3])]] }. , [33;1m\jh_5. [0m, synth { jh_5 -> ['List A_0] }. , <> @ p | v [y, ys, jh] @ ([] 5 ), <> | ([] 5 [S = A, s = ['Emb y], t = ['Emb jh], tm = ['Cons ['Emb y] ['Emb jh]], ty = ['List A]] check@r. r!['List S]. r!t.), <> @ p | q [] @ ([] 5 ), ([] 5 [] p?tm. [4mlookup[0m tm {S -> p!S.} [4melse[0m p!S.) @ p | q [] @ <>]
err >   5: [30;42m[?[("check",[1])("S",[0])] := ['List A_0], ?[("check",[1])("T",[1])] := ['Arr ['List A_0] ['List A_0]], ?[("check",[1,3])("S",[0])] := ['List A_0], ?[("check",[1,3])("T",[1])] := ['List A_0], ?[("check",[1,3,3])("synth",[0])("X",[3])] := A_0][0m
err >   [e = y, tm = ['Emb y], ty = A]
err >   q!e. q?S. S ~ ty
err >
err > [4mexec[0m 
err >   [<type |-@p {}, check |-@p {}, synth |-@p {}, ([] 0 ) | <>, [33;1m\A_0. [0m, type { A_0 -> [] }. , <> @ p | p [A] @ ([] 0 ), ([] 2 ) | <>, [33;1m\y_1. [0m, synth { y_1 -> {y_1*} ?[("check",[1])("S",[0])] }. , <> @ p | q [y] @ ([] 2 ), ([] 4 ) | <>, [33;1m\y_2. [0m, synth { y_2 -> {y_2*} ?[("check",[1,3])("S",[0])] }. , <> @ p | q [y] @ ([] 4 ), <> @ p | q [] @ ([[34;1m!q. [] ['List A_0][0m] 4 [e = ['ListElim ['List A] y ['Emb y] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]], tm = ['Emb ['ListElim ['List A] y ['Emb y] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]]], ty = {y*} ?[("check",[1,3])("T",[1])]] q?S. S ~ ty), ([] 4 ) | <>, ([([([] 4 ) @ p | q [] @ <>] 4 ) @ p | r [] @ <>] 4 ) | <>, ([([([] 4 ) @ p | q [] @ <>] 4 ) @ p | q [] @ <>] 4 ) | <>, ([([] 5 ) @ p | u [] @ <>] 5 ) | <>, [33;1m\y_3. [0m, synth { y_3 -> {y_3*} ?[("check",[1,3,3])("synth",[0])("X",[3])] }. , [33;1m\ys_4. [0m, synth { ys_4 -> ['List {y_3*, ys_4*} ?[("check",[1,3,3])("synth",[0])("X",[3])]] }. , [33;1m\jh_5. [0m, synth { jh_5 -> ['List A_0] }. , <> @ p | v [y, ys, jh] @ ([] 5 ), <> | ([] 5 [S = A, s = ['Emb y], t = ['Emb jh], tm = ['Cons ['Emb y] ['Emb jh]], ty = ['List A]] check@r. r!['List S]. r!t.), <> @ p | q [] @ ([] 5 ), <> @ p | q [] @ ([] 5 [e = y, tm = ['Emb y], ty = A] q?S. S ~ ty), [34;1m!p. [] y_3[0m]
err >   5: [30;42m[?[("check",[1])("S",[0])] := ['List A_0], ?[("check",[1])("T",[1])] := ['Arr ['List A_0] ['List A_0]], ?[("check",[1,3])("S",[0])] := ['List A_0], ?[("check",[1,3])("T",[1])] := ['List A_0], ?[("check",[1,3,3])("synth",[0])("X",[3])] := A_0][0m
err >   []
err >   p?tm. [4mlookup[0m tm {S -> p!S.} [4melse[0m p!S.
err >
err > [4mexec[0m 
err >   [<type |-@p {}, check |-@p {}, synth |-@p {}, ([] 0 ) | <>, [33;1m\A_0. [0m, type { A_0 -> [] }. , <> @ p | p [A] @ ([] 0 ), ([] 2 ) | <>, [33;1m\y_1. [0m, synth { y_1 -> {y_1*} ?[("check",[1])("S",[0])] }. , <> @ p | q [y] @ ([] 2 ), ([] 4 ) | <>, [33;1m\y_2. [0m, synth { y_2 -> {y_2*} ?[("check",[1,3])("S",[0])] }. , <> @ p | q [y] @ ([] 4 ), <> @ p | q [] @ ([[34;1m!q. [] ['List A_0][0m] 4 [e = ['ListElim ['List A] y ['Emb y] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]], tm = ['Emb ['ListElim ['List A] y ['Emb y] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]]], ty = {y*} ?[("check",[1,3])("T",[1])]] q?S. S ~ ty), ([] 4 ) | <>, ([([([] 4 ) @ p | q [] @ <>] 4 ) @ p | r [] @ <>] 4 ) | <>, ([([([] 4 ) @ p | q [] @ <>] 4 ) @ p | q [] @ <>] 4 ) | <>, ([([] 5 ) @ p | u [] @ <>] 5 ) | <>, [33;1m\y_3. [0m, synth { y_3 -> {y_3*} ?[("check",[1,3,3])("synth",[0])("X",[3])] }. , [33;1m\ys_4. [0m, synth { ys_4 -> ['List {y_3*, ys_4*} ?[("check",[1,3,3])("synth",[0])("X",[3])]] }. , [33;1m\jh_5. [0m, synth { jh_5 -> ['List A_0] }. , <> @ p | v [y, ys, jh] @ ([] 5 ), <> | ([] 5 [S = A, s = ['Emb y], t = ['Emb jh], tm = ['Cons ['Emb y] ['Emb jh]], ty = ['List A]] check@r. r!['List S]. r!t.), <> @ p | q [] @ ([] 5 ), <> @ p | q [] @ ([] 5 [e = y, tm = ['Emb y], ty = A] q?S. S ~ ty)]
err >   5: [30;42m[?[("check",[1])("S",[0])] := ['List A_0], ?[("check",[1])("T",[1])] := ['Arr ['List A_0] ['List A_0]], ?[("check",[1,3])("S",[0])] := ['List A_0], ?[("check",[1,3])("T",[1])] := ['List A_0], ?[("check",[1,3,3])("synth",[0])("X",[3])] := A_0][0m
err >   [tm = y]
err >   [4mlookup[0m tm {S -> p!S.} [4melse[0m p!S.
err >
err > [4mexec[0m 
err >   [<type |-@p {}, check |-@p {}, synth |-@p {}, ([] 0 ) | <>, [33;1m\A_0. [0m, type { A_0 -> [] }. , <> @ p | p [A] @ ([] 0 ), ([] 2 ) | <>, [33;1m\y_1. [0m, synth { y_1 -> {y_1*} ?[("check",[1])("S",[0])] }. , <> @ p | q [y] @ ([] 2 ), ([] 4 ) | <>, [33;1m\y_2. [0m, synth { y_2 -> {y_2*} ?[("check",[1,3])("S",[0])] }. , <> @ p | q [y] @ ([] 4 ), <> @ p | q [] @ ([[34;1m!q. [] ['List A_0][0m] 4 [e = ['ListElim ['List A] y ['Emb y] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]], tm = ['Emb ['ListElim ['List A] y ['Emb y] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]]], ty = {y*} ?[("check",[1,3])("T",[1])]] q?S. S ~ ty), ([] 4 ) | <>, ([([([] 4 ) @ p | q [] @ <>] 4 ) @ p | r [] @ <>] 4 ) | <>, ([([([] 4 ) @ p | q [] @ <>] 4 ) @ p | q [] @ <>] 4 ) | <>, ([([] 5 ) @ p | u [] @ <>] 5 ) | <>, [33;1m\y_3. [0m, synth { y_3 -> {y_3*} ?[("check",[1,3,3])("synth",[0])("X",[3])] }. , [33;1m\ys_4. [0m, synth { ys_4 -> ['List {y_3*, ys_4*} ?[("check",[1,3,3])("synth",[0])("X",[3])]] }. , [33;1m\jh_5. [0m, synth { jh_5 -> ['List A_0] }. , <> @ p | v [y, ys, jh] @ ([] 5 ), <> | ([] 5 [S = A, s = ['Emb y], t = ['Emb jh], tm = ['Cons ['Emb y] ['Emb jh]], ty = ['List A]] check@r. r!['List S]. r!t.), <> @ p | q [] @ ([] 5 ), <> @ p | q [] @ ([] 5 [e = y, tm = ['Emb y], ty = A] q?S. S ~ ty)]
err >   5: [30;42m[?[("check",[1])("S",[0])] := ['List A_0], ?[("check",[1])("T",[1])] := ['Arr ['List A_0] ['List A_0]], ?[("check",[1,3])("S",[0])] := ['List A_0], ?[("check",[1,3])("T",[1])] := ['List A_0], ?[("check",[1,3,3])("synth",[0])("X",[3])] := A_0][0m
err >   [S = {y*, ys*, jh*} ?[("check",[1,3,3])("synth",[0])("X",[3])], tm = y]
err >   p!S.
err >
err > [4mexec[0m 
err >   [<type |-@p {}, check |-@p {}, synth |-@p {}, ([] 0 ) | <>, [33;1m\A_0. [0m, type { A_0 -> [] }. , <> @ p | p [A] @ ([] 0 ), ([] 2 ) | <>, [33;1m\y_1. [0m, synth { y_1 -> {y_1*} ?[("check",[1])("S",[0])] }. , <> @ p | q [y] @ ([] 2 ), ([] 4 ) | <>, [33;1m\y_2. [0m, synth { y_2 -> {y_2*} ?[("check",[1,3])("S",[0])] }. , <> @ p | q [y] @ ([] 4 ), <> @ p | q [] @ ([[34;1m!q. [] ['List A_0][0m] 4 [e = ['ListElim ['List A] y ['Emb y] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]], tm = ['Emb ['ListElim ['List A] y ['Emb y] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]]], ty = {y*} ?[("check",[1,3])("T",[1])]] q?S. S ~ ty), ([] 4 ) | <>, ([([([] 4 ) @ p | q [] @ <>] 4 ) @ p | r [] @ <>] 4 ) | <>, ([([([] 4 ) @ p | q [] @ <>] 4 ) @ p | q [] @ <>] 4 ) | <>, ([([] 5 ) @ p | u [] @ <>] 5 ) | <>, [33;1m\y_3. [0m, synth { y_3 -> {y_3*} ?[("check",[1,3,3])("synth",[0])("X",[3])] }. , [33;1m\ys_4. [0m, synth { ys_4 -> ['List {y_3*, ys_4*} ?[("check",[1,3,3])("synth",[0])("X",[3])]] }. , [33;1m\jh_5. [0m, synth { jh_5 -> ['List A_0] }. , <> @ p | v [y, ys, jh] @ ([] 5 ), <> | ([] 5 [S = A, s = ['Emb y], t = ['Emb jh], tm = ['Cons ['Emb y] ['Emb jh]], ty = ['List A]] check@r. r!['List S]. r!t.), <> @ p | q [] @ ([] 5 ), <> @ p | q [] @ ([[34;1m!q. [] {y_3*, ys_4*, jh_5*} ?[("check",[1,3,3])("synth",[0])("X",[3])][0m] 5 [e = y, tm = ['Emb y], ty = A] q?S. S ~ ty)]
err >   5: [30;42m[?[("check",[1])("S",[0])] := ['List A_0], ?[("check",[1])("T",[1])] := ['Arr ['List A_0] ['List A_0]], ?[("check",[1,3])("S",[0])] := ['List A_0], ?[("check",[1,3])("T",[1])] := ['List A_0], ?[("check",[1,3,3])("synth",[0])("X",[3])] := A_0][0m
err >   
err >   
err >
err > [4mexec[0m 
err >   [<type |-@p {}, check |-@p {}, synth |-@p {}, ([] 0 ) | <>, [33;1m\A_0. [0m, type { A_0 -> [] }. , <> @ p | p [A] @ ([] 0 ), ([] 2 ) | <>, [33;1m\y_1. [0m, synth { y_1 -> {y_1*} ?[("check",[1])("S",[0])] }. , <> @ p | q [y] @ ([] 2 ), ([] 4 ) | <>, [33;1m\y_2. [0m, synth { y_2 -> {y_2*} ?[("check",[1,3])("S",[0])] }. , <> @ p | q [y] @ ([] 4 ), <> @ p | q [] @ ([[34;1m!q. [] ['List A_0][0m] 4 [e = ['ListElim ['List A] y ['Emb y] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]], tm = ['Emb ['ListElim ['List A] y ['Emb y] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]]], ty = {y*} ?[("check",[1,3])("T",[1])]] q?S. S ~ ty), ([] 4 ) | <>, ([([([] 4 ) @ p | q [] @ <>] 4 ) @ p | r [] @ <>] 4 ) | <>, ([([([] 4 ) @ p | q [] @ <>] 4 ) @ p | q [] @ <>] 4 ) | <>, ([([] 5 ) @ p | u [] @ <>] 5 ) | <>, [33;1m\y_3. [0m, synth { y_3 -> {y_3*} ?[("check",[1,3,3])("synth",[0])("X",[3])] }. , [33;1m\ys_4. [0m, synth { ys_4 -> ['List {y_3*, ys_4*} ?[("check",[1,3,3])("synth",[0])("X",[3])]] }. , [33;1m\jh_5. [0m, synth { jh_5 -> ['List A_0] }. , <> @ p | v [y, ys, jh] @ ([] 5 ), <> | ([] 5 [S = A, s = ['Emb y], t = ['Emb jh], tm = ['Cons ['Emb y] ['Emb jh]], ty = ['List A]] check@r. r!['List S]. r!t.), <> @ p | q [] @ ([] 5 ), ([] 5 ) @ p | q [] @ <>, [34;1m!q. [] {y_3*, ys_4*, jh_5*} ?[("check",[1,3,3])("synth",[0])("X",[3])][0m]
err >   5: [30;42m[?[("check",[1])("S",[0])] := ['List A_0], ?[("check",[1])("T",[1])] := ['Arr ['List A_0] ['List A_0]], ?[("check",[1,3])("S",[0])] := ['List A_0], ?[("check",[1,3])("T",[1])] := ['List A_0], ?[("check",[1,3,3])("synth",[0])("X",[3])] := A_0][0m
err >   [e = y, tm = ['Emb y], ty = A]
err >   q?S. S ~ ty
err >
err > [4mexec[0m 
err >   [<type |-@p {}, check |-@p {}, synth |-@p {}, ([] 0 ) | <>, [33;1m\A_0. [0m, type { A_0 -> [] }. , <> @ p | p [A] @ ([] 0 ), ([] 2 ) | <>, [33;1m\y_1. [0m, synth { y_1 -> {y_1*} ?[("check",[1])("S",[0])] }. , <> @ p | q [y] @ ([] 2 ), ([] 4 ) | <>, [33;1m\y_2. [0m, synth { y_2 -> {y_2*} ?[("check",[1,3])("S",[0])] }. , <> @ p | q [y] @ ([] 4 ), <> @ p | q [] @ ([[34;1m!q. [] ['List A_0][0m] 4 [e = ['ListElim ['List A] y ['Emb y] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]], tm = ['Emb ['ListElim ['List A] y ['Emb y] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]]], ty = {y*} ?[("check",[1,3])("T",[1])]] q?S. S ~ ty), ([] 4 ) | <>, ([([([] 4 ) @ p | q [] @ <>] 4 ) @ p | r [] @ <>] 4 ) | <>, ([([([] 4 ) @ p | q [] @ <>] 4 ) @ p | q [] @ <>] 4 ) | <>, ([([] 5 ) @ p | u [] @ <>] 5 ) | <>, [33;1m\y_3. [0m, synth { y_3 -> {y_3*} ?[("check",[1,3,3])("synth",[0])("X",[3])] }. , [33;1m\ys_4. [0m, synth { ys_4 -> ['List {y_3*, ys_4*} ?[("check",[1,3,3])("synth",[0])("X",[3])]] }. , [33;1m\jh_5. [0m, synth { jh_5 -> ['List A_0] }. , <> @ p | v [y, ys, jh] @ ([] 5 ), <> | ([] 5 [S = A, s = ['Emb y], t = ['Emb jh], tm = ['Cons ['Emb y] ['Emb jh]], ty = ['List A]] check@r. r!['List S]. r!t.), <> @ p | q [] @ ([] 5 ), ([] 5 ) @ p | q [] @ <>]
err >   5: [30;42m[?[("check",[1])("S",[0])] := ['List A_0], ?[("check",[1])("T",[1])] := ['Arr ['List A_0] ['List A_0]], ?[("check",[1,3])("S",[0])] := ['List A_0], ?[("check",[1,3])("T",[1])] := ['List A_0], ?[("check",[1,3,3])("synth",[0])("X",[3])] := A_0][0m
err >   [S = {y*, ys*, jh*} ?[("check",[1,3,3])("synth",[0])("X",[3])], e = y, tm = ['Emb y], ty = A]
err >   S ~ ty
err >
err > [4mexec[0m 
err >   [<type |-@p {}, check |-@p {}, synth |-@p {}, ([] 0 ) | <>, [33;1m\A_0. [0m, type { A_0 -> [] }. , <> @ p | p [A] @ ([] 0 ), ([] 2 ) | <>, [33;1m\y_1. [0m, synth { y_1 -> {y_1*} ?[("check",[1])("S",[0])] }. , <> @ p | q [y] @ ([] 2 ), ([] 4 ) | <>, [33;1m\y_2. [0m, synth { y_2 -> {y_2*} ?[("check",[1,3])("S",[0])] }. , <> @ p | q [y] @ ([] 4 ), <> @ p | q [] @ ([[34;1m!q. [] ['List A_0][0m] 4 [e = ['ListElim ['List A] y ['Emb y] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]], tm = ['Emb ['ListElim ['List A] y ['Emb y] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]]], ty = {y*} ?[("check",[1,3])("T",[1])]] q?S. S ~ ty), ([] 4 ) | <>, ([([([] 4 ) @ p | q [] @ <>] 4 ) @ p | r [] @ <>] 4 ) | <>, ([([([] 4 ) @ p | q [] @ <>] 4 ) @ p | q [] @ <>] 4 ) | <>, ([([] 5 ) @ p | u [] @ <>] 5 ) | <>, [33;1m\y_3. [0m, synth { y_3 -> {y_3*} ?[("check",[1,3,3])("synth",[0])("X",[3])] }. , [33;1m\ys_4. [0m, synth { ys_4 -> ['List {y_3*, ys_4*} ?[("check",[1,3,3])("synth",[0])("X",[3])]] }. , [33;1m\jh_5. [0m, synth { jh_5 -> ['List A_0] }. , <> @ p | v [y, ys, jh] @ ([] 5 ), <> | ([] 5 [S = A, s = ['Emb y], t = ['Emb jh], tm = ['Cons ['Emb y] ['Emb jh]], ty = ['List A]] check@r. r!['List S]. r!t.), ([([] 5 ) @ p | q [] @ <>] 5 ) @ p | q [] @ <>]
err >   5: [30;42m[?[("check",[1])("S",[0])] := ['List A_0], ?[("check",[1])("T",[1])] := ['Arr ['List A_0] ['List A_0]], ?[("check",[1,3])("S",[0])] := ['List A_0], ?[("check",[1,3])("T",[1])] := ['List A_0], ?[("check",[1,3,3])("synth",[0])("X",[3])] := A_0][0m
err >   
err >   
err >
err > [4mexec[0m 
err >   [<type |-@p {}, check |-@p {}, synth |-@p {}, ([] 0 ) | <>, [33;1m\A_0. [0m, type { A_0 -> [] }. , <> @ p | p [A] @ ([] 0 ), ([] 2 ) | <>, [33;1m\y_1. [0m, synth { y_1 -> {y_1*} ?[("check",[1])("S",[0])] }. , <> @ p | q [y] @ ([] 2 ), ([] 4 ) | <>, [33;1m\y_2. [0m, synth { y_2 -> {y_2*} ?[("check",[1,3])("S",[0])] }. , <> @ p | q [y] @ ([] 4 ), <> @ p | q [] @ ([[34;1m!q. [] ['List A_0][0m] 4 [e = ['ListElim ['List A] y ['Emb y] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]], tm = ['Emb ['ListElim ['List A] y ['Emb y] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]]], ty = {y*} ?[("check",[1,3])("T",[1])]] q?S. S ~ ty), ([] 4 ) | <>, ([([([] 4 ) @ p | q [] @ <>] 4 ) @ p | r [] @ <>] 4 ) | <>, ([([([] 4 ) @ p | q [] @ <>] 4 ) @ p | q [] @ <>] 4 ) | <>, ([([] 5 ) @ p | u [] @ <>] 5 ) | <>, [33;1m\y_3. [0m, synth { y_3 -> {y_3*} ?[("check",[1,3,3])("synth",[0])("X",[3])] }. , [33;1m\ys_4. [0m, synth { ys_4 -> ['List {y_3*, ys_4*} ?[("check",[1,3,3])("synth",[0])("X",[3])]] }. , [33;1m\jh_5. [0m, synth { jh_5 -> ['List A_0] }. , <> @ p | v [y, ys, jh] @ ([] 5 ), ([([([] 5 ) @ p | q [] @ <>] 5 ) @ p | q [] @ <>] 5 ) | <>]
err >   5: [30;42m[?[("check",[1])("S",[0])] := ['List A_0], ?[("check",[1])("T",[1])] := ['Arr ['List A_0] ['List A_0]], ?[("check",[1,3])("S",[0])] := ['List A_0], ?[("check",[1,3])("T",[1])] := ['List A_0], ?[("check",[1,3,3])("synth",[0])("X",[3])] := A_0][0m
err >   [S = A, s = ['Emb y], t = ['Emb jh], tm = ['Cons ['Emb y] ['Emb jh]], ty = ['List A]]
err >   check@r. r!['List S]. r!t.
err >
err > [4mexec[0m 
err >   [<type |-@p {}, check |-@p {}, synth |-@p {}, ([] 0 ) | <>, [33;1m\A_0. [0m, type { A_0 -> [] }. , <> @ p | p [A] @ ([] 0 ), ([] 2 ) | <>, [33;1m\y_1. [0m, synth { y_1 -> {y_1*} ?[("check",[1])("S",[0])] }. , <> @ p | q [y] @ ([] 2 ), ([] 4 ) | <>, [33;1m\y_2. [0m, synth { y_2 -> {y_2*} ?[("check",[1,3])("S",[0])] }. , <> @ p | q [y] @ ([] 4 ), <> @ p | q [] @ ([[34;1m!q. [] ['List A_0][0m] 4 [e = ['ListElim ['List A] y ['Emb y] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]], tm = ['Emb ['ListElim ['List A] y ['Emb y] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]]], ty = {y*} ?[("check",[1,3])("T",[1])]] q?S. S ~ ty), ([] 4 ) | <>, ([([([] 4 ) @ p | q [] @ <>] 4 ) @ p | r [] @ <>] 4 ) | <>, ([([([] 4 ) @ p | q [] @ <>] 4 ) @ p | q [] @ <>] 4 ) | <>, ([([] 5 ) @ p | u [] @ <>] 5 ) | <>, [33;1m\y_3. [0m, synth { y_3 -> {y_3*} ?[("check",[1,3,3])("synth",[0])("X",[3])] }. , [33;1m\ys_4. [0m, synth { ys_4 -> ['List {y_3*, ys_4*} ?[("check",[1,3,3])("synth",[0])("X",[3])]] }. , [33;1m\jh_5. [0m, synth { jh_5 -> ['List A_0] }. , <> @ p | v [y, ys, jh] @ ([] 5 ), ([([([] 5 ) @ p | q [] @ <>] 5 ) @ p | q [] @ <>] 5 ) | <>, ([] 5 [] p?ty. p?tm. [4mcase[0m tm {['Lam \x. body] -> 'Type?S. 'Type?T. (ty ~ ['Arr S T] | \y. synth {y -> {y*} S}. check@q. q!{y*} T. q!{y*, x=y} body.) ; 'Nil -> [4mcase[0m ty {'One ->  ; ['List S] ->  ; otherwise -> #"wrong type for Nil"} ; ['Cons s t] -> [4mcase[0m ty {['Pair S T] -> (check@q. q!S. q!s. | check@r. r!T. r!t.) ; ['List S] -> (check@q. q!S. q!s. | check@r. r!['List S]. r!t.) ; otherwise -> #"wrong type for Cons"} ; ['Emb e] -> synth@q. q!e. q?S. S ~ ty}) @ p | r [] @ <>]
err >   5: [30;42m[?[("check",[1])("S",[0])] := ['List A_0], ?[("check",[1])("T",[1])] := ['Arr ['List A_0] ['List A_0]], ?[("check",[1,3])("S",[0])] := ['List A_0], ?[("check",[1,3])("T",[1])] := ['List A_0], ?[("check",[1,3,3])("synth",[0])("X",[3])] := A_0][0m
err >   [S = A, s = ['Emb y], t = ['Emb jh], tm = ['Cons ['Emb y] ['Emb jh]], ty = ['List A]]
err >   r!['List S]. r!t.
err >
err > [4mexec[0m 
err >   [<type |-@p {}, check |-@p {}, synth |-@p {}, ([] 0 ) | <>, [33;1m\A_0. [0m, type { A_0 -> [] }. , <> @ p | p [A] @ ([] 0 ), ([] 2 ) | <>, [33;1m\y_1. [0m, synth { y_1 -> {y_1*} ?[("check",[1])("S",[0])] }. , <> @ p | q [y] @ ([] 2 ), ([] 4 ) | <>, [33;1m\y_2. [0m, synth { y_2 -> {y_2*} ?[("check",[1,3])("S",[0])] }. , <> @ p | q [y] @ ([] 4 ), <> @ p | q [] @ ([[34;1m!q. [] ['List A_0][0m] 4 [e = ['ListElim ['List A] y ['Emb y] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]], tm = ['Emb ['ListElim ['List A] y ['Emb y] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]]], ty = {y*} ?[("check",[1,3])("T",[1])]] q?S. S ~ ty), ([] 4 ) | <>, ([([([] 4 ) @ p | q [] @ <>] 4 ) @ p | r [] @ <>] 4 ) | <>, ([([([] 4 ) @ p | q [] @ <>] 4 ) @ p | q [] @ <>] 4 ) | <>, ([([] 5 ) @ p | u [] @ <>] 5 ) | <>, [33;1m\y_3. [0m, synth { y_3 -> {y_3*} ?[("check",[1,3,3])("synth",[0])("X",[3])] }. , [33;1m\ys_4. [0m, synth { ys_4 -> ['List {y_3*, ys_4*} ?[("check",[1,3,3])("synth",[0])("X",[3])]] }. , [33;1m\jh_5. [0m, synth { jh_5 -> ['List A_0] }. , <> @ p | v [y, ys, jh] @ ([] 5 ), ([([([] 5 ) @ p | q [] @ <>] 5 ) @ p | q [] @ <>] 5 ) | <>, <> @ p | r [] @ ([] 5 [S = A, s = ['Emb y], t = ['Emb jh], tm = ['Cons ['Emb y] ['Emb jh]], ty = ['List A]] r!t.), [34;1m!p. [] ['List A_0][0m]
err >   5: [30;42m[?[("check",[1])("S",[0])] := ['List A_0], ?[("check",[1])("T",[1])] := ['Arr ['List A_0] ['List A_0]], ?[("check",[1,3])("S",[0])] := ['List A_0], ?[("check",[1,3])("T",[1])] := ['List A_0], ?[("check",[1,3,3])("synth",[0])("X",[3])] := A_0][0m
err >   []
err >   p?ty. p?tm. [4mcase[0m tm {['Lam \x. body] -> 'Type?S. 'Type?T. (ty ~ ['Arr S T] | \y. synth {y -> {y*} S}. check@q. q!{y*} T. q!{y*, x=y} body.) ; 'Nil -> [4mcase[0m ty {'One ->  ; ['List S] ->  ; otherwise -> #"wrong type for Nil"} ; ['Cons s t] -> [4mcase[0m ty {['Pair S T] -> (check@q. q!S. q!s. | check@r. r!T. r!t.) ; ['List S] -> (check@q. q!S. q!s. | check@r. r!['List S]. r!t.) ; otherwise -> #"wrong type for Cons"} ; ['Emb e] -> synth@q. q!e. q?S. S ~ ty}
err >
err > [4mexec[0m 
err >   [<type |-@p {}, check |-@p {}, synth |-@p {}, ([] 0 ) | <>, [33;1m\A_0. [0m, type { A_0 -> [] }. , <> @ p | p [A] @ ([] 0 ), ([] 2 ) | <>, [33;1m\y_1. [0m, synth { y_1 -> {y_1*} ?[("check",[1])("S",[0])] }. , <> @ p | q [y] @ ([] 2 ), ([] 4 ) | <>, [33;1m\y_2. [0m, synth { y_2 -> {y_2*} ?[("check",[1,3])("S",[0])] }. , <> @ p | q [y] @ ([] 4 ), <> @ p | q [] @ ([[34;1m!q. [] ['List A_0][0m] 4 [e = ['ListElim ['List A] y ['Emb y] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]], tm = ['Emb ['ListElim ['List A] y ['Emb y] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]]], ty = {y*} ?[("check",[1,3])("T",[1])]] q?S. S ~ ty), ([] 4 ) | <>, ([([([] 4 ) @ p | q [] @ <>] 4 ) @ p | r [] @ <>] 4 ) | <>, ([([([] 4 ) @ p | q [] @ <>] 4 ) @ p | q [] @ <>] 4 ) | <>, ([([] 5 ) @ p | u [] @ <>] 5 ) | <>, [33;1m\y_3. [0m, synth { y_3 -> {y_3*} ?[("check",[1,3,3])("synth",[0])("X",[3])] }. , [33;1m\ys_4. [0m, synth { ys_4 -> ['List {y_3*, ys_4*} ?[("check",[1,3,3])("synth",[0])("X",[3])]] }. , [33;1m\jh_5. [0m, synth { jh_5 -> ['List A_0] }. , <> @ p | v [y, ys, jh] @ ([] 5 ), ([([([] 5 ) @ p | q [] @ <>] 5 ) @ p | q [] @ <>] 5 ) | <>, <> @ p | r [] @ ([] 5 [S = A, s = ['Emb y], t = ['Emb jh], tm = ['Cons ['Emb y] ['Emb jh]], ty = ['List A]] r!t.)]
err >   5: [30;42m[?[("check",[1])("S",[0])] := ['List A_0], ?[("check",[1])("T",[1])] := ['Arr ['List A_0] ['List A_0]], ?[("check",[1,3])("S",[0])] := ['List A_0], ?[("check",[1,3])("T",[1])] := ['List A_0], ?[("check",[1,3,3])("synth",[0])("X",[3])] := A_0][0m
err >   [ty = ['List A]]
err >   p?tm. [4mcase[0m tm {['Lam \x. body] -> 'Type?S. 'Type?T. (ty ~ ['Arr S T] | \y. synth {y -> {y*} S}. check@q. q!{y*} T. q!{y*, x=y} body.) ; 'Nil -> [4mcase[0m ty {'One ->  ; ['List S] ->  ; otherwise -> #"wrong type for Nil"} ; ['Cons s t] -> [4mcase[0m ty {['Pair S T] -> (check@q. q!S. q!s. | check@r. r!T. r!t.) ; ['List S] -> (check@q. q!S. q!s. | check@r. r!['List S]. r!t.) ; otherwise -> #"wrong type for Cons"} ; ['Emb e] -> synth@q. q!e. q?S. S ~ ty}
err >
err > [4mexec[0m 
err >   [<type |-@p {}, check |-@p {}, synth |-@p {}, ([] 0 ) | <>, [33;1m\A_0. [0m, type { A_0 -> [] }. , <> @ p | p [A] @ ([] 0 ), ([] 2 ) | <>, [33;1m\y_1. [0m, synth { y_1 -> {y_1*} ?[("check",[1])("S",[0])] }. , <> @ p | q [y] @ ([] 2 ), ([] 4 ) | <>, [33;1m\y_2. [0m, synth { y_2 -> {y_2*} ?[("check",[1,3])("S",[0])] }. , <> @ p | q [y] @ ([] 4 ), <> @ p | q [] @ ([[34;1m!q. [] ['List A_0][0m] 4 [e = ['ListElim ['List A] y ['Emb y] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]], tm = ['Emb ['ListElim ['List A] y ['Emb y] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]]], ty = {y*} ?[("check",[1,3])("T",[1])]] q?S. S ~ ty), ([] 4 ) | <>, ([([([] 4 ) @ p | q [] @ <>] 4 ) @ p | r [] @ <>] 4 ) | <>, ([([([] 4 ) @ p | q [] @ <>] 4 ) @ p | q [] @ <>] 4 ) | <>, ([([] 5 ) @ p | u [] @ <>] 5 ) | <>, [33;1m\y_3. [0m, synth { y_3 -> {y_3*} ?[("check",[1,3,3])("synth",[0])("X",[3])] }. , [33;1m\ys_4. [0m, synth { ys_4 -> ['List {y_3*, ys_4*} ?[("check",[1,3,3])("synth",[0])("X",[3])]] }. , [33;1m\jh_5. [0m, synth { jh_5 -> ['List A_0] }. , <> @ p | v [y, ys, jh] @ ([] 5 ), ([([([] 5 ) @ p | q [] @ <>] 5 ) @ p | q [] @ <>] 5 ) | <>, ([] 5 [ty = ['List A]] p?tm. [4mcase[0m tm {['Lam \x. body] -> 'Type?S. 'Type?T. (ty ~ ['Arr S T] | \y. synth {y -> {y*} S}. check@q. q!{y*} T. q!{y*, x=y} body.) ; 'Nil -> [4mcase[0m ty {'One ->  ; ['List S] ->  ; otherwise -> #"wrong type for Nil"} ; ['Cons s t] -> [4mcase[0m ty {['Pair S T] -> (check@q. q!S. q!s. | check@r. r!T. r!t.) ; ['List S] -> (check@q. q!S. q!s. | check@r. r!['List S]. r!t.) ; otherwise -> #"wrong type for Cons"} ; ['Emb e] -> synth@q. q!e. q?S. S ~ ty}) @ p | r [] @ <>]
err >   5: [30;42m[?[("check",[1])("S",[0])] := ['List A_0], ?[("check",[1])("T",[1])] := ['Arr ['List A_0] ['List A_0]], ?[("check",[1,3])("S",[0])] := ['List A_0], ?[("check",[1,3])("T",[1])] := ['List A_0], ?[("check",[1,3,3])("synth",[0])("X",[3])] := A_0][0m
err >   [S = A, s = ['Emb y], t = ['Emb jh], tm = ['Cons ['Emb y] ['Emb jh]], ty = ['List A]]
err >   r!t.
err >
err > [4mexec[0m 
err >   [<type |-@p {}, check |-@p {}, synth |-@p {}, ([] 0 ) | <>, [33;1m\A_0. [0m, type { A_0 -> [] }. , <> @ p | p [A] @ ([] 0 ), ([] 2 ) | <>, [33;1m\y_1. [0m, synth { y_1 -> {y_1*} ?[("check",[1])("S",[0])] }. , <> @ p | q [y] @ ([] 2 ), ([] 4 ) | <>, [33;1m\y_2. [0m, synth { y_2 -> {y_2*} ?[("check",[1,3])("S",[0])] }. , <> @ p | q [y] @ ([] 4 ), <> @ p | q [] @ ([[34;1m!q. [] ['List A_0][0m] 4 [e = ['ListElim ['List A] y ['Emb y] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]], tm = ['Emb ['ListElim ['List A] y ['Emb y] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]]], ty = {y*} ?[("check",[1,3])("T",[1])]] q?S. S ~ ty), ([] 4 ) | <>, ([([([] 4 ) @ p | q [] @ <>] 4 ) @ p | r [] @ <>] 4 ) | <>, ([([([] 4 ) @ p | q [] @ <>] 4 ) @ p | q [] @ <>] 4 ) | <>, ([([] 5 ) @ p | u [] @ <>] 5 ) | <>, [33;1m\y_3. [0m, synth { y_3 -> {y_3*} ?[("check",[1,3,3])("synth",[0])("X",[3])] }. , [33;1m\ys_4. [0m, synth { ys_4 -> ['List {y_3*, ys_4*} ?[("check",[1,3,3])("synth",[0])("X",[3])]] }. , [33;1m\jh_5. [0m, synth { jh_5 -> ['List A_0] }. , <> @ p | v [y, ys, jh] @ ([] 5 ), ([([([] 5 ) @ p | q [] @ <>] 5 ) @ p | q [] @ <>] 5 ) | <>, <> @ p | r [] @ ([] 5 ), [34;1m!p. [] ['Emb jh_5][0m]
err >   5: [30;42m[?[("check",[1])("S",[0])] := ['List A_0], ?[("check",[1])("T",[1])] := ['Arr ['List A_0] ['List A_0]], ?[("check",[1,3])("S",[0])] := ['List A_0], ?[("check",[1,3])("T",[1])] := ['List A_0], ?[("check",[1,3,3])("synth",[0])("X",[3])] := A_0][0m
err >   [ty = ['List A]]
err >   p?tm. [4mcase[0m tm {['Lam \x. body] -> 'Type?S. 'Type?T. (ty ~ ['Arr S T] | \y. synth {y -> {y*} S}. check@q. q!{y*} T. q!{y*, x=y} body.) ; 'Nil -> [4mcase[0m ty {'One ->  ; ['List S] ->  ; otherwise -> #"wrong type for Nil"} ; ['Cons s t] -> [4mcase[0m ty {['Pair S T] -> (check@q. q!S. q!s. | check@r. r!T. r!t.) ; ['List S] -> (check@q. q!S. q!s. | check@r. r!['List S]. r!t.) ; otherwise -> #"wrong type for Cons"} ; ['Emb e] -> synth@q. q!e. q?S. S ~ ty}
err >
err > [4mexec[0m 
err >   [<type |-@p {}, check |-@p {}, synth |-@p {}, ([] 0 ) | <>, [33;1m\A_0. [0m, type { A_0 -> [] }. , <> @ p | p [A] @ ([] 0 ), ([] 2 ) | <>, [33;1m\y_1. [0m, synth { y_1 -> {y_1*} ?[("check",[1])("S",[0])] }. , <> @ p | q [y] @ ([] 2 ), ([] 4 ) | <>, [33;1m\y_2. [0m, synth { y_2 -> {y_2*} ?[("check",[1,3])("S",[0])] }. , <> @ p | q [y] @ ([] 4 ), <> @ p | q [] @ ([[34;1m!q. [] ['List A_0][0m] 4 [e = ['ListElim ['List A] y ['Emb y] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]], tm = ['Emb ['ListElim ['List A] y ['Emb y] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]]], ty = {y*} ?[("check",[1,3])("T",[1])]] q?S. S ~ ty), ([] 4 ) | <>, ([([([] 4 ) @ p | q [] @ <>] 4 ) @ p | r [] @ <>] 4 ) | <>, ([([([] 4 ) @ p | q [] @ <>] 4 ) @ p | q [] @ <>] 4 ) | <>, ([([] 5 ) @ p | u [] @ <>] 5 ) | <>, [33;1m\y_3. [0m, synth { y_3 -> {y_3*} ?[("check",[1,3,3])("synth",[0])("X",[3])] }. , [33;1m\ys_4. [0m, synth { ys_4 -> ['List {y_3*, ys_4*} ?[("check",[1,3,3])("synth",[0])("X",[3])]] }. , [33;1m\jh_5. [0m, synth { jh_5 -> ['List A_0] }. , <> @ p | v [y, ys, jh] @ ([] 5 ), ([([([] 5 ) @ p | q [] @ <>] 5 ) @ p | q [] @ <>] 5 ) | <>, <> @ p | r [] @ ([] 5 )]
err >   5: [30;42m[?[("check",[1])("S",[0])] := ['List A_0], ?[("check",[1])("T",[1])] := ['Arr ['List A_0] ['List A_0]], ?[("check",[1,3])("S",[0])] := ['List A_0], ?[("check",[1,3])("T",[1])] := ['List A_0], ?[("check",[1,3,3])("synth",[0])("X",[3])] := A_0][0m
err >   [tm = ['Emb jh], ty = ['List A]]
err >   [4mcase[0m tm {['Lam \x. body] -> 'Type?S. 'Type?T. (ty ~ ['Arr S T] | \y. synth {y -> {y*} S}. check@q. q!{y*} T. q!{y*, x=y} body.) ; 'Nil -> [4mcase[0m ty {'One ->  ; ['List S] ->  ; otherwise -> #"wrong type for Nil"} ; ['Cons s t] -> [4mcase[0m ty {['Pair S T] -> (check@q. q!S. q!s. | check@r. r!T. r!t.) ; ['List S] -> (check@q. q!S. q!s. | check@r. r!['List S]. r!t.) ; otherwise -> #"wrong type for Cons"} ; ['Emb e] -> synth@q. q!e. q?S. S ~ ty}
err >
err > [4mexec[0m 
err >   [<type |-@p {}, check |-@p {}, synth |-@p {}, ([] 0 ) | <>, [33;1m\A_0. [0m, type { A_0 -> [] }. , <> @ p | p [A] @ ([] 0 ), ([] 2 ) | <>, [33;1m\y_1. [0m, synth { y_1 -> {y_1*} ?[("check",[1])("S",[0])] }. , <> @ p | q [y] @ ([] 2 ), ([] 4 ) | <>, [33;1m\y_2. [0m, synth { y_2 -> {y_2*} ?[("check",[1,3])("S",[0])] }. , <> @ p | q [y] @ ([] 4 ), <> @ p | q [] @ ([[34;1m!q. [] ['List A_0][0m] 4 [e = ['ListElim ['List A] y ['Emb y] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]], tm = ['Emb ['ListElim ['List A] y ['Emb y] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]]], ty = {y*} ?[("check",[1,3])("T",[1])]] q?S. S ~ ty), ([] 4 ) | <>, ([([([] 4 ) @ p | q [] @ <>] 4 ) @ p | r [] @ <>] 4 ) | <>, ([([([] 4 ) @ p | q [] @ <>] 4 ) @ p | q [] @ <>] 4 ) | <>, ([([] 5 ) @ p | u [] @ <>] 5 ) | <>, [33;1m\y_3. [0m, synth { y_3 -> {y_3*} ?[("check",[1,3,3])("synth",[0])("X",[3])] }. , [33;1m\ys_4. [0m, synth { ys_4 -> ['List {y_3*, ys_4*} ?[("check",[1,3,3])("synth",[0])("X",[3])]] }. , [33;1m\jh_5. [0m, synth { jh_5 -> ['List A_0] }. , <> @ p | v [y, ys, jh] @ ([] 5 ), ([([([] 5 ) @ p | q [] @ <>] 5 ) @ p | q [] @ <>] 5 ) | <>, <> @ p | r [] @ ([] 5 )]
err >   5: [30;42m[?[("check",[1])("S",[0])] := ['List A_0], ?[("check",[1])("T",[1])] := ['Arr ['List A_0] ['List A_0]], ?[("check",[1,3])("S",[0])] := ['List A_0], ?[("check",[1,3])("T",[1])] := ['List A_0], ?[("check",[1,3,3])("synth",[0])("X",[3])] := A_0][0m
err >   [e = jh, tm = ['Emb jh], ty = ['List A]]
err >   synth@q. q!e. q?S. S ~ ty
err >
err > [4mexec[0m 
err >   [<type |-@p {}, check |-@p {}, synth |-@p {}, ([] 0 ) | <>, [33;1m\A_0. [0m, type { A_0 -> [] }. , <> @ p | p [A] @ ([] 0 ), ([] 2 ) | <>, [33;1m\y_1. [0m, synth { y_1 -> {y_1*} ?[("check",[1])("S",[0])] }. , <> @ p | q [y] @ ([] 2 ), ([] 4 ) | <>, [33;1m\y_2. [0m, synth { y_2 -> {y_2*} ?[("check",[1,3])("S",[0])] }. , <> @ p | q [y] @ ([] 4 ), <> @ p | q [] @ ([[34;1m!q. [] ['List A_0][0m] 4 [e = ['ListElim ['List A] y ['Emb y] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]], tm = ['Emb ['ListElim ['List A] y ['Emb y] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]]], ty = {y*} ?[("check",[1,3])("T",[1])]] q?S. S ~ ty), ([] 4 ) | <>, ([([([] 4 ) @ p | q [] @ <>] 4 ) @ p | r [] @ <>] 4 ) | <>, ([([([] 4 ) @ p | q [] @ <>] 4 ) @ p | q [] @ <>] 4 ) | <>, ([([] 5 ) @ p | u [] @ <>] 5 ) | <>, [33;1m\y_3. [0m, synth { y_3 -> {y_3*} ?[("check",[1,3,3])("synth",[0])("X",[3])] }. , [33;1m\ys_4. [0m, synth { ys_4 -> ['List {y_3*, ys_4*} ?[("check",[1,3,3])("synth",[0])("X",[3])]] }. , [33;1m\jh_5. [0m, synth { jh_5 -> ['List A_0] }. , <> @ p | v [y, ys, jh] @ ([] 5 ), ([([([] 5 ) @ p | q [] @ <>] 5 ) @ p | q [] @ <>] 5 ) | <>, <> @ p | r [] @ ([] 5 ), ([] 5 [] p?tm. [4mlookup[0m tm {S -> p!S.} [4melse[0m p!S.) @ p | q [] @ <>]
err >   5: [30;42m[?[("check",[1])("S",[0])] := ['List A_0], ?[("check",[1])("T",[1])] := ['Arr ['List A_0] ['List A_0]], ?[("check",[1,3])("S",[0])] := ['List A_0], ?[("check",[1,3])("T",[1])] := ['List A_0], ?[("check",[1,3,3])("synth",[0])("X",[3])] := A_0][0m
err >   [e = jh, tm = ['Emb jh], ty = ['List A]]
err >   q!e. q?S. S ~ ty
err >
err > [4mexec[0m 
err >   [<type |-@p {}, check |-@p {}, synth |-@p {}, ([] 0 ) | <>, [33;1m\A_0. [0m, type { A_0 -> [] }. , <> @ p | p [A] @ ([] 0 ), ([] 2 ) | <>, [33;1m\y_1. [0m, synth { y_1 -> {y_1*} ?[("check",[1])("S",[0])] }. , <> @ p | q [y] @ ([] 2 ), ([] 4 ) | <>, [33;1m\y_2. [0m, synth { y_2 -> {y_2*} ?[("check",[1,3])("S",[0])] }. , <> @ p | q [y] @ ([] 4 ), <> @ p | q [] @ ([[34;1m!q. [] ['List A_0][0m] 4 [e = ['ListElim ['List A] y ['Emb y] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]], tm = ['Emb ['ListElim ['List A] y ['Emb y] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]]], ty = {y*} ?[("check",[1,3])("T",[1])]] q?S. S ~ ty), ([] 4 ) | <>, ([([([] 4 ) @ p | q [] @ <>] 4 ) @ p | r [] @ <>] 4 ) | <>, ([([([] 4 ) @ p | q [] @ <>] 4 ) @ p | q [] @ <>] 4 ) | <>, ([([] 5 ) @ p | u [] @ <>] 5 ) | <>, [33;1m\y_3. [0m, synth { y_3 -> {y_3*} ?[("check",[1,3,3])("synth",[0])("X",[3])] }. , [33;1m\ys_4. [0m, synth { ys_4 -> ['List {y_3*, ys_4*} ?[("check",[1,3,3])("synth",[0])("X",[3])]] }. , [33;1m\jh_5. [0m, synth { jh_5 -> ['List A_0] }. , <> @ p | v [y, ys, jh] @ ([] 5 ), ([([([] 5 ) @ p | q [] @ <>] 5 ) @ p | q [] @ <>] 5 ) | <>, <> @ p | r [] @ ([] 5 ), <> @ p | q [] @ ([] 5 [e = jh, tm = ['Emb jh], ty = ['List A]] q?S. S ~ ty), [34;1m!p. [] jh_5[0m]
err >   5: [30;42m[?[("check",[1])("S",[0])] := ['List A_0], ?[("check",[1])("T",[1])] := ['Arr ['List A_0] ['List A_0]], ?[("check",[1,3])("S",[0])] := ['List A_0], ?[("check",[1,3])("T",[1])] := ['List A_0], ?[("check",[1,3,3])("synth",[0])("X",[3])] := A_0][0m
err >   []
err >   p?tm. [4mlookup[0m tm {S -> p!S.} [4melse[0m p!S.
err >
err > [4mexec[0m 
err >   [<type |-@p {}, check |-@p {}, synth |-@p {}, ([] 0 ) | <>, [33;1m\A_0. [0m, type { A_0 -> [] }. , <> @ p | p [A] @ ([] 0 ), ([] 2 ) | <>, [33;1m\y_1. [0m, synth { y_1 -> {y_1*} ?[("check",[1])("S",[0])] }. , <> @ p | q [y] @ ([] 2 ), ([] 4 ) | <>, [33;1m\y_2. [0m, synth { y_2 -> {y_2*} ?[("check",[1,3])("S",[0])] }. , <> @ p | q [y] @ ([] 4 ), <> @ p | q [] @ ([[34;1m!q. [] ['List A_0][0m] 4 [e = ['ListElim ['List A] y ['Emb y] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]], tm = ['Emb ['ListElim ['List A] y ['Emb y] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]]], ty = {y*} ?[("check",[1,3])("T",[1])]] q?S. S ~ ty), ([] 4 ) | <>, ([([([] 4 ) @ p | q [] @ <>] 4 ) @ p | r [] @ <>] 4 ) | <>, ([([([] 4 ) @ p | q [] @ <>] 4 ) @ p | q [] @ <>] 4 ) | <>, ([([] 5 ) @ p | u [] @ <>] 5 ) | <>, [33;1m\y_3. [0m, synth { y_3 -> {y_3*} ?[("check",[1,3,3])("synth",[0])("X",[3])] }. , [33;1m\ys_4. [0m, synth { ys_4 -> ['List {y_3*, ys_4*} ?[("check",[1,3,3])("synth",[0])("X",[3])]] }. , [33;1m\jh_5. [0m, synth { jh_5 -> ['List A_0] }. , <> @ p | v [y, ys, jh] @ ([] 5 ), ([([([] 5 ) @ p | q [] @ <>] 5 ) @ p | q [] @ <>] 5 ) | <>, <> @ p | r [] @ ([] 5 ), <> @ p | q [] @ ([] 5 [e = jh, tm = ['Emb jh], ty = ['List A]] q?S. S ~ ty)]
err >   5: [30;42m[?[("check",[1])("S",[0])] := ['List A_0], ?[("check",[1])("T",[1])] := ['Arr ['List A_0] ['List A_0]], ?[("check",[1,3])("S",[0])] := ['List A_0], ?[("check",[1,3])("T",[1])] := ['List A_0], ?[("check",[1,3,3])("synth",[0])("X",[3])] := A_0][0m
err >   [tm = jh]
err >   [4mlookup[0m tm {S -> p!S.} [4melse[0m p!S.
err >
err > [4mexec[0m 
err >   [<type |-@p {}, check |-@p {}, synth |-@p {}, ([] 0 ) | <>, [33;1m\A_0. [0m, type { A_0 -> [] }. , <> @ p | p [A] @ ([] 0 ), ([] 2 ) | <>, [33;1m\y_1. [0m, synth { y_1 -> {y_1*} ?[("check",[1])("S",[0])] }. , <> @ p | q [y] @ ([] 2 ), ([] 4 ) | <>, [33;1m\y_2. [0m, synth { y_2 -> {y_2*} ?[("check",[1,3])("S",[0])] }. , <> @ p | q [y] @ ([] 4 ), <> @ p | q [] @ ([[34;1m!q. [] ['List A_0][0m] 4 [e = ['ListElim ['List A] y ['Emb y] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]], tm = ['Emb ['ListElim ['List A] y ['Emb y] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]]], ty = {y*} ?[("check",[1,3])("T",[1])]] q?S. S ~ ty), ([] 4 ) | <>, ([([([] 4 ) @ p | q [] @ <>] 4 ) @ p | r [] @ <>] 4 ) | <>, ([([([] 4 ) @ p | q [] @ <>] 4 ) @ p | q [] @ <>] 4 ) | <>, ([([] 5 ) @ p | u [] @ <>] 5 ) | <>, [33;1m\y_3. [0m, synth { y_3 -> {y_3*} ?[("check",[1,3,3])("synth",[0])("X",[3])] }. , [33;1m\ys_4. [0m, synth { ys_4 -> ['List {y_3*, ys_4*} ?[("check",[1,3,3])("synth",[0])("X",[3])]] }. , [33;1m\jh_5. [0m, synth { jh_5 -> ['List A_0] }. , <> @ p | v [y, ys, jh] @ ([] 5 ), ([([([] 5 ) @ p | q [] @ <>] 5 ) @ p | q [] @ <>] 5 ) | <>, <> @ p | r [] @ ([] 5 ), <> @ p | q [] @ ([] 5 [e = jh, tm = ['Emb jh], ty = ['List A]] q?S. S ~ ty)]
err >   5: [30;42m[?[("check",[1])("S",[0])] := ['List A_0], ?[("check",[1])("T",[1])] := ['Arr ['List A_0] ['List A_0]], ?[("check",[1,3])("S",[0])] := ['List A_0], ?[("check",[1,3])("T",[1])] := ['List A_0], ?[("check",[1,3,3])("synth",[0])("X",[3])] := A_0][0m
err >   [S = ['List A], tm = jh]
err >   p!S.
err >
err > [4mexec[0m 
err >   [<type |-@p {}, check |-@p {}, synth |-@p {}, ([] 0 ) | <>, [33;1m\A_0. [0m, type { A_0 -> [] }. , <> @ p | p [A] @ ([] 0 ), ([] 2 ) | <>, [33;1m\y_1. [0m, synth { y_1 -> {y_1*} ?[("check",[1])("S",[0])] }. , <> @ p | q [y] @ ([] 2 ), ([] 4 ) | <>, [33;1m\y_2. [0m, synth { y_2 -> {y_2*} ?[("check",[1,3])("S",[0])] }. , <> @ p | q [y] @ ([] 4 ), <> @ p | q [] @ ([[34;1m!q. [] ['List A_0][0m] 4 [e = ['ListElim ['List A] y ['Emb y] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]], tm = ['Emb ['ListElim ['List A] y ['Emb y] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]]], ty = {y*} ?[("check",[1,3])("T",[1])]] q?S. S ~ ty), ([] 4 ) | <>, ([([([] 4 ) @ p | q [] @ <>] 4 ) @ p | r [] @ <>] 4 ) | <>, ([([([] 4 ) @ p | q [] @ <>] 4 ) @ p | q [] @ <>] 4 ) | <>, ([([] 5 ) @ p | u [] @ <>] 5 ) | <>, [33;1m\y_3. [0m, synth { y_3 -> {y_3*} ?[("check",[1,3,3])("synth",[0])("X",[3])] }. , [33;1m\ys_4. [0m, synth { ys_4 -> ['List {y_3*, ys_4*} ?[("check",[1,3,3])("synth",[0])("X",[3])]] }. , [33;1m\jh_5. [0m, synth { jh_5 -> ['List A_0] }. , <> @ p | v [y, ys, jh] @ ([] 5 ), ([([([] 5 ) @ p | q [] @ <>] 5 ) @ p | q [] @ <>] 5 ) | <>, <> @ p | r [] @ ([] 5 ), <> @ p | q [] @ ([[34;1m!q. [] ['List A_0][0m] 5 [e = jh, tm = ['Emb jh], ty = ['List A]] q?S. S ~ ty)]
err >   5: [30;42m[?[("check",[1])("S",[0])] := ['List A_0], ?[("check",[1])("T",[1])] := ['Arr ['List A_0] ['List A_0]], ?[("check",[1,3])("S",[0])] := ['List A_0], ?[("check",[1,3])("T",[1])] := ['List A_0], ?[("check",[1,3,3])("synth",[0])("X",[3])] := A_0][0m
err >   
err >   
err >
err > [4mexec[0m 
err >   [<type |-@p {}, check |-@p {}, synth |-@p {}, ([] 0 ) | <>, [33;1m\A_0. [0m, type { A_0 -> [] }. , <> @ p | p [A] @ ([] 0 ), ([] 2 ) | <>, [33;1m\y_1. [0m, synth { y_1 -> {y_1*} ?[("check",[1])("S",[0])] }. , <> @ p | q [y] @ ([] 2 ), ([] 4 ) | <>, [33;1m\y_2. [0m, synth { y_2 -> {y_2*} ?[("check",[1,3])("S",[0])] }. , <> @ p | q [y] @ ([] 4 ), <> @ p | q [] @ ([[34;1m!q. [] ['List A_0][0m] 4 [e = ['ListElim ['List A] y ['Emb y] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]], tm = ['Emb ['ListElim ['List A] y ['Emb y] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]]], ty = {y*} ?[("check",[1,3])("T",[1])]] q?S. S ~ ty), ([] 4 ) | <>, ([([([] 4 ) @ p | q [] @ <>] 4 ) @ p | r [] @ <>] 4 ) | <>, ([([([] 4 ) @ p | q [] @ <>] 4 ) @ p | q [] @ <>] 4 ) | <>, ([([] 5 ) @ p | u [] @ <>] 5 ) | <>, [33;1m\y_3. [0m, synth { y_3 -> {y_3*} ?[("check",[1,3,3])("synth",[0])("X",[3])] }. , [33;1m\ys_4. [0m, synth { ys_4 -> ['List {y_3*, ys_4*} ?[("check",[1,3,3])("synth",[0])("X",[3])]] }. , [33;1m\jh_5. [0m, synth { jh_5 -> ['List A_0] }. , <> @ p | v [y, ys, jh] @ ([] 5 ), ([([([] 5 ) @ p | q [] @ <>] 5 ) @ p | q [] @ <>] 5 ) | <>, <> @ p | r [] @ ([] 5 ), ([] 5 ) @ p | q [] @ <>, [34;1m!q. [] ['List A_0][0m]
err >   5: [30;42m[?[("check",[1])("S",[0])] := ['List A_0], ?[("check",[1])("T",[1])] := ['Arr ['List A_0] ['List A_0]], ?[("check",[1,3])("S",[0])] := ['List A_0], ?[("check",[1,3])("T",[1])] := ['List A_0], ?[("check",[1,3,3])("synth",[0])("X",[3])] := A_0][0m
err >   [e = jh, tm = ['Emb jh], ty = ['List A]]
err >   q?S. S ~ ty
err >
err > [4mexec[0m 
err >   [<type |-@p {}, check |-@p {}, synth |-@p {}, ([] 0 ) | <>, [33;1m\A_0. [0m, type { A_0 -> [] }. , <> @ p | p [A] @ ([] 0 ), ([] 2 ) | <>, [33;1m\y_1. [0m, synth { y_1 -> {y_1*} ?[("check",[1])("S",[0])] }. , <> @ p | q [y] @ ([] 2 ), ([] 4 ) | <>, [33;1m\y_2. [0m, synth { y_2 -> {y_2*} ?[("check",[1,3])("S",[0])] }. , <> @ p | q [y] @ ([] 4 ), <> @ p | q [] @ ([[34;1m!q. [] ['List A_0][0m] 4 [e = ['ListElim ['List A] y ['Emb y] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]], tm = ['Emb ['ListElim ['List A] y ['Emb y] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]]], ty = {y*} ?[("check",[1,3])("T",[1])]] q?S. S ~ ty), ([] 4 ) | <>, ([([([] 4 ) @ p | q [] @ <>] 4 ) @ p | r [] @ <>] 4 ) | <>, ([([([] 4 ) @ p | q [] @ <>] 4 ) @ p | q [] @ <>] 4 ) | <>, ([([] 5 ) @ p | u [] @ <>] 5 ) | <>, [33;1m\y_3. [0m, synth { y_3 -> {y_3*} ?[("check",[1,3,3])("synth",[0])("X",[3])] }. , [33;1m\ys_4. [0m, synth { ys_4 -> ['List {y_3*, ys_4*} ?[("check",[1,3,3])("synth",[0])("X",[3])]] }. , [33;1m\jh_5. [0m, synth { jh_5 -> ['List A_0] }. , <> @ p | v [y, ys, jh] @ ([] 5 ), ([([([] 5 ) @ p | q [] @ <>] 5 ) @ p | q [] @ <>] 5 ) | <>, <> @ p | r [] @ ([] 5 ), ([] 5 ) @ p | q [] @ <>]
err >   5: [30;42m[?[("check",[1])("S",[0])] := ['List A_0], ?[("check",[1])("T",[1])] := ['Arr ['List A_0] ['List A_0]], ?[("check",[1,3])("S",[0])] := ['List A_0], ?[("check",[1,3])("T",[1])] := ['List A_0], ?[("check",[1,3,3])("synth",[0])("X",[3])] := A_0][0m
err >   [S = ['List A], e = jh, tm = ['Emb jh], ty = ['List A]]
err >   S ~ ty
err >
err > [4mexec[0m 
err >   [<type |-@p {}, check |-@p {}, synth |-@p {}, ([] 0 ) | <>, [33;1m\A_0. [0m, type { A_0 -> [] }. , <> @ p | p [A] @ ([] 0 ), ([] 2 ) | <>, [33;1m\y_1. [0m, synth { y_1 -> {y_1*} ?[("check",[1])("S",[0])] }. , <> @ p | q [y] @ ([] 2 ), ([] 4 ) | <>, [33;1m\y_2. [0m, synth { y_2 -> {y_2*} ?[("check",[1,3])("S",[0])] }. , <> @ p | q [y] @ ([] 4 ), <> @ p | q [] @ ([[34;1m!q. [] ['List A_0][0m] 4 [e = ['ListElim ['List A] y ['Emb y] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]], tm = ['Emb ['ListElim ['List A] y ['Emb y] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]]], ty = {y*} ?[("check",[1,3])("T",[1])]] q?S. S ~ ty), ([] 4 ) | <>, ([([([] 4 ) @ p | q [] @ <>] 4 ) @ p | r [] @ <>] 4 ) | <>, ([([([] 4 ) @ p | q [] @ <>] 4 ) @ p | q [] @ <>] 4 ) | <>, ([([] 5 ) @ p | u [] @ <>] 5 ) | <>, [33;1m\y_3. [0m, synth { y_3 -> {y_3*} ?[("check",[1,3,3])("synth",[0])("X",[3])] }. , [33;1m\ys_4. [0m, synth { ys_4 -> ['List {y_3*, ys_4*} ?[("check",[1,3,3])("synth",[0])("X",[3])]] }. , [33;1m\jh_5. [0m, synth { jh_5 -> ['List A_0] }. , <> @ p | v [y, ys, jh] @ ([] 5 ), ([([([] 5 ) @ p | q [] @ <>] 5 ) @ p | q [] @ <>] 5 ) | <>, ([([] 5 ) @ p | q [] @ <>] 5 ) @ p | r [] @ <>]
err >   5: [30;42m[?[("check",[1])("S",[0])] := ['List A_0], ?[("check",[1])("T",[1])] := ['Arr ['List A_0] ['List A_0]], ?[("check",[1,3])("S",[0])] := ['List A_0], ?[("check",[1,3])("T",[1])] := ['List A_0], ?[("check",[1,3,3])("synth",[0])("X",[3])] := A_0][0m
err >   
err >   
err >
err > [4mexec[0m 
err >   [<type |-@p {}, check |-@p {}, synth |-@p {}, ([] 0 ) | <>, [33;1m\A_0. [0m, type { A_0 -> [] }. , <> @ p | p [A] @ ([] 0 ), ([] 2 ) | <>, [33;1m\y_1. [0m, synth { y_1 -> {y_1*} ?[("check",[1])("S",[0])] }. , <> @ p | q [y] @ ([] 2 ), ([] 4 ) | <>, [33;1m\y_2. [0m, synth { y_2 -> {y_2*} ?[("check",[1,3])("S",[0])] }. , <> @ p | q [y] @ ([] 4 ), <> @ p | q [] @ ([[34;1m!q. [] ['List A_0][0m] 4 [e = ['ListElim ['List A] y ['Emb y] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]], tm = ['Emb ['ListElim ['List A] y ['Emb y] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]]], ty = {y*} ?[("check",[1,3])("T",[1])]] q?S. S ~ ty), ([] 4 ) | <>, ([([([] 4 ) @ p | q [] @ <>] 4 ) @ p | r [] @ <>] 4 ) | <>, ([([([] 4 ) @ p | q [] @ <>] 4 ) @ p | q [] @ <>] 4 ) | <>, ([([] 5 ) @ p | u [] @ <>] 5 ) | <>, [33;1m\y_3. [0m, synth { y_3 -> {y_3*} ?[("check",[1,3,3])("synth",[0])("X",[3])] }. , [33;1m\ys_4. [0m, synth { ys_4 -> ['List {y_3*, ys_4*} ?[("check",[1,3,3])("synth",[0])("X",[3])]] }. , [33;1m\jh_5. [0m, synth { jh_5 -> ['List A_0] }. , ([([([([] 5 ) @ p | q [] @ <>] 5 ) @ p | q [] @ <>] 5 ) | <>, ([([] 5 ) @ p | q [] @ <>] 5 ) @ p | r [] @ <>] 5 ) @ p | v [y, ys, jh] @ <>]
err >   5: [30;42m[?[("check",[1])("S",[0])] := ['List A_0], ?[("check",[1])("T",[1])] := ['Arr ['List A_0] ['List A_0]], ?[("check",[1,3])("S",[0])] := ['List A_0], ?[("check",[1,3])("T",[1])] := ['List A_0], ?[("check",[1,3,3])("synth",[0])("X",[3])] := A_0][0m
err >   
err >   
err >
err > [4mexec[0m 
err >   [<type |-@p {}, check |-@p {}, synth |-@p {}, ([] 0 ) | <>, [33;1m\A_0. [0m, type { A_0 -> [] }. , <> @ p | p [A] @ ([] 0 ), ([] 2 ) | <>, [33;1m\y_1. [0m, synth { y_1 -> {y_1*} ?[("check",[1])("S",[0])] }. , <> @ p | q [y] @ ([] 2 ), ([] 4 ) | <>, [33;1m\y_2. [0m, synth { y_2 -> {y_2*} ?[("check",[1,3])("S",[0])] }. , <> @ p | q [y] @ ([] 4 ), <> @ p | q [] @ ([[34;1m!q. [] ['List A_0][0m] 4 [e = ['ListElim ['List A] y ['Emb y] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]], tm = ['Emb ['ListElim ['List A] y ['Emb y] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]]], ty = {y*} ?[("check",[1,3])("T",[1])]] q?S. S ~ ty), ([] 4 ) | <>, ([([([] 4 ) @ p | q [] @ <>] 4 ) @ p | r [] @ <>] 4 ) | <>, <> | ([([([] 5 ) @ p | u [] @ <>] 5 ) | <>, [33;1m\y_3. [0m, synth { y_3 -> {y_3*} ?[("check",[1,3,3])("synth",[0])("X",[3])] }. , [33;1m\ys_4. [0m, synth { ys_4 -> ['List {y_3*, ys_4*} ?[("check",[1,3,3])("synth",[0])("X",[3])]] }. , [33;1m\jh_5. [0m, synth { jh_5 -> ['List A_0] }. , ([([([([] 5 ) @ p | q [] @ <>] 5 ) @ p | q [] @ <>] 5 ) | <>, ([([] 5 ) @ p | q [] @ <>] 5 ) @ p | r [] @ <>] 5 ) @ p | v [y, ys, jh] @ <>] 5 ), ([([] 4 ) @ p | q [] @ <>] 4 ) @ p | q [] @ <>]
err >   5: [30;42m[?[("check",[1])("S",[0])] := ['List A_0], ?[("check",[1])("T",[1])] := ['Arr ['List A_0] ['List A_0]], ?[("check",[1,3])("S",[0])] := ['List A_0], ?[("check",[1,3])("T",[1])] := ['List A_0], ?[("check",[1,3,3])("synth",[0])("X",[3])] := A_0][0m
err >   
err >   
err >
err > [4mexec[0m 
err >   [<type |-@p {}, check |-@p {}, synth |-@p {}, ([] 0 ) | <>, [33;1m\A_0. [0m, type { A_0 -> [] }. , <> @ p | p [A] @ ([] 0 ), ([] 2 ) | <>, [33;1m\y_1. [0m, synth { y_1 -> {y_1*} ?[("check",[1])("S",[0])] }. , <> @ p | q [y] @ ([] 2 ), ([] 4 ) | <>, [33;1m\y_2. [0m, synth { y_2 -> {y_2*} ?[("check",[1,3])("S",[0])] }. , <> @ p | q [y] @ ([] 4 ), <> @ p | q [] @ ([[34;1m!q. [] ['List A_0][0m] 4 [e = ['ListElim ['List A] y ['Emb y] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]], tm = ['Emb ['ListElim ['List A] y ['Emb y] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]]], ty = {y*} ?[("check",[1,3])("T",[1])]] q?S. S ~ ty), ([] 4 ) | <>, ([([([] 4 ) @ p | q [] @ <>] 4 ) @ p | r [] @ <>] 4 ) | <>, <> | ([([([] 5 ) @ p | u [] @ <>] 5 ) | <>, [33;1m\y_3. [0m, synth { y_3 -> {y_3*} ?[("check",[1,3,3])("synth",[0])("X",[3])] }. , [33;1m\ys_4. [0m, synth { ys_4 -> ['List {y_3*, ys_4*} ?[("check",[1,3,3])("synth",[0])("X",[3])]] }. , [33;1m\jh_5. [0m, synth { jh_5 -> ['List A_0] }. , ([([([([] 5 ) @ p | q [] @ <>] 5 ) @ p | q [] @ <>] 5 ) | <>, ([([] 5 ) @ p | q [] @ <>] 5 ) @ p | r [] @ <>] 5 ) @ p | v [y, ys, jh] @ <>] 5 ), <> @ p | q [] @ ([] 5 ), ([] 4 ) @ p | q [] @ <>]
err >   5: [30;42m[?[("check",[1])("S",[0])] := ['List A_0], ?[("check",[1])("T",[1])] := ['Arr ['List A_0] ['List A_0]], ?[("check",[1,3])("S",[0])] := ['List A_0], ?[("check",[1,3])("T",[1])] := ['List A_0], ?[("check",[1,3,3])("synth",[0])("X",[3])] := A_0][0m
err >   
err >   
err >
err > [4mexec[0m 
err >   [<type |-@p {}, check |-@p {}, synth |-@p {}, ([] 0 ) | <>, [33;1m\A_0. [0m, type { A_0 -> [] }. , <> @ p | p [A] @ ([] 0 ), ([] 2 ) | <>, [33;1m\y_1. [0m, synth { y_1 -> {y_1*} ?[("check",[1])("S",[0])] }. , <> @ p | q [y] @ ([] 2 ), ([] 4 ) | <>, [33;1m\y_2. [0m, synth { y_2 -> {y_2*} ?[("check",[1,3])("S",[0])] }. , <> @ p | q [y] @ ([] 4 ), <> @ p | q [] @ ([[34;1m!q. [] ['List A_0][0m] 4 [e = ['ListElim ['List A] y ['Emb y] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]], tm = ['Emb ['ListElim ['List A] y ['Emb y] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]]], ty = {y*} ?[("check",[1,3])("T",[1])]] q?S. S ~ ty), ([] 4 ) | <>, ([([([] 4 ) @ p | q [] @ <>] 4 ) @ p | r [] @ <>] 4 ) | <>, <> | ([([([] 5 ) @ p | u [] @ <>] 5 ) | <>, [33;1m\y_3. [0m, synth { y_3 -> {y_3*} ?[("check",[1,3,3])("synth",[0])("X",[3])] }. , [33;1m\ys_4. [0m, synth { ys_4 -> ['List {y_3*, ys_4*} ?[("check",[1,3,3])("synth",[0])("X",[3])]] }. , [33;1m\jh_5. [0m, synth { jh_5 -> ['List A_0] }. , ([([([([] 5 ) @ p | q [] @ <>] 5 ) @ p | q [] @ <>] 5 ) | <>, ([([] 5 ) @ p | q [] @ <>] 5 ) @ p | r [] @ <>] 5 ) @ p | v [y, ys, jh] @ <>] 5 ), <> @ p | q [] @ ([] 5 ), <> @ p | q [] @ ([] 5 )]
err >   5: [30;42m[?[("check",[1])("S",[0])] := ['List A_0], ?[("check",[1])("T",[1])] := ['Arr ['List A_0] ['List A_0]], ?[("check",[1,3])("S",[0])] := ['List A_0], ?[("check",[1,3])("T",[1])] := ['List A_0], ?[("check",[1,3,3])("synth",[0])("X",[3])] := A_0][0m
err >   
err >   
err >
err > [4mexec[0m 
err >   [<type |-@p {}, check |-@p {}, synth |-@p {}, ([] 0 ) | <>, [33;1m\A_0. [0m, type { A_0 -> [] }. , <> @ p | p [A] @ ([] 0 ), ([] 2 ) | <>, [33;1m\y_1. [0m, synth { y_1 -> {y_1*} ?[("check",[1])("S",[0])] }. , <> @ p | q [y] @ ([] 2 ), ([] 4 ) | <>, [33;1m\y_2. [0m, synth { y_2 -> {y_2*} ?[("check",[1,3])("S",[0])] }. , <> @ p | q [y] @ ([] 4 ), <> @ p | q [] @ ([[34;1m!q. [] ['List A_0][0m] 4 [e = ['ListElim ['List A] y ['Emb y] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]], tm = ['Emb ['ListElim ['List A] y ['Emb y] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]]], ty = {y*} ?[("check",[1,3])("T",[1])]] q?S. S ~ ty), ([] 4 ) | <>, ([([([] 4 ) @ p | q [] @ <>] 4 ) @ p | r [] @ <>] 4 ) | <>, <> | ([([([] 5 ) @ p | u [] @ <>] 5 ) | <>, [33;1m\y_3. [0m, synth { y_3 -> {y_3*} ?[("check",[1,3,3])("synth",[0])("X",[3])] }. , [33;1m\ys_4. [0m, synth { ys_4 -> ['List {y_3*, ys_4*} ?[("check",[1,3,3])("synth",[0])("X",[3])]] }. , [33;1m\jh_5. [0m, synth { jh_5 -> ['List A_0] }. , ([([([([] 5 ) @ p | q [] @ <>] 5 ) @ p | q [] @ <>] 5 ) | <>, ([([] 5 ) @ p | q [] @ <>] 5 ) @ p | r [] @ <>] 5 ) @ p | v [y, ys, jh] @ <>] 5 ), <> @ p | q [] @ ([] 5 ), ([] 5 ) @ p | q [] @ <>]
err >   5: [30;42m[?[("check",[1])("S",[0])] := ['List A_0], ?[("check",[1])("T",[1])] := ['Arr ['List A_0] ['List A_0]], ?[("check",[1,3])("S",[0])] := ['List A_0], ?[("check",[1,3])("T",[1])] := ['List A_0], ?[("check",[1,3,3])("synth",[0])("X",[3])] := A_0][0m
err >   
err >   
err >
err > [4mexec[0m 
err >   [<type |-@p {}, check |-@p {}, synth |-@p {}, ([] 0 ) | <>, [33;1m\A_0. [0m, type { A_0 -> [] }. , <> @ p | p [A] @ ([] 0 ), ([] 2 ) | <>, [33;1m\y_1. [0m, synth { y_1 -> {y_1*} ?[("check",[1])("S",[0])] }. , <> @ p | q [y] @ ([] 2 ), ([] 4 ) | <>, [33;1m\y_2. [0m, synth { y_2 -> {y_2*} ?[("check",[1,3])("S",[0])] }. , <> @ p | q [y] @ ([] 4 ), <> @ p | q [] @ ([[34;1m!q. [] ['List A_0][0m] 4 [e = ['ListElim ['List A] y ['Emb y] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]], tm = ['Emb ['ListElim ['List A] y ['Emb y] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]]], ty = {y*} ?[("check",[1,3])("T",[1])]] q?S. S ~ ty), ([] 4 ) | <>, ([([([] 4 ) @ p | q [] @ <>] 4 ) @ p | r [] @ <>] 4 ) | <>, <> | ([([([] 5 ) @ p | u [] @ <>] 5 ) | <>, [33;1m\y_3. [0m, synth { y_3 -> {y_3*} ?[("check",[1,3,3])("synth",[0])("X",[3])] }. , [33;1m\ys_4. [0m, synth { ys_4 -> ['List {y_3*, ys_4*} ?[("check",[1,3,3])("synth",[0])("X",[3])]] }. , [33;1m\jh_5. [0m, synth { jh_5 -> ['List A_0] }. , ([([([([] 5 ) @ p | q [] @ <>] 5 ) @ p | q [] @ <>] 5 ) | <>, ([([] 5 ) @ p | q [] @ <>] 5 ) @ p | r [] @ <>] 5 ) @ p | v [y, ys, jh] @ <>] 5 ), ([([] 5 ) @ p | q [] @ <>] 5 ) @ p | q [] @ <>]
err >   5: [30;42m[?[("check",[1])("S",[0])] := ['List A_0], ?[("check",[1])("T",[1])] := ['Arr ['List A_0] ['List A_0]], ?[("check",[1,3])("S",[0])] := ['List A_0], ?[("check",[1,3])("T",[1])] := ['List A_0], ?[("check",[1,3,3])("synth",[0])("X",[3])] := A_0][0m
err >   
err >   
err >
err > [4mexec[0m 
err >   [<type |-@p {}, check |-@p {}, synth |-@p {}, ([] 0 ) | <>, [33;1m\A_0. [0m, type { A_0 -> [] }. , <> @ p | p [A] @ ([] 0 ), ([] 2 ) | <>, [33;1m\y_1. [0m, synth { y_1 -> {y_1*} ?[("check",[1])("S",[0])] }. , <> @ p | q [y] @ ([] 2 ), ([] 4 ) | <>, [33;1m\y_2. [0m, synth { y_2 -> {y_2*} ?[("check",[1,3])("S",[0])] }. , <> @ p | q [y] @ ([] 4 ), <> @ p | q [] @ ([[34;1m!q. [] ['List A_0][0m] 4 [e = ['ListElim ['List A] y ['Emb y] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]], tm = ['Emb ['ListElim ['List A] y ['Emb y] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]]], ty = {y*} ?[("check",[1,3])("T",[1])]] q?S. S ~ ty), ([] 4 ) | <>, ([([([] 4 ) @ p | q [] @ <>] 4 ) @ p | r [] @ <>] 4 ) | <>, ([([([] 5 ) @ p | q [] @ <>] 5 ) @ p | q [] @ <>] 5 ) | <>, ([([] 5 ) @ p | u [] @ <>] 5 ) | <>, [33;1m\y_3. [0m, synth { y_3 -> {y_3*} ?[("check",[1,3,3])("synth",[0])("X",[3])] }. , [33;1m\ys_4. [0m, synth { ys_4 -> ['List {y_3*, ys_4*} ?[("check",[1,3,3])("synth",[0])("X",[3])]] }. , [33;1m\jh_5. [0m, synth { jh_5 -> ['List A_0] }. , ([([([([] 5 ) @ p | q [] @ <>] 5 ) @ p | q [] @ <>] 5 ) | <>, ([([] 5 ) @ p | q [] @ <>] 5 ) @ p | r [] @ <>] 5 ) @ p | v [y, ys, jh] @ <>]
err >   5: [30;42m[?[("check",[1])("S",[0])] := ['List A_0], ?[("check",[1])("T",[1])] := ['Arr ['List A_0] ['List A_0]], ?[("check",[1,3])("S",[0])] := ['List A_0], ?[("check",[1,3])("T",[1])] := ['List A_0], ?[("check",[1,3,3])("synth",[0])("X",[3])] := A_0][0m
err >   
err >   
err >
err > [4mexec[0m 
err >   [<type |-@p {}, check |-@p {}, synth |-@p {}, ([] 0 ) | <>, [33;1m\A_0. [0m, type { A_0 -> [] }. , <> @ p | p [A] @ ([] 0 ), ([] 2 ) | <>, [33;1m\y_1. [0m, synth { y_1 -> {y_1*} ?[("check",[1])("S",[0])] }. , <> @ p | q [y] @ ([] 2 ), ([] 4 ) | <>, [33;1m\y_2. [0m, synth { y_2 -> {y_2*} ?[("check",[1,3])("S",[0])] }. , <> @ p | q [y] @ ([] 4 ), <> @ p | q [] @ ([[34;1m!q. [] ['List A_0][0m] 4 [e = ['ListElim ['List A] y ['Emb y] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]], tm = ['Emb ['ListElim ['List A] y ['Emb y] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]]], ty = {y*} ?[("check",[1,3])("T",[1])]] q?S. S ~ ty), ([] 4 ) | <>, <> | ([([([([] 5 ) @ p | q [] @ <>] 5 ) @ p | q [] @ <>] 5 ) | <>, ([([] 5 ) @ p | u [] @ <>] 5 ) | <>, [33;1m\y_3. [0m, synth { y_3 -> {y_3*} ?[("check",[1,3,3])("synth",[0])("X",[3])] }. , [33;1m\ys_4. [0m, synth { ys_4 -> ['List {y_3*, ys_4*} ?[("check",[1,3,3])("synth",[0])("X",[3])]] }. , [33;1m\jh_5. [0m, synth { jh_5 -> ['List A_0] }. , ([([([([] 5 ) @ p | q [] @ <>] 5 ) @ p | q [] @ <>] 5 ) | <>, ([([] 5 ) @ p | q [] @ <>] 5 ) @ p | r [] @ <>] 5 ) @ p | v [y, ys, jh] @ <>] 5 ), ([([] 4 ) @ p | q [] @ <>] 4 ) @ p | r [] @ <>]
err >   5: [30;42m[?[("check",[1])("S",[0])] := ['List A_0], ?[("check",[1])("T",[1])] := ['Arr ['List A_0] ['List A_0]], ?[("check",[1,3])("S",[0])] := ['List A_0], ?[("check",[1,3])("T",[1])] := ['List A_0], ?[("check",[1,3,3])("synth",[0])("X",[3])] := A_0][0m
err >   
err >   
err >
err > [4mexec[0m 
err >   [<type |-@p {}, check |-@p {}, synth |-@p {}, ([] 0 ) | <>, [33;1m\A_0. [0m, type { A_0 -> [] }. , <> @ p | p [A] @ ([] 0 ), ([] 2 ) | <>, [33;1m\y_1. [0m, synth { y_1 -> {y_1*} ?[("check",[1])("S",[0])] }. , <> @ p | q [y] @ ([] 2 ), ([] 4 ) | <>, [33;1m\y_2. [0m, synth { y_2 -> {y_2*} ?[("check",[1,3])("S",[0])] }. , <> @ p | q [y] @ ([] 4 ), <> @ p | q [] @ ([[34;1m!q. [] ['List A_0][0m] 4 [e = ['ListElim ['List A] y ['Emb y] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]], tm = ['Emb ['ListElim ['List A] y ['Emb y] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]]], ty = {y*} ?[("check",[1,3])("T",[1])]] q?S. S ~ ty), ([] 4 ) | <>, <> | ([([([([] 5 ) @ p | q [] @ <>] 5 ) @ p | q [] @ <>] 5 ) | <>, ([([] 5 ) @ p | u [] @ <>] 5 ) | <>, [33;1m\y_3. [0m, synth { y_3 -> {y_3*} ?[("check",[1,3,3])("synth",[0])("X",[3])] }. , [33;1m\ys_4. [0m, synth { ys_4 -> ['List {y_3*, ys_4*} ?[("check",[1,3,3])("synth",[0])("X",[3])]] }. , [33;1m\jh_5. [0m, synth { jh_5 -> ['List A_0] }. , ([([([([] 5 ) @ p | q [] @ <>] 5 ) @ p | q [] @ <>] 5 ) | <>, ([([] 5 ) @ p | q [] @ <>] 5 ) @ p | r [] @ <>] 5 ) @ p | v [y, ys, jh] @ <>] 5 ), <> @ p | r [] @ ([] 5 ), ([] 4 ) @ p | q [] @ <>]
err >   5: [30;42m[?[("check",[1])("S",[0])] := ['List A_0], ?[("check",[1])("T",[1])] := ['Arr ['List A_0] ['List A_0]], ?[("check",[1,3])("S",[0])] := ['List A_0], ?[("check",[1,3])("T",[1])] := ['List A_0], ?[("check",[1,3,3])("synth",[0])("X",[3])] := A_0][0m
err >   
err >   
err >
err > [4mexec[0m 
err >   [<type |-@p {}, check |-@p {}, synth |-@p {}, ([] 0 ) | <>, [33;1m\A_0. [0m, type { A_0 -> [] }. , <> @ p | p [A] @ ([] 0 ), ([] 2 ) | <>, [33;1m\y_1. [0m, synth { y_1 -> {y_1*} ?[("check",[1])("S",[0])] }. , <> @ p | q [y] @ ([] 2 ), ([] 4 ) | <>, [33;1m\y_2. [0m, synth { y_2 -> {y_2*} ?[("check",[1,3])("S",[0])] }. , <> @ p | q [y] @ ([] 4 ), <> @ p | q [] @ ([[34;1m!q. [] ['List A_0][0m] 4 [e = ['ListElim ['List A] y ['Emb y] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]], tm = ['Emb ['ListElim ['List A] y ['Emb y] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]]], ty = {y*} ?[("check",[1,3])("T",[1])]] q?S. S ~ ty), ([] 4 ) | <>, <> | ([([([([] 5 ) @ p | q [] @ <>] 5 ) @ p | q [] @ <>] 5 ) | <>, ([([] 5 ) @ p | u [] @ <>] 5 ) | <>, [33;1m\y_3. [0m, synth { y_3 -> {y_3*} ?[("check",[1,3,3])("synth",[0])("X",[3])] }. , [33;1m\ys_4. [0m, synth { ys_4 -> ['List {y_3*, ys_4*} ?[("check",[1,3,3])("synth",[0])("X",[3])]] }. , [33;1m\jh_5. [0m, synth { jh_5 -> ['List A_0] }. , ([([([([] 5 ) @ p | q [] @ <>] 5 ) @ p | q [] @ <>] 5 ) | <>, ([([] 5 ) @ p | q [] @ <>] 5 ) @ p | r [] @ <>] 5 ) @ p | v [y, ys, jh] @ <>] 5 ), <> @ p | r [] @ ([] 5 ), <> @ p | q [] @ ([] 5 )]
err >   5: [30;42m[?[("check",[1])("S",[0])] := ['List A_0], ?[("check",[1])("T",[1])] := ['Arr ['List A_0] ['List A_0]], ?[("check",[1,3])("S",[0])] := ['List A_0], ?[("check",[1,3])("T",[1])] := ['List A_0], ?[("check",[1,3,3])("synth",[0])("X",[3])] := A_0][0m
err >   
err >   
err >
err > [4mexec[0m 
err >   [<type |-@p {}, check |-@p {}, synth |-@p {}, ([] 0 ) | <>, [33;1m\A_0. [0m, type { A_0 -> [] }. , <> @ p | p [A] @ ([] 0 ), ([] 2 ) | <>, [33;1m\y_1. [0m, synth { y_1 -> {y_1*} ?[("check",[1])("S",[0])] }. , <> @ p | q [y] @ ([] 2 ), ([] 4 ) | <>, [33;1m\y_2. [0m, synth { y_2 -> {y_2*} ?[("check",[1,3])("S",[0])] }. , <> @ p | q [y] @ ([] 4 ), <> @ p | q [] @ ([[34;1m!q. [] ['List A_0][0m] 4 [e = ['ListElim ['List A] y ['Emb y] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]], tm = ['Emb ['ListElim ['List A] y ['Emb y] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]]], ty = {y*} ?[("check",[1,3])("T",[1])]] q?S. S ~ ty), ([] 4 ) | <>, <> | ([([([([] 5 ) @ p | q [] @ <>] 5 ) @ p | q [] @ <>] 5 ) | <>, ([([] 5 ) @ p | u [] @ <>] 5 ) | <>, [33;1m\y_3. [0m, synth { y_3 -> {y_3*} ?[("check",[1,3,3])("synth",[0])("X",[3])] }. , [33;1m\ys_4. [0m, synth { ys_4 -> ['List {y_3*, ys_4*} ?[("check",[1,3,3])("synth",[0])("X",[3])]] }. , [33;1m\jh_5. [0m, synth { jh_5 -> ['List A_0] }. , ([([([([] 5 ) @ p | q [] @ <>] 5 ) @ p | q [] @ <>] 5 ) | <>, ([([] 5 ) @ p | q [] @ <>] 5 ) @ p | r [] @ <>] 5 ) @ p | v [y, ys, jh] @ <>] 5 ), <> @ p | r [] @ ([] 5 ), ([] 5 ) @ p | q [] @ <>]
err >   5: [30;42m[?[("check",[1])("S",[0])] := ['List A_0], ?[("check",[1])("T",[1])] := ['Arr ['List A_0] ['List A_0]], ?[("check",[1,3])("S",[0])] := ['List A_0], ?[("check",[1,3])("T",[1])] := ['List A_0], ?[("check",[1,3,3])("synth",[0])("X",[3])] := A_0][0m
err >   
err >   
err >
err > [4mexec[0m 
err >   [<type |-@p {}, check |-@p {}, synth |-@p {}, ([] 0 ) | <>, [33;1m\A_0. [0m, type { A_0 -> [] }. , <> @ p | p [A] @ ([] 0 ), ([] 2 ) | <>, [33;1m\y_1. [0m, synth { y_1 -> {y_1*} ?[("check",[1])("S",[0])] }. , <> @ p | q [y] @ ([] 2 ), ([] 4 ) | <>, [33;1m\y_2. [0m, synth { y_2 -> {y_2*} ?[("check",[1,3])("S",[0])] }. , <> @ p | q [y] @ ([] 4 ), <> @ p | q [] @ ([[34;1m!q. [] ['List A_0][0m] 4 [e = ['ListElim ['List A] y ['Emb y] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]], tm = ['Emb ['ListElim ['List A] y ['Emb y] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]]], ty = {y*} ?[("check",[1,3])("T",[1])]] q?S. S ~ ty), ([] 4 ) | <>, <> | ([([([([] 5 ) @ p | q [] @ <>] 5 ) @ p | q [] @ <>] 5 ) | <>, ([([] 5 ) @ p | u [] @ <>] 5 ) | <>, [33;1m\y_3. [0m, synth { y_3 -> {y_3*} ?[("check",[1,3,3])("synth",[0])("X",[3])] }. , [33;1m\ys_4. [0m, synth { ys_4 -> ['List {y_3*, ys_4*} ?[("check",[1,3,3])("synth",[0])("X",[3])]] }. , [33;1m\jh_5. [0m, synth { jh_5 -> ['List A_0] }. , ([([([([] 5 ) @ p | q [] @ <>] 5 ) @ p | q [] @ <>] 5 ) | <>, ([([] 5 ) @ p | q [] @ <>] 5 ) @ p | r [] @ <>] 5 ) @ p | v [y, ys, jh] @ <>] 5 ), ([([] 5 ) @ p | q [] @ <>] 5 ) @ p | r [] @ <>]
err >   5: [30;42m[?[("check",[1])("S",[0])] := ['List A_0], ?[("check",[1])("T",[1])] := ['Arr ['List A_0] ['List A_0]], ?[("check",[1,3])("S",[0])] := ['List A_0], ?[("check",[1,3])("T",[1])] := ['List A_0], ?[("check",[1,3,3])("synth",[0])("X",[3])] := A_0][0m
err >   
err >   
err >
err > [4mexec[0m 
err >   [<type |-@p {}, check |-@p {}, synth |-@p {}, ([] 0 ) | <>, [33;1m\A_0. [0m, type { A_0 -> [] }. , <> @ p | p [A] @ ([] 0 ), ([] 2 ) | <>, [33;1m\y_1. [0m, synth { y_1 -> {y_1*} ?[("check",[1])("S",[0])] }. , <> @ p | q [y] @ ([] 2 ), ([] 4 ) | <>, [33;1m\y_2. [0m, synth { y_2 -> {y_2*} ?[("check",[1,3])("S",[0])] }. , <> @ p | q [y] @ ([] 4 ), <> @ p | q [] @ ([[34;1m!q. [] ['List A_0][0m] 4 [e = ['ListElim ['List A] y ['Emb y] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]], tm = ['Emb ['ListElim ['List A] y ['Emb y] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]]], ty = {y*} ?[("check",[1,3])("T",[1])]] q?S. S ~ ty), ([] 4 ) | <>, ([([([] 5 ) @ p | q [] @ <>] 5 ) @ p | r [] @ <>] 5 ) | <>, ([([([] 5 ) @ p | q [] @ <>] 5 ) @ p | q [] @ <>] 5 ) | <>, ([([] 5 ) @ p | u [] @ <>] 5 ) | <>, [33;1m\y_3. [0m, synth { y_3 -> {y_3*} ?[("check",[1,3,3])("synth",[0])("X",[3])] }. , [33;1m\ys_4. [0m, synth { ys_4 -> ['List {y_3*, ys_4*} ?[("check",[1,3,3])("synth",[0])("X",[3])]] }. , [33;1m\jh_5. [0m, synth { jh_5 -> ['List A_0] }. , ([([([([] 5 ) @ p | q [] @ <>] 5 ) @ p | q [] @ <>] 5 ) | <>, ([([] 5 ) @ p | q [] @ <>] 5 ) @ p | r [] @ <>] 5 ) @ p | v [y, ys, jh] @ <>]
err >   5: [30;42m[?[("check",[1])("S",[0])] := ['List A_0], ?[("check",[1])("T",[1])] := ['Arr ['List A_0] ['List A_0]], ?[("check",[1,3])("S",[0])] := ['List A_0], ?[("check",[1,3])("T",[1])] := ['List A_0], ?[("check",[1,3,3])("synth",[0])("X",[3])] := A_0][0m
err >   
err >   
err >
err > [4mexec[0m 
err >   [<type |-@p {}, check |-@p {}, synth |-@p {}, ([] 0 ) | <>, [33;1m\A_0. [0m, type { A_0 -> [] }. , <> @ p | p [A] @ ([] 0 ), ([] 2 ) | <>, [33;1m\y_1. [0m, synth { y_1 -> {y_1*} ?[("check",[1])("S",[0])] }. , <> @ p | q [y] @ ([] 2 ), ([] 4 ) | <>, [33;1m\y_2. [0m, synth { y_2 -> {y_2*} ?[("check",[1,3])("S",[0])] }. , <> @ p | q [y] @ ([] 4 ), <> @ p | q [] @ ([[34;1m!q. [] ['List A_0][0m] 4 [e = ['ListElim ['List A] y ['Emb y] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]], tm = ['Emb ['ListElim ['List A] y ['Emb y] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]]], ty = {y*} ?[("check",[1,3])("T",[1])]] q?S. S ~ ty), <> | ([([([([] 5 ) @ p | q [] @ <>] 5 ) @ p | r [] @ <>] 5 ) | <>, ([([([] 5 ) @ p | q [] @ <>] 5 ) @ p | q [] @ <>] 5 ) | <>, ([([] 5 ) @ p | u [] @ <>] 5 ) | <>, [33;1m\y_3. [0m, synth { y_3 -> {y_3*} ?[("check",[1,3,3])("synth",[0])("X",[3])] }. , [33;1m\ys_4. [0m, synth { ys_4 -> ['List {y_3*, ys_4*} ?[("check",[1,3,3])("synth",[0])("X",[3])]] }. , [33;1m\jh_5. [0m, synth { jh_5 -> ['List A_0] }. , ([([([([] 5 ) @ p | q [] @ <>] 5 ) @ p | q [] @ <>] 5 ) | <>, ([([] 5 ) @ p | q [] @ <>] 5 ) @ p | r [] @ <>] 5 ) @ p | v [y, ys, jh] @ <>] 5 )]
err >   5: [30;42m[?[("check",[1])("S",[0])] := ['List A_0], ?[("check",[1])("T",[1])] := ['Arr ['List A_0] ['List A_0]], ?[("check",[1,3])("S",[0])] := ['List A_0], ?[("check",[1,3])("T",[1])] := ['List A_0], ?[("check",[1,3,3])("synth",[0])("X",[3])] := A_0][0m
err >   
err >   
err >
err > [4mexec[0m 
err >   [<type |-@p {}, check |-@p {}, synth |-@p {}, ([] 0 ) | <>, [33;1m\A_0. [0m, type { A_0 -> [] }. , <> @ p | p [A] @ ([] 0 ), ([] 2 ) | <>, [33;1m\y_1. [0m, synth { y_1 -> {y_1*} ?[("check",[1])("S",[0])] }. , <> @ p | q [y] @ ([] 2 ), ([] 4 ) | <>, [33;1m\y_2. [0m, synth { y_2 -> {y_2*} ?[("check",[1,3])("S",[0])] }. , <> @ p | q [y] @ ([] 4 ), <> @ p | q [] @ ([[34;1m!q. [] ['List A_0][0m] 4 [e = ['ListElim ['List A] y ['Emb y] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]], tm = ['Emb ['ListElim ['List A] y ['Emb y] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]]], ty = {y*} ?[("check",[1,3])("T",[1])]] q?S. S ~ ty), ([] 5 ) | <>, ([([([] 5 ) @ p | q [] @ <>] 5 ) @ p | r [] @ <>] 5 ) | <>, ([([([] 5 ) @ p | q [] @ <>] 5 ) @ p | q [] @ <>] 5 ) | <>, ([([] 5 ) @ p | u [] @ <>] 5 ) | <>, [33;1m\y_3. [0m, synth { y_3 -> {y_3*} ?[("check",[1,3,3])("synth",[0])("X",[3])] }. , [33;1m\ys_4. [0m, synth { ys_4 -> ['List {y_3*, ys_4*} ?[("check",[1,3,3])("synth",[0])("X",[3])]] }. , [33;1m\jh_5. [0m, synth { jh_5 -> ['List A_0] }. , ([([([([] 5 ) @ p | q [] @ <>] 5 ) @ p | q [] @ <>] 5 ) | <>, ([([] 5 ) @ p | q [] @ <>] 5 ) @ p | r [] @ <>] 5 ) @ p | v [y, ys, jh] @ <>]
err >   5: [30;42m[?[("check",[1])("S",[0])] := ['List A_0], ?[("check",[1])("T",[1])] := ['Arr ['List A_0] ['List A_0]], ?[("check",[1,3])("S",[0])] := ['List A_0], ?[("check",[1,3])("T",[1])] := ['List A_0], ?[("check",[1,3,3])("synth",[0])("X",[3])] := A_0][0m
err >   
err >   
err >
err > [4mexec[0m 
err >   [<type |-@p {}, check |-@p {}, synth |-@p {}, ([] 0 ) | <>, [33;1m\A_0. [0m, type { A_0 -> [] }. , <> @ p | p [A] @ ([] 0 ), ([] 2 ) | <>, [33;1m\y_1. [0m, synth { y_1 -> {y_1*} ?[("check",[1])("S",[0])] }. , <> @ p | q [y] @ ([] 2 ), ([] 4 ) | <>, [33;1m\y_2. [0m, synth { y_2 -> {y_2*} ?[("check",[1,3])("S",[0])] }. , <> @ p | q [y] @ ([] 4 ), ([([] 5 ) | <>, ([([([] 5 ) @ p | q [] @ <>] 5 ) @ p | r [] @ <>] 5 ) | <>, ([([([] 5 ) @ p | q [] @ <>] 5 ) @ p | q [] @ <>] 5 ) | <>, ([([] 5 ) @ p | u [] @ <>] 5 ) | <>, [33;1m\y_3. [0m, synth { y_3 -> {y_3*} ?[("check",[1,3,3])("synth",[0])("X",[3])] }. , [33;1m\ys_4. [0m, synth { ys_4 -> ['List {y_3*, ys_4*} ?[("check",[1,3,3])("synth",[0])("X",[3])]] }. , [33;1m\jh_5. [0m, synth { jh_5 -> ['List A_0] }. , ([([([([] 5 ) @ p | q [] @ <>] 5 ) @ p | q [] @ <>] 5 ) | <>, ([([] 5 ) @ p | q [] @ <>] 5 ) @ p | r [] @ <>] 5 ) @ p | v [y, ys, jh] @ <>] 5 ) @ p | q [] @ <>, [34;1m!q. [] ['List A_0][0m]
err >   5: [30;42m[?[("check",[1])("S",[0])] := ['List A_0], ?[("check",[1])("T",[1])] := ['Arr ['List A_0] ['List A_0]], ?[("check",[1,3])("S",[0])] := ['List A_0], ?[("check",[1,3])("T",[1])] := ['List A_0], ?[("check",[1,3,3])("synth",[0])("X",[3])] := A_0][0m
err >   [e = ['ListElim ['List A] y ['Emb y] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]], tm = ['Emb ['ListElim ['List A] y ['Emb y] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]]], ty = {y*} ?[("check",[1,3])("T",[1])]]
err >   q?S. S ~ ty
err >
err > [4mexec[0m 
err >   [<type |-@p {}, check |-@p {}, synth |-@p {}, ([] 0 ) | <>, [33;1m\A_0. [0m, type { A_0 -> [] }. , <> @ p | p [A] @ ([] 0 ), ([] 2 ) | <>, [33;1m\y_1. [0m, synth { y_1 -> {y_1*} ?[("check",[1])("S",[0])] }. , <> @ p | q [y] @ ([] 2 ), ([] 4 ) | <>, [33;1m\y_2. [0m, synth { y_2 -> {y_2*} ?[("check",[1,3])("S",[0])] }. , <> @ p | q [y] @ ([] 4 ), ([([] 5 ) | <>, ([([([] 5 ) @ p | q [] @ <>] 5 ) @ p | r [] @ <>] 5 ) | <>, ([([([] 5 ) @ p | q [] @ <>] 5 ) @ p | q [] @ <>] 5 ) | <>, ([([] 5 ) @ p | u [] @ <>] 5 ) | <>, [33;1m\y_3. [0m, synth { y_3 -> {y_3*} ?[("check",[1,3,3])("synth",[0])("X",[3])] }. , [33;1m\ys_4. [0m, synth { ys_4 -> ['List {y_3*, ys_4*} ?[("check",[1,3,3])("synth",[0])("X",[3])]] }. , [33;1m\jh_5. [0m, synth { jh_5 -> ['List A_0] }. , ([([([([] 5 ) @ p | q [] @ <>] 5 ) @ p | q [] @ <>] 5 ) | <>, ([([] 5 ) @ p | q [] @ <>] 5 ) @ p | r [] @ <>] 5 ) @ p | v [y, ys, jh] @ <>] 5 ) @ p | q [] @ <>]
err >   5: [30;42m[?[("check",[1])("S",[0])] := ['List A_0], ?[("check",[1])("T",[1])] := ['Arr ['List A_0] ['List A_0]], ?[("check",[1,3])("S",[0])] := ['List A_0], ?[("check",[1,3])("T",[1])] := ['List A_0], ?[("check",[1,3,3])("synth",[0])("X",[3])] := A_0][0m
err >   [S = ['List A], e = ['ListElim ['List A] y ['Emb y] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]], tm = ['Emb ['ListElim ['List A] y ['Emb y] \x. \_. \ih. ['Cons ['Emb x] ['Emb ih]]]], ty = {y*} ?[("check",[1,3])("T",[1])]]
err >   S ~ ty
err >
err > [4mexec[0m 
err >   [<type |-@p {}, check |-@p {}, synth |-@p {}, ([] 0 ) | <>, [33;1m\A_0. [0m, type { A_0 -> [] }. , <> @ p | p [A] @ ([] 0 ), ([] 2 ) | <>, [33;1m\y_1. [0m, synth { y_1 -> {y_1*} ?[("check",[1])("S",[0])] }. , <> @ p | q [y] @ ([] 2 ), ([] 4 ) | <>, [33;1m\y_2. [0m, synth { y_2 -> {y_2*} ?[("check",[1,3])("S",[0])] }. , ([([([] 5 ) | <>, ([([([] 5 ) @ p | q [] @ <>] 5 ) @ p | r [] @ <>] 5 ) | <>, ([([([] 5 ) @ p | q [] @ <>] 5 ) @ p | q [] @ <>] 5 ) | <>, ([([] 5 ) @ p | u [] @ <>] 5 ) | <>, [33;1m\y_3. [0m, synth { y_3 -> {y_3*} ?[("check",[1,3,3])("synth",[0])("X",[3])] }. , [33;1m\ys_4. [0m, synth { ys_4 -> ['List {y_3*, ys_4*} ?[("check",[1,3,3])("synth",[0])("X",[3])]] }. , [33;1m\jh_5. [0m, synth { jh_5 -> ['List A_0] }. , ([([([([] 5 ) @ p | q [] @ <>] 5 ) @ p | q [] @ <>] 5 ) | <>, ([([] 5 ) @ p | q [] @ <>] 5 ) @ p | r [] @ <>] 5 ) @ p | v [y, ys, jh] @ <>] 5 ) @ p | q [] @ <>] 5 ) @ p | q [y] @ <>]
err >   5: [30;42m[?[("check",[1])("S",[0])] := ['List A_0], ?[("check",[1])("T",[1])] := ['Arr ['List A_0] ['List A_0]], ?[("check",[1,3])("S",[0])] := ['List A_0], ?[("check",[1,3])("T",[1])] := ['List A_0], ?[("check",[1,3,3])("synth",[0])("X",[3])] := A_0][0m
err >   
err >   
err >
err > [4mexec[0m 
err >   [<type |-@p {}, check |-@p {}, synth |-@p {}, ([] 0 ) | <>, [33;1m\A_0. [0m, type { A_0 -> [] }. , <> @ p | p [A] @ ([] 0 ), ([] 2 ) | <>, [33;1m\y_1. [0m, synth { y_1 -> {y_1*} ?[("check",[1])("S",[0])] }. , <> @ p | q [y] @ ([] 2 ), <> | ([[33;1m\y_2. [0m, synth { y_2 -> {y_2*} ?[("check",[1,3])("S",[0])] }. , ([([([] 5 ) | <>, ([([([] 5 ) @ p | q [] @ <>] 5 ) @ p | r [] @ <>] 5 ) | <>, ([([([] 5 ) @ p | q [] @ <>] 5 ) @ p | q [] @ <>] 5 ) | <>, ([([] 5 ) @ p | u [] @ <>] 5 ) | <>, [33;1m\y_3. [0m, synth { y_3 -> {y_3*} ?[("check",[1,3,3])("synth",[0])("X",[3])] }. , [33;1m\ys_4. [0m, synth { ys_4 -> ['List {y_3*, ys_4*} ?[("check",[1,3,3])("synth",[0])("X",[3])]] }. , [33;1m\jh_5. [0m, synth { jh_5 -> ['List A_0] }. , ([([([([] 5 ) @ p | q [] @ <>] 5 ) @ p | q [] @ <>] 5 ) | <>, ([([] 5 ) @ p | q [] @ <>] 5 ) @ p | r [] @ <>] 5 ) @ p | v [y, ys, jh] @ <>] 5 ) @ p | q [] @ <>] 5 ) @ p | q [y] @ <>] 5 )]
err >   5: [30;42m[?[("check",[1])("S",[0])] := ['List A_0], ?[("check",[1])("T",[1])] := ['Arr ['List A_0] ['List A_0]], ?[("check",[1,3])("S",[0])] := ['List A_0], ?[("check",[1,3])("T",[1])] := ['List A_0], ?[("check",[1,3,3])("synth",[0])("X",[3])] := A_0][0m
err >   
err >   
err >
err > [4mexec[0m 
err >   [<type |-@p {}, check |-@p {}, synth |-@p {}, ([] 0 ) | <>, [33;1m\A_0. [0m, type { A_0 -> [] }. , <> @ p | p [A] @ ([] 0 ), ([] 2 ) | <>, [33;1m\y_1. [0m, synth { y_1 -> {y_1*} ?[("check",[1])("S",[0])] }. , <> @ p | q [y] @ ([] 2 ), ([] 5 ) | <>, [33;1m\y_2. [0m, synth { y_2 -> {y_2*} ?[("check",[1,3])("S",[0])] }. , ([([([] 5 ) | <>, ([([([] 5 ) @ p | q [] @ <>] 5 ) @ p | r [] @ <>] 5 ) | <>, ([([([] 5 ) @ p | q [] @ <>] 5 ) @ p | q [] @ <>] 5 ) | <>, ([([] 5 ) @ p | u [] @ <>] 5 ) | <>, [33;1m\y_3. [0m, synth { y_3 -> {y_3*} ?[("check",[1,3,3])("synth",[0])("X",[3])] }. , [33;1m\ys_4. [0m, synth { ys_4 -> ['List {y_3*, ys_4*} ?[("check",[1,3,3])("synth",[0])("X",[3])]] }. , [33;1m\jh_5. [0m, synth { jh_5 -> ['List A_0] }. , ([([([([] 5 ) @ p | q [] @ <>] 5 ) @ p | q [] @ <>] 5 ) | <>, ([([] 5 ) @ p | q [] @ <>] 5 ) @ p | r [] @ <>] 5 ) @ p | v [y, ys, jh] @ <>] 5 ) @ p | q [] @ <>] 5 ) @ p | q [y] @ <>]
err >   5: [30;42m[?[("check",[1])("S",[0])] := ['List A_0], ?[("check",[1])("T",[1])] := ['Arr ['List A_0] ['List A_0]], ?[("check",[1,3])("S",[0])] := ['List A_0], ?[("check",[1,3])("T",[1])] := ['List A_0], ?[("check",[1,3,3])("synth",[0])("X",[3])] := A_0][0m
err >   
err >   
err >
err > [4mexec[0m 
err >   [<type |-@p {}, check |-@p {}, synth |-@p {}, ([] 0 ) | <>, [33;1m\A_0. [0m, type { A_0 -> [] }. , <> @ p | p [A] @ ([] 0 ), ([] 2 ) | <>, [33;1m\y_1. [0m, synth { y_1 -> {y_1*} ?[("check",[1])("S",[0])] }. , ([([] 5 ) | <>, [33;1m\y_2. [0m, synth { y_2 -> {y_2*} ?[("check",[1,3])("S",[0])] }. , ([([([] 5 ) | <>, ([([([] 5 ) @ p | q [] @ <>] 5 ) @ p | r [] @ <>] 5 ) | <>, ([([([] 5 ) @ p | q [] @ <>] 5 ) @ p | q [] @ <>] 5 ) | <>, ([([] 5 ) @ p | u [] @ <>] 5 ) | <>, [33;1m\y_3. [0m, synth { y_3 -> {y_3*} ?[("check",[1,3,3])("synth",[0])("X",[3])] }. , [33;1m\ys_4. [0m, synth { ys_4 -> ['List {y_3*, ys_4*} ?[("check",[1,3,3])("synth",[0])("X",[3])]] }. , [33;1m\jh_5. [0m, synth { jh_5 -> ['List A_0] }. , ([([([([] 5 ) @ p | q [] @ <>] 5 ) @ p | q [] @ <>] 5 ) | <>, ([([] 5 ) @ p | q [] @ <>] 5 ) @ p | r [] @ <>] 5 ) @ p | v [y, ys, jh] @ <>] 5 ) @ p | q [] @ <>] 5 ) @ p | q [y] @ <>] 5 ) @ p | q [y] @ <>]
err >   5: [30;42m[?[("check",[1])("S",[0])] := ['List A_0], ?[("check",[1])("T",[1])] := ['Arr ['List A_0] ['List A_0]], ?[("check",[1,3])("S",[0])] := ['List A_0], ?[("check",[1,3])("T",[1])] := ['List A_0], ?[("check",[1,3,3])("synth",[0])("X",[3])] := A_0][0m
err >   
err >   
err >
err > [4mexec[0m 
err >   [<type |-@p {}, check |-@p {}, synth |-@p {}, ([] 0 ) | <>, [33;1m\A_0. [0m, type { A_0 -> [] }. , <> @ p | p [A] @ ([] 0 ), <> | ([[33;1m\y_1. [0m, synth { y_1 -> {y_1*} ?[("check",[1])("S",[0])] }. , ([([] 5 ) | <>, [33;1m\y_2. [0m, synth { y_2 -> {y_2*} ?[("check",[1,3])("S",[0])] }. , ([([([] 5 ) | <>, ([([([] 5 ) @ p | q [] @ <>] 5 ) @ p | r [] @ <>] 5 ) | <>, ([([([] 5 ) @ p | q [] @ <>] 5 ) @ p | q [] @ <>] 5 ) | <>, ([([] 5 ) @ p | u [] @ <>] 5 ) | <>, [33;1m\y_3. [0m, synth { y_3 -> {y_3*} ?[("check",[1,3,3])("synth",[0])("X",[3])] }. , [33;1m\ys_4. [0m, synth { ys_4 -> ['List {y_3*, ys_4*} ?[("check",[1,3,3])("synth",[0])("X",[3])]] }. , [33;1m\jh_5. [0m, synth { jh_5 -> ['List A_0] }. , ([([([([] 5 ) @ p | q [] @ <>] 5 ) @ p | q [] @ <>] 5 ) | <>, ([([] 5 ) @ p | q [] @ <>] 5 ) @ p | r [] @ <>] 5 ) @ p | v [y, ys, jh] @ <>] 5 ) @ p | q [] @ <>] 5 ) @ p | q [y] @ <>] 5 ) @ p | q [y] @ <>] 5 )]
err >   5: [30;42m[?[("check",[1])("S",[0])] := ['List A_0], ?[("check",[1])("T",[1])] := ['Arr ['List A_0] ['List A_0]], ?[("check",[1,3])("S",[0])] := ['List A_0], ?[("check",[1,3])("T",[1])] := ['List A_0], ?[("check",[1,3,3])("synth",[0])("X",[3])] := A_0][0m
err >   
err >   
err >
err > [4mexec[0m 
err >   [<type |-@p {}, check |-@p {}, synth |-@p {}, ([] 0 ) | <>, [33;1m\A_0. [0m, type { A_0 -> [] }. , <> @ p | p [A] @ ([] 0 ), ([] 5 ) | <>, [33;1m\y_1. [0m, synth { y_1 -> {y_1*} ?[("check",[1])("S",[0])] }. , ([([] 5 ) | <>, [33;1m\y_2. [0m, synth { y_2 -> {y_2*} ?[("check",[1,3])("S",[0])] }. , ([([([] 5 ) | <>, ([([([] 5 ) @ p | q [] @ <>] 5 ) @ p | r [] @ <>] 5 ) | <>, ([([([] 5 ) @ p | q [] @ <>] 5 ) @ p | q [] @ <>] 5 ) | <>, ([([] 5 ) @ p | u [] @ <>] 5 ) | <>, [33;1m\y_3. [0m, synth { y_3 -> {y_3*} ?[("check",[1,3,3])("synth",[0])("X",[3])] }. , [33;1m\ys_4. [0m, synth { ys_4 -> ['List {y_3*, ys_4*} ?[("check",[1,3,3])("synth",[0])("X",[3])]] }. , [33;1m\jh_5. [0m, synth { jh_5 -> ['List A_0] }. , ([([([([] 5 ) @ p | q [] @ <>] 5 ) @ p | q [] @ <>] 5 ) | <>, ([([] 5 ) @ p | q [] @ <>] 5 ) @ p | r [] @ <>] 5 ) @ p | v [y, ys, jh] @ <>] 5 ) @ p | q [] @ <>] 5 ) @ p | q [y] @ <>] 5 ) @ p | q [y] @ <>]
err >   5: [30;42m[?[("check",[1])("S",[0])] := ['List A_0], ?[("check",[1])("T",[1])] := ['Arr ['List A_0] ['List A_0]], ?[("check",[1,3])("S",[0])] := ['List A_0], ?[("check",[1,3])("T",[1])] := ['List A_0], ?[("check",[1,3,3])("synth",[0])("X",[3])] := A_0][0m
err >   
err >   
err >
err > [4mexec[0m 
err >   [<type |-@p {}, check |-@p {}, synth |-@p {}, ([] 0 ) | <>, [33;1m\A_0. [0m, type { A_0 -> [] }. , ([([] 5 ) | <>, [33;1m\y_1. [0m, synth { y_1 -> {y_1*} ?[("check",[1])("S",[0])] }. , ([([] 5 ) | <>, [33;1m\y_2. [0m, synth { y_2 -> {y_2*} ?[("check",[1,3])("S",[0])] }. , ([([([] 5 ) | <>, ([([([] 5 ) @ p | q [] @ <>] 5 ) @ p | r [] @ <>] 5 ) | <>, ([([([] 5 ) @ p | q [] @ <>] 5 ) @ p | q [] @ <>] 5 ) | <>, ([([] 5 ) @ p | u [] @ <>] 5 ) | <>, [33;1m\y_3. [0m, synth { y_3 -> {y_3*} ?[("check",[1,3,3])("synth",[0])("X",[3])] }. , [33;1m\ys_4. [0m, synth { ys_4 -> ['List {y_3*, ys_4*} ?[("check",[1,3,3])("synth",[0])("X",[3])]] }. , [33;1m\jh_5. [0m, synth { jh_5 -> ['List A_0] }. , ([([([([] 5 ) @ p | q [] @ <>] 5 ) @ p | q [] @ <>] 5 ) | <>, ([([] 5 ) @ p | q [] @ <>] 5 ) @ p | r [] @ <>] 5 ) @ p | v [y, ys, jh] @ <>] 5 ) @ p | q [] @ <>] 5 ) @ p | q [y] @ <>] 5 ) @ p | q [y] @ <>] 5 ) @ p | p [A] @ <>]
err >   5: [30;42m[?[("check",[1])("S",[0])] := ['List A_0], ?[("check",[1])("T",[1])] := ['Arr ['List A_0] ['List A_0]], ?[("check",[1,3])("S",[0])] := ['List A_0], ?[("check",[1,3])("T",[1])] := ['List A_0], ?[("check",[1,3,3])("synth",[0])("X",[3])] := A_0][0m
err >   
err >   
err >
err > [4mexec[0m 
err >   [<type |-@p {}, check |-@p {}, synth |-@p {}, <> | ([[33;1m\A_0. [0m, type { A_0 -> [] }. , ([([] 5 ) | <>, [33;1m\y_1. [0m, synth { y_1 -> {y_1*} ?[("check",[1])("S",[0])] }. , ([([] 5 ) | <>, [33;1m\y_2. [0m, synth { y_2 -> {y_2*} ?[("check",[1,3])("S",[0])] }. , ([([([] 5 ) | <>, ([([([] 5 ) @ p | q [] @ <>] 5 ) @ p | r [] @ <>] 5 ) | <>, ([([([] 5 ) @ p | q [] @ <>] 5 ) @ p | q [] @ <>] 5 ) | <>, ([([] 5 ) @ p | u [] @ <>] 5 ) | <>, [33;1m\y_3. [0m, synth { y_3 -> {y_3*} ?[("check",[1,3,3])("synth",[0])("X",[3])] }. , [33;1m\ys_4. [0m, synth { ys_4 -> ['List {y_3*, ys_4*} ?[("check",[1,3,3])("synth",[0])("X",[3])]] }. , [33;1m\jh_5. [0m, synth { jh_5 -> ['List A_0] }. , ([([([([] 5 ) @ p | q [] @ <>] 5 ) @ p | q [] @ <>] 5 ) | <>, ([([] 5 ) @ p | q [] @ <>] 5 ) @ p | r [] @ <>] 5 ) @ p | v [y, ys, jh] @ <>] 5 ) @ p | q [] @ <>] 5 ) @ p | q [y] @ <>] 5 ) @ p | q [y] @ <>] 5 ) @ p | p [A] @ <>] 5 )]
err >   5: [30;42m[?[("check",[1])("S",[0])] := ['List A_0], ?[("check",[1])("T",[1])] := ['Arr ['List A_0] ['List A_0]], ?[("check",[1,3])("S",[0])] := ['List A_0], ?[("check",[1,3])("T",[1])] := ['List A_0], ?[("check",[1,3,3])("synth",[0])("X",[3])] := A_0][0m
err >   
err >   
err >
err > [4mexec[0m 
err >   [<type |-@p {}, check |-@p {}, synth |-@p {}, ([] 5 ) | <>, [33;1m\A_0. [0m, type { A_0 -> [] }. , ([([] 5 ) | <>, [33;1m\y_1. [0m, synth { y_1 -> {y_1*} ?[("check",[1])("S",[0])] }. , ([([] 5 ) | <>, [33;1m\y_2. [0m, synth { y_2 -> {y_2*} ?[("check",[1,3])("S",[0])] }. , ([([([] 5 ) | <>, ([([([] 5 ) @ p | q [] @ <>] 5 ) @ p | r [] @ <>] 5 ) | <>, ([([([] 5 ) @ p | q [] @ <>] 5 ) @ p | q [] @ <>] 5 ) | <>, ([([] 5 ) @ p | u [] @ <>] 5 ) | <>, [33;1m\y_3. [0m, synth { y_3 -> {y_3*} ?[("check",[1,3,3])("synth",[0])("X",[3])] }. , [33;1m\ys_4. [0m, synth { ys_4 -> ['List {y_3*, ys_4*} ?[("check",[1,3,3])("synth",[0])("X",[3])]] }. , [33;1m\jh_5. [0m, synth { jh_5 -> ['List A_0] }. , ([([([([] 5 ) @ p | q [] @ <>] 5 ) @ p | q [] @ <>] 5 ) | <>, ([([] 5 ) @ p | q [] @ <>] 5 ) @ p | r [] @ <>] 5 ) @ p | v [y, ys, jh] @ <>] 5 ) @ p | q [] @ <>] 5 ) @ p | q [y] @ <>] 5 ) @ p | q [y] @ <>] 5 ) @ p | p [A] @ <>]
err >   5: [30;42m[?[("check",[1])("S",[0])] := ['List A_0], ?[("check",[1])("T",[1])] := ['Arr ['List A_0] ['List A_0]], ?[("check",[1,3])("S",[0])] := ['List A_0], ?[("check",[1,3])("T",[1])] := ['List A_0], ?[("check",[1,3,3])("synth",[0])("X",[3])] := A_0][0m
err >   
err >   
err >
