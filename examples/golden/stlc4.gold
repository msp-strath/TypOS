ret > ExitSuccess
out > Store:
out >  24: [?[("check",[1])("S",[0])] := 'Nat
out >      ,?[("check",[1])("T",[1])] := 'Nat
out >      ,?[("check",[1,3])("synth",[0])("",[2])("synth",[0])("",[0])("check",[0])("S",[0])] := 'Nat
out >      ,?[("check",[1,3])("synth",[0])("",[2])("synth",[0])("",[0])("check",[0])("T",[1])] := 'Nat
out >      ,?[("check",[1,3])("synth",[0])("U",[0])] := 'Nat
out >      ,?[("check",[1,3])("synth",[0])("V",[1])] := 'Nat]
out > Env: []
out > Stack:
out >  [<check |-@p {}
out >  ,synth |-@p {}
out >  ,([] 0 ) | <>
out >  ,[p|p[]]
out >    ([([] 24 ) | <>
out >     ,\z_0. 
out >     ,synth { z_0 -> {z_0*} ?[("check",[1])("S",[0])] }. 
out >     ,[p|q[z]]
out >       ([[p|q[]]
out >          ([([[p|q[]]
out >               ([([[p|q[]]
out >                    ([([] 24 ) | <>
out >                     ,\w_1. 
out >                     ,synth { w_1 -> {w_1*} ?[("check",[1,3])("synth",[0])("",[2])("synth",[0])("",[0])("check",[0])("S",[0])] }. 
out >                     ,[p|q[w]]
out >                       ([[p|q[]]
out >                          ([] 24 )
out >                          <>] 24 )
out >                       <>] 24 )
out >                    <>] 24 ) | <>] 24 )
out >               <>] 24 ) | <>
out >           ,([[p|r[]]
out >               ([[p|q[]]
out >                  ([] 24 )
out >                  <>] 24 )
out >               <>] 24 ) | <>] 24 )
out >          <>] 24 )
out >       <>] 24 )
out >    <>]
out >
err >
err >
