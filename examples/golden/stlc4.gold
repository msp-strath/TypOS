ret > ExitSuccess
out > Store:
out >  27: [?[("check",[1])("S",[0])] := 'Nat
out >      ,?[("check",[1])("T",[1])] := 'Nat
out >      ,?[("check",[1,3])("synth",[0])("",[2])("synth",[0])("",[0])("check",[0])("S",[0])] := 'Nat
out >      ,?[("check",[1,3])("synth",[0])("",[2])("synth",[0])("",[0])("check",[0])("T",[1])] := 'Nat
out >      ,?[("check",[1,3])("synth",[0])("U",[0])] := 'Nat
out >      ,?[("check",[1,3])("synth",[0])("V",[1])] := 'Nat]
out > Env: []
out > Stack:
out >  [<type |-@p {}
out >  ,check |-@p {}
out >  ,synth |-@p {}
out >  ,([] Done ) | <>
out >  ,[p|p[]]
out >    ([([] Done ) | <>
out >     ,\z_0. 
out >     ,ctxt |- z_0 -> {z_0*} ?[("check",[1])("S",[0])] . 
out >     ,[p|q[z]]
out >       ([[p|q[]]
out >          ([([[p|q[]]
out >               ([([[p|q[]]
out >                    ([([] Done ) | <>
out >                     ,\w_1. 
out >                     ,ctxt |- w_1 -> {w_1*} ?[("check",[1,3])("synth",[0])("",[2])("synth",[0])("",[0])("check",[0])("S",[0])] . 
out >                     ,[p|q[w]]
out >                       ([[p|q[]]
out >                          ([] Done )
out >                          <>] Done )
out >                       <>] Done )
out >                    <>] Done ) | <>
out >                ,([] Done ) | <>
out >                ,[p|q[]]
out >                  ([([[p|q[]]
out >                       ([] Done )
out >                       <>] Done ) | <>
out >                   ,[p|q[]]
out >                     ([] Done )
out >                     <>] Done )
out >                  <>] Done )
out >               <>] Done ) | <>
out >           ,([[p|r[]]
out >               ([[p|q[]]
out >                  ([] Done )
out >                  <>] Done )
out >               <>] Done ) | <>] Done )
out >          <>] Done )
out >       <>] Done )
out >    <>]
out >
err >
err >
