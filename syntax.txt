__________________________________________________________
                 |
  telescopes in  |  syntax (^^^ indicates optional parts)
_________________|________________________________________
                 |
  protocols      |  [?!$](x,y,z:type).
                 |       ^^^^^^^    ^
_________________|________________________________________
                 |
  sot            |  ^(x,y,z:type).sot
                 |   ^ ^^^^     ^
_________________|________________________________________
                 |
  op param decl  |  (name:sot)
                 |  ^^^^^^   ^
_________________|________________________________________
                 |
 op object decl  |  (name:pat)
                 |  ^^^^^^   ^
_________________|________________________________________
                 |
 op object defn  |  (pat:pat)
                 |  ^   ^^^^^
_________________|________________________________________
                 |
  op param defn  |  \x,y.pat
                 |  ^^^^^
_________________|________________________________________
                 |
   actor let     |  let (x : type) = expr.
                 |      ^        ^
_________________|________________________________________
                 |
  actor fresh    |  make (x,y,z : sot).
                 |       ^ ^^^^      ^
_________________|________________________________________
                 |
  actor under    |  ^(x,y,z : type).
                 |   ^ ^^^^       ^
_________________|________________________________________

  in judgementform postcondition:
    replace (op [thingy] decl) by schematic variable x means
      (x : _)       in object position
      (x : itstype) in param position
    e.g.
      {type T}
      check T t
      { t -['eq T-'Value] : 'Bool}
